{"name":"package:fixnum/fixnum.dart","children":[{"interfaces":[{"name":"intx","refId":"fixnum/intx"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"int64","children":[{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"parseRadix","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"radix","kind":"param","id":"radix"}],"kind":"method","comment":"\nParses a [String] in a given [radix] between 2 and 16 and returns an\n[int64].\n","id":"parseRadix2()","line":"121"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"parseInt","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"}],"kind":"method","comment":"\nParses a decimal [String] and returns an [int64].\n","id":"parseInt1()","line":"146"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"parseHex","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"}],"kind":"method","comment":"\nParses a hexadecimal [String] and returns an [int64].\n","id":"parseHex1()","line":"151"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_promote","children":[{"name":"other","kind":"param","id":"other"}],"isPrivate":true,"kind":"method","id":"_promote1()","line":"243"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"+","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"+1()","line":"257"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"-","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"-1()","line":"267"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"unary-","kind":"method","id":"unary-0()","line":"278"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"*","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"*1()","line":"287"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"%","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"%1()","line":"370"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"~/","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"~#slash1()","line":"382"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"remainder","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"remainder1()","line":"385"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"&","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"&1()","line":"394"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"|","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"|1()","line":"402"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"^","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"^1()","line":"410"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"~","kind":"method","id":"~0()","line":"418"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"<<1()","line":"423"},{"isOperator":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":">>1()","line":"447"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"shiftRightUnsigned1()","line":"488"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"==","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","comment":"\nReturns [true] if this [int64] has the same numeric value as the\ngiven object.  The argument may be an [int] or an [intx].\n","id":"==1()","line":"517"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"compareTo","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"compareTo1()","line":"525"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<1()","line":"550"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<=1()","line":"554"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">1()","line":"558"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">=1()","line":"562"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"abs","kind":"method","id":"abs0()","line":"582"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfLeadingZeros","kind":"method","comment":"\nReturns the number of leading zeros in this [int64] as an [int]\nbetween 0 and 64.\n","id":"numberOfLeadingZeros0()","line":"590"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfTrailingZeros","kind":"method","comment":"\nReturns the number of trailing zeros in this [int64] as an [int]\nbetween 0 and 64.\n","id":"numberOfTrailingZeros0()","line":"608"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"toBytes","kind":"method","id":"toBytes0()","line":"627"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"toInt","kind":"method","id":"toInt0()","line":"640"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"toInt32","kind":"method","comment":"\nReturns an [int32] containing the low 32 bits of this [int64].\n","id":"toInt320()","line":"664"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"toInt64","kind":"method","comment":"\nReturns [this].\n","id":"toInt640()","line":"671"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","comment":"\nReturns the value of this [int64] as a decimal [String].\n","id":"toString0()","line":"677"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toHexString","kind":"method","id":"toHexString0()","line":"705"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"radix","kind":"param","id":"radix"}],"kind":"method","id":"toRadixString1()","line":"720"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toDebugString","kind":"method","id":"toDebugString0()","line":"747"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"_hexDigit","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"digit","kind":"param","id":"digit"}],"isPrivate":true,"kind":"method","id":"_hexDigit1()","line":"784"},{"returnType":{"name":"void","refId":"void"},"name":"_negate","isPrivate":true,"kind":"method","id":"_negate0()","line":"789"},{"returnType":{"name":"void","refId":"void"},"name":"_setBit","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"bit","kind":"param","id":"bit"}],"isPrivate":true,"kind":"method","id":"_setBit1()","line":"800"},{"returnType":{"name":"void","refId":"void"},"name":"_toShru1","isPrivate":true,"kind":"method","id":"_toShru10()","line":"811"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_shiftRight","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"x","kind":"param","id":"x"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"isPrivate":true,"kind":"method","id":"_shiftRight2()","line":"822"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_trialSubtract","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"b","kind":"param","id":"b"}],"isPrivate":true,"kind":"method","comment":"\nAttempt to subtract b from a if a >= b:\n\nif (a >= b) {\n  a -= b;\n  return true;\n} else {\n  return false;\n}\n","id":"_trialSubtract2()","line":"845"},{"isStatic":true,"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_divModHelper","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"b","kind":"param","id":"b"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"negative","kind":"param","id":"negative","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"aIsNegative","kind":"param","id":"aIsNegative","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"aIsMinValue","kind":"param","id":"aIsMinValue","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"computeRemainder","kind":"param","id":"computeRemainder","line":"870"}],"isPrivate":true,"kind":"method","id":"_divModHelper6()","line":"868"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_divModByMinValue","children":[{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"computeRemainder","kind":"param","id":"computeRemainder"}],"isPrivate":true,"kind":"method","id":"_divModByMinValue1()","line":"908"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_maskRight","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"bits","kind":"param","id":"bits"}],"isPrivate":true,"kind":"method","comment":"\nthis &= ((1L << bits) - 1)\n","id":"_maskRight1()","line":"927"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_divModByShift","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"bpower","kind":"param","id":"bpower"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"negative","kind":"param","id":"negative"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"aIsCopy","kind":"param","id":"aIsCopy"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"aIsNegative","kind":"param","id":"aIsNegative","line":"948"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"computeRemainder","kind":"param","id":"computeRemainder","line":"948"}],"isPrivate":true,"kind":"method","id":"_divModByShift6()","line":"947"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_powerOfTwo","isPrivate":true,"kind":"method","comment":"\nReturn the exact log base 2 of this, or -1 if this is not a power of two.\n","id":"_powerOfTwo0()","line":"970"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"_divMod","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"b","kind":"param","id":"b"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"computeRemainder","kind":"param","id":"computeRemainder"}],"isPrivate":true,"kind":"method","id":"_divMod3()","line":"1000"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"MAX_VALUE","kind":"property","comment":"\nThe maximum positive value attainable by an [int64], namely\n9,223,372,036,854,775,807.\n","id":"MAX_VALUE","line":"68"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"MIN_VALUE","kind":"property","comment":"\nThe minimum positive value attainable by an [int64], namely\n-9,223,372,036,854,775,808.\n","id":"MIN_VALUE","line":"79"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"ZERO","kind":"property","comment":"\nAn [int64] constant equal to 0.\n","id":"ZERO","line":"89"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"ONE","kind":"property","comment":"\nAn [int64] constant equal to 1.\n","id":"ONE","line":"99"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"TWO","kind":"property","comment":"\nAn [int64] constant equal to 2.\n","id":"TWO","line":"109"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEven","kind":"property","id":"isEven","line":"566"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMaxValue","kind":"property","id":"isMaxValue","line":"567"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMinValue","kind":"property","id":"isMinValue","line":"568"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isNegative","kind":"property","id":"isNegative","line":"569"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isOdd","kind":"property","id":"isOdd","line":"570"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isZero","kind":"property","id":"isZero","line":"571"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"hashCode","kind":"property","comment":"\nReturns a hash code based on all the bits of this [int64].\n","id":"hashCode","line":"576"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"name":"_haveBigInts","isPrivate":true,"kind":"property","id":"_haveBigInts","line":"770"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_l","isPrivate":true,"kind":"variable","id":"_l","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_m","isPrivate":true,"kind":"variable","id":"_m","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_h","isPrivate":true,"kind":"variable","id":"_h","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_BITS","isPrivate":true,"kind":"variable","id":"_BITS","line":"25"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_BITS01","isPrivate":true,"kind":"variable","id":"_BITS01","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_BITS2","isPrivate":true,"kind":"variable","id":"_BITS2","line":"27"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_MASK","isPrivate":true,"kind":"variable","id":"_MASK","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_MASK_2","isPrivate":true,"kind":"variable","id":"_MASK_2","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_SIGN_BIT","isPrivate":true,"kind":"variable","id":"_SIGN_BIT","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_SIGN_BIT_VALUE","isPrivate":true,"kind":"variable","id":"_SIGN_BIT_VALUE","line":"31"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_MAX_VALUE","isPrivate":true,"kind":"variable","id":"_MAX_VALUE","line":"34"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_MIN_VALUE","isPrivate":true,"kind":"variable","id":"_MIN_VALUE","line":"35"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_ZERO","isPrivate":true,"kind":"variable","id":"_ZERO","line":"36"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_ONE","isPrivate":true,"kind":"variable","id":"_ONE","line":"37"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_TWO","isPrivate":true,"kind":"variable","id":"_TWO","line":"38"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"String","refId":"dart.core/String"}]},"isStatic":true,"name":"_minValues","isPrivate":true,"kind":"variable","id":"_minValues","line":"42"},{"ref":{"name":"int64","refId":"fixnum/int64"},"isStatic":true,"name":"_remainder","isPrivate":true,"kind":"variable","id":"_remainder","line":"62"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isStatic":true,"name":"_haveBigIntsCached","isPrivate":true,"kind":"variable","id":"_haveBigIntsCached","line":"768"},{"name":"int64","kind":"constructor","comment":"\nConstructs an [int64] equal to 0.\n","id":"int640()","line":"160"},{"name":"int64.fromInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","comment":"\nConstructs an [int64] with a given [int] value.\n","id":"int64.fromInt1()","line":"165"},{"name":"int64.fromBytes","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"}],"kind":"constructor","id":"int64.fromBytes1()","line":"191"},{"name":"int64.fromBytesBigEndian","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"}],"kind":"constructor","id":"int64.fromBytesBigEndian1()","line":"211"},{"name":"int64.fromInts","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"top","kind":"param","id":"top"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"bottom","kind":"param","id":"bottom"}],"kind":"constructor","comment":"\nConstructs an [int64] from a pair of 32-bit integers having the value\n[:((top & 0xffffffff) << 32) | (bottom & 0xffffffff):].\n","id":"int64.fromInts2()","line":"235"},{"name":"int64._bits","children":[{"initializedField":{"name":"_l","refId":"fixnum/int64/_l"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_l","isPrivate":true,"kind":"param","id":"_l"},{"initializedField":{"name":"_m","refId":"fixnum/int64/_m"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_m","isPrivate":true,"kind":"param","id":"_m"},{"initializedField":{"name":"_h","refId":"fixnum/int64/_h"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_h","isPrivate":true,"kind":"param","id":"_h"}],"isPrivate":true,"kind":"constructor","comment":"\nConstructs an [int64] with a given bitwise representation.  No validation\nis performed.\n","id":"int64._bits3()","line":"755"},{"name":"int64._copy","children":[{"ref":{"name":"int64","refId":"fixnum/int64"},"name":"other","kind":"param","id":"other"}],"isPrivate":true,"kind":"constructor","comment":"\nConstructs an [int64] with the same value as an existing [int64].\n","id":"int64._copy1()","line":"760"}],"uri":"pkg/fixnum/lib/src/int64.dart","kind":"class","comment":"\nAn immutable 64-bit signed integer, in the range [-2^63, 2^63 - 1].\nArithmetic operations may overflow in order to maintain this range.\n","id":"int64","line":"11"},{"interfaces":[{"name":"intx","refId":"fixnum/intx"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"int32","children":[{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_decodeHex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"c","kind":"param","id":"c"}],"isPrivate":true,"kind":"method","id":"_decodeHex1()","line":"48"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"parseRadix","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"radix","kind":"param","id":"radix"}],"kind":"method","comment":"\nParses a [String] in a given [radix] between 2 and 16 and returns an\n[int32].\n","id":"parseRadix2()","line":"65"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"parseInt","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"}],"kind":"method","comment":"\nParses a decimal [String] and returns an [int32].\n","id":"parseInt1()","line":"84"},{"isStatic":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"parseHex","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"}],"kind":"method","comment":"\nParses a hexadecimal [String] and returns an [int32].\n","id":"parseHex1()","line":"89"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_bitCount","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"i","kind":"param","id":"i"}],"isPrivate":true,"kind":"method","id":"_bitCount1()","line":"92"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_numberOfLeadingZeros","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"i","kind":"param","id":"i"}],"isPrivate":true,"kind":"method","id":"_numberOfLeadingZeros1()","line":"119"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_numberOfTrailingZeros","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"i","kind":"param","id":"i"}],"isPrivate":true,"kind":"method","id":"_numberOfTrailingZeros1()","line":"128"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_convert","children":[{"name":"other","kind":"param","id":"other"}],"isPrivate":true,"kind":"method","id":"_convert1()","line":"143"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"+","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"+1()","line":"169"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"-","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"-1()","line":"176"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"unary-","kind":"method","id":"unary-0()","line":"183"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"*","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"*1()","line":"185"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"%","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"%1()","line":"193"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"~/","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"~#slash1()","line":"201"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"remainder","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"remainder1()","line":"209"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"&","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"&1()","line":"218"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"|","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"|1()","line":"225"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"^","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"^1()","line":"232"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"~","kind":"method","id":"~0()","line":"239"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"<<1()","line":"241"},{"isOperator":true,"returnType":{"name":"int32","refId":"fixnum/int32"},"name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":">>1()","line":"249"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"shiftRightUnsigned1()","line":"263"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"==","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","comment":"\nReturns [true] if this [int32] has the same numeric value as the\ngiven object.  The argument may be an [int] or an [intx].\n","id":"==1()","line":"281"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"compareTo","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"compareTo1()","line":"291"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<1()","line":"298"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<=1()","line":"305"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">1()","line":"312"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">=1()","line":"319"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"abs","kind":"method","id":"abs0()","line":"335"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfLeadingZeros","kind":"method","id":"numberOfLeadingZeros0()","line":"337"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfTrailingZeros","kind":"method","id":"numberOfTrailingZeros0()","line":"338"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"toBytes","kind":"method","id":"toBytes0()","line":"340"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"toInt","kind":"method","id":"toInt0()","line":"349"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"toInt32","kind":"method","id":"toInt320()","line":"350"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"toInt64","kind":"method","id":"toInt640()","line":"351"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"353"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toHexString","kind":"method","id":"toHexString0()","line":"354"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"radix","kind":"param","id":"radix"}],"kind":"method","id":"toRadixString1()","line":"355"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEven","kind":"property","id":"isEven","line":"326"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMaxValue","kind":"property","id":"isMaxValue","line":"327"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMinValue","kind":"property","id":"isMinValue","line":"328"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isNegative","kind":"property","id":"isNegative","line":"329"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isOdd","kind":"property","id":"isOdd","line":"330"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isZero","kind":"property","id":"isZero","line":"331"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"hashCode","kind":"property","id":"hashCode","line":"333"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"name":"MAX_VALUE","kind":"variable","id":"MAX_VALUE","line":"17"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"name":"MIN_VALUE","kind":"variable","id":"MIN_VALUE","line":"23"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"name":"ZERO","kind":"variable","id":"ZERO","line":"28"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"name":"ONE","kind":"variable","id":"ONE","line":"33"},{"ref":{"name":"int32","refId":"fixnum/int32"},"isStatic":true,"name":"TWO","kind":"variable","id":"TWO","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_0","isPrivate":true,"kind":"variable","id":"_CC_0","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_9","isPrivate":true,"kind":"variable","id":"_CC_9","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_a","isPrivate":true,"kind":"variable","id":"_CC_a","line":"43"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_z","isPrivate":true,"kind":"variable","id":"_CC_z","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_A","isPrivate":true,"kind":"variable","id":"_CC_A","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_CC_Z","isPrivate":true,"kind":"variable","id":"_CC_Z","line":"46"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_i","isPrivate":true,"kind":"variable","id":"_i","line":"131"},{"name":"int32._internal","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"i","kind":"param","id":"i"}],"isPrivate":true,"kind":"constructor","id":"int32._internal1()","line":"133"},{"name":"int32.fromInt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"i","kind":"param","id":"i"}],"kind":"constructor","comment":"\nConstructs an [int32] from an [int].  Only the low 32 bits of the input\nare used.\n","id":"int32.fromInt1()","line":"139"}],"uri":"pkg/fixnum/lib/src/int32.dart","kind":"class","comment":"\nAn immutable 32-bit signed integer, in the range [-2^31, 2^31 - 1].\nArithmetic operations may overflow in order to maintain this range.\n","id":"int32","line":"11"},{"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"intx","children":[{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"+","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"+1()","line":"13"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"-","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"-1()","line":"14"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"unary-","kind":"method","id":"unary-0()","line":"17"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"*","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"*1()","line":"18"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"%","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"%1()","line":"19"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"~/","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"~#slash1()","line":"21"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"remainder","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"remainder1()","line":"22"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"&","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"&1()","line":"27"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"|","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"|1()","line":"28"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"^","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"^1()","line":"29"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"~","kind":"method","id":"~0()","line":"30"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"<<","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"shiftAmount","kind":"param","id":"shiftAmount"}],"kind":"method","id":"<<1()","line":"31"},{"isOperator":true,"returnType":{"name":"intx","refId":"fixnum/intx"},"name":">>","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"shiftAmount","kind":"param","id":"shiftAmount"}],"kind":"method","id":">>1()","line":"32"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"shiftRightUnsigned","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"shiftAmount","kind":"param","id":"shiftAmount"}],"kind":"method","id":"shiftRightUnsigned1()","line":"33"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"compareTo","children":[{"ref":{"name":"Comparable","refId":"dart.core/Comparable"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"compareTo1()","line":"36"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"==","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"==1()","line":"37"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<1()","line":"38"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<=1()","line":"39"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">1()","line":"40"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">=","children":[{"name":"other","kind":"param","id":"other"}],"kind":"method","id":">=1()","line":"41"},{"returnType":{"name":"intx","refId":"fixnum/intx"},"name":"abs","kind":"method","id":"abs0()","line":"53"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfLeadingZeros","kind":"method","comment":"\nReturns the number of leading zeros in this [intx] as an [int]\nbetween 0 and 64.\n","id":"numberOfLeadingZeros0()","line":"59"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"numberOfTrailingZeros","kind":"method","comment":"\nReturns the number of trailing zeros in this [intx] as an [int]\nbetween 0 and 64.\n","id":"numberOfTrailingZeros0()","line":"65"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"toBytes","kind":"method","comment":"\nConverts this [intx] to a [List] of [int], starting with the least\nsignificant byte.\n","id":"toBytes0()","line":"71"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"toInt","kind":"method","comment":"\nConverts this [intx] to an [int].  On some platforms, inputs with large\nabsolute values (i.e., > 2^52) may lose some of their low bits.\n","id":"toInt0()","line":"77"},{"returnType":{"name":"int32","refId":"fixnum/int32"},"name":"toInt32","kind":"method","comment":"\nConverts an [intx] to 32 bits.  Narrower values are sign extended and\nwider values have their high bits truncated.\n","id":"toInt320()","line":"83"},{"returnType":{"name":"int64","refId":"fixnum/int64"},"name":"toInt64","kind":"method","comment":"\nConverts an [intx] to 64 bits.\n","id":"toInt640()","line":"88"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","comment":"\nReturns the value of this [intx] as a decimal [String].\n","id":"toString0()","line":"93"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toHexString","kind":"method","comment":"\nReturns the value of this [intx] as a hexadecimal [String].\n","id":"toHexString0()","line":"98"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toRadixString","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"radix","kind":"param","id":"radix"}],"kind":"method","comment":"\nReturns the value of this [intx] as a [String] in the given radix.\n[radix] must be an integer between 2 and 16, inclusive.\n","id":"toRadixString1()","line":"104"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEven","kind":"property","id":"isEven","line":"44"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMaxValue","kind":"property","id":"isMaxValue","line":"45"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isMinValue","kind":"property","id":"isMinValue","line":"46"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isNegative","kind":"property","id":"isNegative","line":"47"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isOdd","kind":"property","id":"isOdd","line":"48"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isZero","kind":"property","id":"isZero","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"hashCode","kind":"property","id":"hashCode","line":"51"}],"uri":"pkg/fixnum/lib/src/intx.dart","kind":"class","comment":"\nA fixed-precision integer.\n","id":"intx","line":"10"}],"uri":"pkg/fixnum/lib/fixnum.dart","kind":"library","id":"fixnum","line":"5"}