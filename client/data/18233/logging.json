{"name":"package:logging/logging.dart","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"_rootLevel","isPrivate":true,"kind":"variable","id":"_rootLevel","line":"22"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"hierarchicalLoggingEnabled","kind":"variable","id":"hierarchicalLoggingEnabled","line":"16"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"LogRecord","children":[{"isFinal":true,"ref":{"name":"Level","refId":"logging/Level"},"name":"level","kind":"variable","id":"level","line":"309"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"variable","id":"message","line":"310"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"name":"loggerName","kind":"variable","id":"loggerName","line":"313"},{"isFinal":true,"ref":{"name":"DateTime","refId":"dart.core/DateTime"},"name":"time","kind":"variable","id":"time","line":"316"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"sequenceNumber","kind":"variable","id":"sequenceNumber","line":"319"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_nextNumber","isPrivate":true,"kind":"variable","id":"_nextNumber","line":"321"},{"ref":{"name":"Exception","refId":"dart.core/Exception"},"name":"exception","kind":"variable","id":"exception","line":"324"},{"ref":{"name":"String","refId":"dart.core/String"},"name":"exceptionText","kind":"variable","id":"exceptionText","line":"327"},{"name":"LogRecord","children":[{"initializedField":{"name":"level","refId":"logging/LogRecord/level"},"ref":{"name":"Level","refId":"logging/Level"},"name":"level","kind":"param","id":"level","line":"330"},{"initializedField":{"name":"message","refId":"logging/LogRecord/message"},"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message","line":"330"},{"initializedField":{"name":"loggerName","refId":"logging/LogRecord/loggerName"},"ref":{"name":"String","refId":"dart.core/String"},"name":"loggerName","kind":"param","id":"loggerName","line":"330"},{"isOptional":true,"name":"time","kind":"param","id":"time","line":"331"},{"initializedField":{"name":"exception","refId":"logging/LogRecord/exception"},"ref":{"name":"Exception","refId":"dart.core/Exception"},"isOptional":true,"name":"exception","kind":"param","id":"exception","line":"331"},{"initializedField":{"name":"exceptionText","refId":"logging/LogRecord/exceptionText"},"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"name":"exceptionText","kind":"param","id":"exceptionText","line":"331"}],"kind":"constructor","id":"LogRecord6()","line":"329"}],"kind":"class","comment":"\nA log entry representation used to propagate information from [Logger] to\nindividual [Handler]s.\n","id":"LogRecord","line":"308"},{"interfaces":[{"name":"Comparable","refId":"dart.core/Comparable"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Level","children":[{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"==","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"==1()","line":"293"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<1()","line":"294"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"<=","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"<=1()","line":"295"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":">1()","line":"296"},{"isOperator":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":">=","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":">=1()","line":"297"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"compareTo","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"compareTo1()","line":"298"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"300"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"hashCode","kind":"property","id":"hashCode","line":"299"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"name":"name","kind":"variable","id":"name","line":"253"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"value","kind":"variable","id":"value","line":"259"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"ALL","kind":"variable","id":"ALL","line":"264"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"OFF","kind":"variable","id":"OFF","line":"267"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"FINEST","kind":"variable","id":"FINEST","line":"270"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"FINER","kind":"variable","id":"FINER","line":"273"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"FINE","kind":"variable","id":"FINE","line":"276"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"CONFIG","kind":"variable","id":"CONFIG","line":"279"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"INFO","kind":"variable","id":"INFO","line":"282"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"WARNING","kind":"variable","id":"WARNING","line":"285"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"SEVERE","kind":"variable","id":"SEVERE","line":"288"},{"ref":{"name":"Level","refId":"logging/Level"},"isStatic":true,"name":"SHOUT","kind":"variable","id":"SHOUT","line":"291"},{"name":"Level","children":[{"initializedField":{"name":"name","refId":"logging/Level/name"},"ref":{"name":"String","refId":"dart.core/String"},"name":"name","kind":"param","id":"name"},{"initializedField":{"name":"value","refId":"logging/Level/value"},"ref":{"name":"int","refId":"dart.core/int"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","id":"Level2()","line":"261"}],"kind":"class","comment":"\n[Level]s to control logging output. Logging can be enabled to include all\nlevels above certain [Level]. [Level]s are ordered using an integer\nvalue [Level.value]. The predefined [Level] constants below are sorted as\nfollows (in descending order): [Level.SHOUT], [Level.SEVERE],\n[Level.WARNING], [Level.INFO], [Level.CONFIG], [Level.FINE], [Level.FINER],\n[Level.FINEST], and [Level.ALL].\n\nWe recommend using one of the predefined logging levels. If you define your\nown level, make sure you use a value between those used in [Level.ALL] and\n[Level.OFF].\n","id":"Level","line":"250"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"LoggerHandlerList","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"name":"handler","kind":"param","id":"handler"}],"kind":"method","id":"add1()","line":"232"},{"returnType":{"name":"void","refId":"void"},"name":"remove","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"name":"handler","kind":"param","id":"handler"}],"kind":"method","id":"remove1()","line":"233"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"234"},{"ref":{"name":"Logger","refId":"logging/Logger"},"name":"_logger","isPrivate":true,"kind":"variable","id":"_logger","line":"228"},{"name":"LoggerHandlerList","children":[{"initializedField":{"name":"_logger","refId":"logging/LoggerHandlerList/_logger"},"ref":{"name":"Logger","refId":"logging/Logger"},"name":"_logger","isPrivate":true,"kind":"param","id":"_logger"}],"kind":"constructor","id":"LoggerHandlerList1()","line":"230"}],"kind":"class","comment":"List of handlers that will be called on a logger event. ","id":"LoggerHandlerList","line":"227"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"LoggerEvents","children":[{"ref":{"name":"LoggerHandlerList","refId":"logging/LoggerHandlerList"},"name":"record","kind":"property","comment":"Event fired when a log record is added to a [Logger]. ","id":"record","line":"222"},{"isFinal":true,"ref":{"name":"Logger","refId":"logging/Logger"},"name":"_logger","isPrivate":true,"kind":"variable","id":"_logger","line":"217"},{"name":"LoggerEvents","children":[{"initializedField":{"name":"_logger","refId":"logging/LoggerEvents/_logger"},"ref":{"name":"Logger","refId":"logging/Logger"},"name":"_logger","isPrivate":true,"kind":"param","id":"_logger"}],"kind":"constructor","id":"LoggerEvents1()","line":"219"}],"kind":"class","comment":"Event manager for a [Logger] (holds events that a [Logger] can fire). ","id":"LoggerEvents","line":"216"},{"returnType":{"name":"void","refId":"void"},"name":"LoggerHandler","children":[{"name":"LogRecord","kind":"param","id":"LogRecord"}],"kind":"typedef","comment":"Handler callback to process log entries as they are added to a [Logger]. ","id":"LoggerHandler","line":"212"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Logger","children":[{"isSetter":true,"name":"level=","children":[{"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"Override the level for this particular [Logger] and its children. ","id":"level=1()","line":"94"},{"returnType":{"name":"void","refId":"void"},"name":"_addHandler","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"name":"handler","kind":"param","id":"handler"}],"isPrivate":true,"kind":"method","comment":"Adds a handler to listen whenever a log record is added to this logger. ","id":"_addHandler1()","line":"116"},{"returnType":{"name":"void","refId":"void"},"name":"_removeHandler","children":[{"ref":{"name":"LoggerHandler","refId":"logging/LoggerHandler"},"name":"handler","kind":"param","id":"handler"}],"isPrivate":true,"kind":"method","comment":"Remove a previously added handler. ","id":"_removeHandler1()","line":"128"},{"returnType":{"name":"void","refId":"void"},"name":"_clearHandlers","isPrivate":true,"kind":"method","comment":"Removes all handlers previously added to this logger. ","id":"_clearHandlers0()","line":"139"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isLoggable","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"Whether a message for [value]'s level is loggable in this logger. ","id":"isLoggable1()","line":"148"},{"returnType":{"name":"void","refId":"void"},"name":"log","children":[{"ref":{"name":"Level","refId":"logging/Level"},"name":"logLevel","kind":"param","id":"logLevel"},{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"\nAdds a log record for a [message] at a particular [logLevel] if\n`isLoggable(logLevel)` is true. Use this method to create log entries for\nuser-defined levels. To record a message at a predefined level (e.g.\n[Level.INFO], [Level.WARNING], etc) you can use their specialized methods\ninstead (e.g. [info], [warning], etc).\n","id":"log2()","line":"158"},{"returnType":{"name":"void","refId":"void"},"name":"finest","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.FINEST]. ","id":"finest1()","line":"174"},{"returnType":{"name":"void","refId":"void"},"name":"finer","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.FINER]. ","id":"finer1()","line":"177"},{"returnType":{"name":"void","refId":"void"},"name":"fine","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.FINE]. ","id":"fine1()","line":"180"},{"returnType":{"name":"void","refId":"void"},"name":"config","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.CONFIG]. ","id":"config1()","line":"183"},{"returnType":{"name":"void","refId":"void"},"name":"info","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.INFO]. ","id":"info1()","line":"186"},{"returnType":{"name":"void","refId":"void"},"name":"warning","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.WARNING]. ","id":"warning1()","line":"189"},{"returnType":{"name":"void","refId":"void"},"name":"severe","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.SEVERE]. ","id":"severe1()","line":"192"},{"returnType":{"name":"void","refId":"void"},"name":"shout","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"method","comment":"Log message at level [Level.SHOUT]. ","id":"shout1()","line":"195"},{"returnType":{"name":"void","refId":"void"},"name":"_publish","children":[{"ref":{"name":"LogRecord","refId":"logging/LogRecord"},"name":"record","kind":"param","id":"record"}],"isPrivate":true,"kind":"method","id":"_publish1()","line":"197"},{"ref":{"name":"String","refId":"dart.core/String"},"name":"fullName","kind":"property","comment":"The full name of this logger, which includes the parent's full name. ","id":"fullName","line":"34"},{"ref":{"name":"Level","refId":"logging/Level"},"name":"level","kind":"property","comment":"\nEffective level considering the levels established in this logger's parents\n(when [hierarchicalLoggingEnabled] is true).\n","id":"level","line":"85"},{"ref":{"name":"LoggerEvents","refId":"logging/LoggerEvents"},"name":"on","kind":"property","comment":"\nReturns an event manager for this [Logger]. You can listen for log messages\nby adding a [LoggerHandler] to an event from the event manager, for\ninstance:\n   logger.on.record.add((record) { ... });\n","id":"on","line":"113"},{"isStatic":true,"name":"root","kind":"property","comment":"Top-level root [Logger]. ","id":"root","line":"204"},{"isFinal":true,"ref":{"name":"String","refId":"dart.core/String"},"name":"name","kind":"variable","id":"name","line":"31"},{"isFinal":true,"ref":{"name":"Logger","refId":"logging/Logger"},"name":"parent","kind":"variable","id":"parent","line":"38"},{"ref":{"name":"Level","refId":"logging/Level"},"name":"_level","isPrivate":true,"kind":"variable","id":"_level","line":"41"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Logger","refId":"logging/Logger"}]},"name":"children","kind":"variable","id":"children","line":"44"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"LoggerHandler","refId":"logging/LoggerHandler"}]},"name":"_handlers","isPrivate":true,"kind":"variable","id":"_handlers","line":"47"},{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"String","refId":"dart.core/String"},{"name":"Logger","refId":"logging/Logger"}]},"isStatic":true,"name":"_loggers","isPrivate":true,"kind":"variable","id":"_loggers","line":"207"},{"name":"Logger","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"name","kind":"param","id":"name"}],"kind":"constructor","comment":"\nSingleton constructor. Calling `new Logger(name)` will return the same\nactual instance whenever it is called with the same string name.\n","id":"Logger1()","line":"53"},{"name":"Logger._internal","children":[{"initializedField":{"name":"name","refId":"logging/Logger/name"},"ref":{"name":"String","refId":"dart.core/String"},"name":"name","kind":"param","id":"name"},{"initializedField":{"name":"parent","refId":"logging/Logger/parent"},"ref":{"name":"Logger","refId":"logging/Logger"},"name":"parent","kind":"param","id":"parent"}],"isPrivate":true,"kind":"constructor","id":"Logger._internal2()","line":"76"}],"kind":"class","comment":"\nUse a [Logger] to log debug messages. [Logger]s are named using a\nhierarchical dot-separated name convention.\n","id":"Logger","line":"29"}],"uri":"pkg/logging/lib/logging.dart","kind":"library","comment":"\nProvides APIs for debugging and error logging. This library introduces\nabstractions similar to those used in other languages, such as the Closure JS\nLogger and java.util.logging.Logger.\n","id":"logging","line":"10"}