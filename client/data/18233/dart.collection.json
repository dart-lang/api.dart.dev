{"name":"dart:collection","children":[{"interfaces":[{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/SplayTreeMap/K"},{"name":"V","refId":"dart.collection/SplayTreeMap/V"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"SplayTreeMap","children":[{"returnType":{"name":"void","refId":"void"},"name":"splay_","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","comment":"\nPerform the splay operation for the given key. Moves the node with\nthe given key to the top of the tree.  If no node has the given\nkey, the last node on the search path is moved to the top of the\ntree. This is the simplified top-down splaying algorithm from:\n\"Self-adjusting Binary Search Trees\" by Sleator and Tarjan.\n","id":"splay_1()","line":"55"},{"isOperator":true,"returnType":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"[]","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"[]1()","line":"110"},{"returnType":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"remove","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"remove1()","line":"118"},{"isOperator":true,"returnType":{"name":"void","refId":"void"},"name":"[]=","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"[]=2()","line":"140"},{"returnType":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"putIfAbsent","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"ifAbsent"}],"kind":"method","id":"putIfAbsent2()","line":"168"},{"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","uri":"sdk/lib/collection/splay_tree.dart","kind":"param","id":"key","line":"181"},{"ref":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"value","uri":"sdk/lib/collection/splay_tree.dart","kind":"param","id":"value","line":"181"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach1()","line":"181"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"204"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsKey","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"containsKey1()","line":"209"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsValue","children":[{"ref":{"name":"V","refId":"dart.collection/SplayTreeMap/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"containsValue1()","line":"217"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"239"},{"returnType":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"firstKey","kind":"method","comment":"\nGet the first key in the map. Returns [null] if the map is empty.\n","id":"firstKey0()","line":"246"},{"returnType":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"lastKey","kind":"method","comment":"\nGet the last key in the map. Returns [null] if the map is empty.\n","id":"lastKey0()","line":"261"},{"returnType":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"lastKeyBefore","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","comment":"\nGet the last key in the map that is strictly smaller than [key]. Returns\n[null] if no key was not found.\n","id":"lastKeyBefore1()","line":"277"},{"returnType":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"firstKeyAfter","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeMap/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","comment":"\nGet the first key in the map that is strictly larger than [key]. Returns\n[null] if no key was not found.\n","id":"firstKeyAfter1()","line":"295"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"175"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"property","id":"length","line":"200"},{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"K","refId":"dart.collection/SplayTreeMap/K"}]},"name":"keys","kind":"property","id":"keys","line":"227"},{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"V","refId":"dart.collection/SplayTreeMap/V"}]},"name":"values","kind":"property","id":"values","line":"233"},{"ref":{"name":"SplayTreeNode","refId":"dart.collection/SplayTreeNode","arguments":[{"name":"K","refId":"dart.collection/SplayTreeMap/K"},{"name":"V","refId":"dart.collection/SplayTreeMap/V"}]},"name":"_root","isPrivate":true,"kind":"variable","id":"_root","line":"33"},{"ref":{"name":"SplayTreeNode","refId":"dart.collection/SplayTreeNode","arguments":[{"name":"K","refId":"dart.collection/SplayTreeMap/K"},{"name":"V","refId":"dart.collection/SplayTreeMap/V"}]},"name":"_dummy","isPrivate":true,"kind":"variable","id":"_dummy","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_count","isPrivate":true,"kind":"variable","id":"_count","line":"41"},{"name":"SplayTreeMap","kind":"constructor","id":"SplayTreeMap0()","line":"43"},{"upperBound":{"name":"Comparable","refId":"dart.core/Comparable"},"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"uri":"sdk/lib/collection/splay_tree.dart","kind":"class","comment":"\nA splay tree is a self-balancing binary\nsearch tree with the additional property that recently accessed\nelements are quick to access again. It performs basic operations\nsuch as insertion, look-up and removal in O(log(n)) amortized time.\n\nThis implementation is a Dart version of the JavaScript\nimplementation in the V8 project.\n","id":"SplayTreeMap","line":"29"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"SplayTreeNode","children":[{"ref":{"name":"K","refId":"dart.collection/SplayTreeNode/K"},"name":"key","kind":"variable","id":"key","line":"14"},{"ref":{"name":"V","refId":"dart.collection/SplayTreeNode/V"},"name":"value","kind":"variable","id":"value","line":"15"},{"ref":{"name":"SplayTreeNode","refId":"dart.collection/SplayTreeNode","arguments":[{"name":"K","refId":"dart.collection/SplayTreeNode/K"},{"name":"V","refId":"dart.collection/SplayTreeNode/V"}]},"name":"left","kind":"variable","id":"left","line":"16"},{"ref":{"name":"SplayTreeNode","refId":"dart.collection/SplayTreeNode","arguments":[{"name":"K","refId":"dart.collection/SplayTreeNode/K"},{"name":"V","refId":"dart.collection/SplayTreeNode/V"}]},"name":"right","kind":"variable","id":"right","line":"17"},{"name":"SplayTreeNode","children":[{"initializedField":{"name":"key","refId":"dart.collection/SplayTreeNode/key"},"ref":{"name":"K","refId":"dart.collection/SplayTreeNode/K"},"name":"key","kind":"param","id":"key"},{"initializedField":{"name":"value","refId":"dart.collection/SplayTreeNode/value"},"ref":{"name":"V","refId":"dart.collection/SplayTreeNode/V"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","id":"SplayTreeNode2()","line":"12"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"uri":"sdk/lib/collection/splay_tree.dart","kind":"class","comment":"\nA node in a splay tree. It holds the key, the value and the left\nand right children in the tree.\n","id":"SplayTreeNode","line":"11"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/_HashSetIterator/E"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_HashSetIterator","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"99"},{"ref":{"name":"E","refId":"dart.collection/_HashSetIterator/E"},"name":"current","kind":"property","id":"current","line":"90"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator"},"name":"_keysIterator","isPrivate":true,"kind":"variable","id":"_keysIterator","line":"109"},{"name":"_HashSetIterator","children":[{"ref":{"name":"HashSet","refId":"dart.collection/HashSet","arguments":[{"name":"E","refId":"dart.collection/_HashSetIterator/E"}]},"name":"set","kind":"param","id":"set"}],"kind":"constructor","id":"_HashSetIterator1()","line":"87"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/set.dart","kind":"class","id":"_HashSetIterator","line":"85"},{"interfaces":[{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]}],"superclass":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"HashSet","children":[{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"28"},{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"E","refId":"dart.collection/HashSet/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"add1()","line":"32"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"remove","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"remove1()","line":"36"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"contains","children":[{"ref":{"name":"E","refId":"dart.collection/HashSet/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"contains1()","line":"42"},{"returnType":{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"intersection","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"collection","kind":"param","id":"collection"}],"kind":"method","id":"intersection1()","line":"46"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isSubsetOf","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"other","kind":"param","id":"other"}],"kind":"method","id":"isSubsetOf1()","line":"54"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsAll","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"collection","kind":"param","id":"collection"}],"kind":"method","id":"containsAll1()","line":"58"},{"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/HashSet/E"},"name":"element","uri":"sdk/lib/collection/set.dart","kind":"param","id":"element","line":"64"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach1()","line":"64"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"80"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"70"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"property","id":"length","line":"74"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"iterator","kind":"property","id":"iterator","line":"78"},{"isFinal":true,"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"},{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"_backingMap","isPrivate":true,"kind":"variable","id":"_backingMap","line":"13"},{"name":"HashSet","kind":"constructor","id":"HashSet0()","line":"15"},{"name":"HashSet.from","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/HashSet/E"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","comment":"\nCreates a [Set] that contains all elements of [other].\n","id":"HashSet.from1()","line":"20"},{"name":"E","kind":"typeparam","id":"E"}],"uri":"sdk/lib/collection/set.dart","kind":"class","id":"HashSet","line":"9"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_DoubleLinkedQueueIterator","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"301"},{"ref":{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"},"name":"current","kind":"property","id":"current","line":"318"},{"ref":{"name":"_DoubleLinkedQueueEntrySentinel","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"}]},"name":"_sentinel","isPrivate":true,"kind":"variable","id":"_sentinel","line":"294"},{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"}]},"name":"_currentEntry","isPrivate":true,"kind":"variable","id":"_currentEntry","line":"295"},{"ref":{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"296"},{"name":"_DoubleLinkedQueueIterator","children":[{"ref":{"name":"_DoubleLinkedQueueEntrySentinel","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueIterator/E"}]},"name":"sentinel","kind":"param","id":"sentinel"}],"kind":"constructor","id":"_DoubleLinkedQueueIterator1()","line":"298"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/queue.dart","kind":"class","id":"_DoubleLinkedQueueIterator","line":"293"},{"interfaces":[{"name":"Queue","refId":"dart.collection/Queue","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]}],"superclass":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"DoubleLinkedQueue","children":[{"returnType":{"name":"void","refId":"void"},"name":"addLast","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"addLast1()","line":"178"},{"returnType":{"name":"void","refId":"void"},"name":"addFirst","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"addFirst1()","line":"182"},{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"add1()","line":"186"},{"returnType":{"name":"void","refId":"void"},"name":"addAll","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","id":"addAll1()","line":"190"},{"returnType":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"removeLast","kind":"method","id":"removeLast0()","line":"196"},{"returnType":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"removeFirst","kind":"method","id":"removeFirst0()","line":"200"},{"returnType":{"name":"void","refId":"void"},"name":"remove","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"o","kind":"param","id":"o"}],"kind":"method","id":"remove1()","line":"204"},{"returnType":{"name":"void","refId":"void"},"name":"removeAll","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"elements","kind":"param","id":"elements"}],"kind":"method","id":"removeAll1()","line":"215"},{"returnType":{"name":"void","refId":"void"},"name":"removeMatching","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"element","uri":"sdk/lib/collection/queue.dart","kind":"param","id":"element","line":"220"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"removeMatching1()","line":"220"},{"returnType":{"name":"void","refId":"void"},"name":"retainMatching","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"element","uri":"sdk/lib/collection/queue.dart","kind":"param","id":"element","line":"231"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"retainMatching1()","line":"231"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"lastEntry","kind":"method","id":"lastEntry0()","line":"258"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"firstEntry","kind":"method","id":"firstEntry0()","line":"262"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"270"},{"returnType":{"name":"void","refId":"void"},"name":"forEachEntry","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"element","uri":"sdk/lib/collection/queue.dart","kind":"param","id":"element","line":"275"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEachEntry1()","line":"275"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"288"},{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"first","kind":"property","id":"first","line":"242"},{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"last","kind":"property","id":"last","line":"246"},{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"},"name":"single","kind":"property","id":"single","line":"250"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"266"},{"ref":{"name":"_DoubleLinkedQueueIterator","refId":"dart.collection/_DoubleLinkedQueueIterator","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"iterator","kind":"property","id":"iterator","line":"284"},{"ref":{"name":"_DoubleLinkedQueueEntrySentinel","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"_sentinel","isPrivate":true,"kind":"variable","id":"_sentinel","line":"164"},{"name":"DoubleLinkedQueue","kind":"constructor","id":"DoubleLinkedQueue0()","line":"166"},{"name":"DoubleLinkedQueue.from","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueue/E"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","id":"DoubleLinkedQueue.from1()","line":"170"},{"name":"E","kind":"typeparam","id":"E"}],"uri":"sdk/lib/collection/queue.dart","kind":"class","comment":"\nImplementation of a double linked list that box list elements into\nDoubleLinkedQueueEntry objects.\n\nWARNING: This class is temporary located in dart:core. It'll be removed\nat some point in the near future.\n","id":"DoubleLinkedQueue","line":"163"},{"superclass":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel/E"}]},"name":"_DoubleLinkedQueueEntrySentinel","children":[{"returnType":{"name":"E","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel/E"},"name":"remove","kind":"method","id":"remove0()","line":"138"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel/E"}]},"name":"_asNonSentinelEntry","isPrivate":true,"kind":"method","id":"_asNonSentinelEntry0()","line":"142"},{"isSetter":true,"returnType":{"name":"void","refId":"void"},"name":"element=","children":[{"ref":{"name":"E","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel/E"},"name":"e","kind":"param","id":"e"}],"kind":"method","id":"element=1()","line":"146"},{"ref":{"name":"E","refId":"dart.collection/_DoubleLinkedQueueEntrySentinel/E"},"name":"element","kind":"property","id":"element","line":"151"},{"name":"_DoubleLinkedQueueEntrySentinel","kind":"constructor","id":"_DoubleLinkedQueueEntrySentinel0()","line":"134"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/queue.dart","kind":"class","comment":"\nA sentinel in a double linked list is used to manipulate the list\nat both ends. A double linked list has exactly one sentinel, which\nis the only entry when the list is constructed. Initially, a\nsentinel has its next and previous entry point to itself. A\nsentinel does not box any user element.\n","id":"_DoubleLinkedQueueEntrySentinel","line":"133"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"DoubleLinkedQueueEntry","children":[{"returnType":{"name":"void","refId":"void"},"name":"_link","children":[{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"p","kind":"param","id":"p"},{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"n","kind":"param","id":"n","line":"82"}],"isPrivate":true,"kind":"method","id":"_link2()","line":"81"},{"returnType":{"name":"void","refId":"void"},"name":"append","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"e","kind":"param","id":"e"}],"kind":"method","id":"append1()","line":"89"},{"returnType":{"name":"void","refId":"void"},"name":"prepend","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"e","kind":"param","id":"e"}],"kind":"method","id":"prepend1()","line":"93"},{"returnType":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"remove","kind":"method","id":"remove0()","line":"97"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"_asNonSentinelEntry","isPrivate":true,"kind":"method","id":"_asNonSentinelEntry0()","line":"105"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"previousEntry","kind":"method","id":"previousEntry0()","line":"109"},{"returnType":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"nextEntry","kind":"method","id":"nextEntry0()","line":"113"},{"isSetter":true,"returnType":{"name":"void","refId":"void"},"name":"element=","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"e","kind":"param","id":"e"}],"kind":"method","id":"element=1()","line":"121"},{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"element","kind":"property","id":"element","line":"117"},{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"_previous","isPrivate":true,"kind":"variable","id":"_previous","line":"73"},{"ref":{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"}]},"name":"_next","isPrivate":true,"kind":"variable","id":"_next","line":"74"},{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"_element","isPrivate":true,"kind":"variable","id":"_element","line":"75"},{"name":"DoubleLinkedQueueEntry","children":[{"ref":{"name":"E","refId":"dart.collection/DoubleLinkedQueueEntry/E"},"name":"e","kind":"param","id":"e"}],"kind":"constructor","id":"DoubleLinkedQueueEntry1()","line":"77"},{"name":"E","kind":"typeparam","id":"E"}],"uri":"sdk/lib/collection/queue.dart","kind":"class","comment":"\nAn entry in a doubly linked list. It contains a pointer to the next\nentry, the previous entry, and the boxed element.\n\nWARNING: This class is temporary located in dart:core. It'll be removed\nat some point in the near future.\n","id":"DoubleLinkedQueueEntry","line":"72"},{"superclass":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"E","refId":"dart.collection/Queue/E"}]},"isAbstract":true,"name":"Queue","children":[{"returnType":{"name":"E","refId":"dart.collection/Queue/E"},"name":"removeFirst","kind":"method","comment":"\nRemoves and returns the first element of this queue. Throws an\n[StateError] exception if this queue is empty.\n","id":"removeFirst0()","line":"29"},{"returnType":{"name":"E","refId":"dart.collection/Queue/E"},"name":"removeLast","kind":"method","comment":"\nRemoves and returns the last element of the queue. Throws an\n[StateError] exception if this queue is empty.\n","id":"removeLast0()","line":"35"},{"returnType":{"name":"void","refId":"void"},"name":"addFirst","children":[{"ref":{"name":"E","refId":"dart.collection/Queue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"\nAdds [value] at the beginning of the queue.\n","id":"addFirst1()","line":"40"},{"returnType":{"name":"void","refId":"void"},"name":"addLast","children":[{"ref":{"name":"E","refId":"dart.collection/Queue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"\nAdds [value] at the end of the queue.\n","id":"addLast1()","line":"45"},{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"E","refId":"dart.collection/Queue/E"},"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"\nAdds [value] at the end of the queue.\n","id":"add1()","line":"50"},{"returnType":{"name":"void","refId":"void"},"name":"addAll","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/Queue/E"}]},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","comment":"\nAdds all elements of [iterable] at the end of the queue. The\nlength of the queue is extended by the length of [iterable].\n","id":"addAll1()","line":"56"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","comment":"\nRemoves all elements in the queue. The size of the queue becomes zero.\n","id":"clear0()","line":"61"},{"name":"Queue","kind":"constructor","comment":"\nCreates a queue.\n","id":"Queue0()","line":"17"},{"name":"Queue.from","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/Queue/E"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","comment":"\nCreates a queue with the elements of [other]. The order in\nthe queue will be the order provided by the iterator of [other].\n","id":"Queue.from1()","line":"23"},{"name":"E","kind":"typeparam","id":"E"}],"uri":"sdk/lib/collection/queue.dart","kind":"class","comment":"\nA [Queue] is a collection that can be manipulated at both ends. One\ncan iterate over the elements of a queue through [forEach] or with\nan [Iterator].\n","id":"Queue","line":"12"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Maps","children":[{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsValue","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"},{"name":"value","kind":"param","id":"value"}],"kind":"method","id":"containsValue2()","line":"14"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsKey","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"},{"name":"key","kind":"param","id":"key"}],"kind":"method","id":"containsKey2()","line":"23"},{"isStatic":true,"name":"putIfAbsent","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"},{"name":"key","kind":"param","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"ifAbsent","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"ifAbsent"}],"kind":"method","id":"putIfAbsent3()","line":"32"},{"isStatic":true,"name":"clear","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"}],"kind":"method","id":"clear1()","line":"41"},{"isStatic":true,"name":"forEach","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"name":"key","uri":"sdk/lib/collection/maps.dart","kind":"param","id":"key","line":"47"},{"name":"value","uri":"sdk/lib/collection/maps.dart","kind":"param","id":"value","line":"47"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach2()","line":"47"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"getValues","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"}],"kind":"method","id":"getValues1()","line":"53"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"length","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"}],"kind":"method","id":"length1()","line":"57"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"map","kind":"param","id":"map"}],"kind":"method","id":"isEmpty1()","line":"59"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"mapToString","children":[{"ref":{"name":"Map","refId":"dart.core/Map"},"name":"m","kind":"param","id":"m"}],"kind":"method","comment":"\nReturns a string representing the specified map. The returned string\nlooks like this: [:'{key0: value0, key1: value1, ... keyN: valueN}':].\nThe value returned by its [toString] method is used to represent each\nkey or value.\n\nIf the map collection contains a reference to itself, either\ndirectly as a key or value, or indirectly through other collections\nor maps, the contained reference is rendered as [:'{...}':]. This\nprevents the infinite regress that would otherwise occur. So, for example,\ncalling this method on a map whose sole entry maps the string key 'me'\nto a reference to the map would return [:'{me: {...}}':].\n\nA typical implementation of a map's [toString] method will\nsimply return the results of this method applied to the collection.\n","id":"mapToString1()","line":"77"}],"uri":"sdk/lib/collection/maps.dart","kind":"class","id":"Maps","line":"13"},{"interfaces":[{"name":"LinkedHashMap","refId":"dart.collection/LinkedHashMap","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_LinkedHashMapImpl","children":[{"isOperator":true,"returnType":{"name":"void","refId":"void"},"name":"[]=","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"[]=2()","line":"400"},{"isOperator":true,"returnType":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"[]","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"[]1()","line":"409"},{"returnType":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"remove","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"remove1()","line":"415"},{"returnType":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"putIfAbsent","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"ifAbsent"}],"kind":"method","id":"putIfAbsent2()","line":"422"},{"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","uri":"sdk/lib/collection/map.dart","kind":"param","id":"key","line":"442"},{"ref":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"value","uri":"sdk/lib/collection/map.dart","kind":"param","id":"value","line":"442"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach1()","line":"442"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsKey","children":[{"ref":{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"containsKey1()","line":"448"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsValue","children":[{"ref":{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"containsValue1()","line":"452"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"466"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"471"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"}]},"name":"keys","kind":"property","id":"keys","line":"431"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"}]},"name":"values","kind":"property","id":"values","line":"437"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"property","id":"length","line":"458"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"462"},{"ref":{"name":"DoubleLinkedQueue","refId":"dart.collection/DoubleLinkedQueue","arguments":[{"name":"_KeyValuePair","refId":"dart.collection/_KeyValuePair","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"}]}]},"name":"_list","isPrivate":true,"kind":"variable","id":"_list","line":"386"},{"ref":{"name":"HashMap","refId":"dart.collection/HashMap","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},{"name":"DoubleLinkedQueueEntry","refId":"dart.collection/DoubleLinkedQueueEntry","arguments":[{"name":"_KeyValuePair","refId":"dart.collection/_KeyValuePair","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"}]}]}]},"name":"_map","isPrivate":true,"kind":"variable","id":"_map","line":"387"},{"name":"_LinkedHashMapImpl","kind":"constructor","id":"_LinkedHashMapImpl0()","line":"389"},{"name":"_LinkedHashMapImpl.from","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/_LinkedHashMapImpl/K"},{"name":"V","refId":"dart.collection/_LinkedHashMapImpl/V"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","id":"_LinkedHashMapImpl.from1()","line":"394"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","comment":"\nA LinkedHashMap is a hash map that preserves the insertion order\nwhen iterating over the keys or the values. Updating the value of a\nkey does not change the order.\n","id":"_LinkedHashMapImpl","line":"385"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_KeyValuePair","children":[{"isFinal":true,"ref":{"name":"K","refId":"dart.collection/_KeyValuePair/K"},"name":"key","kind":"variable","id":"key","line":"376"},{"ref":{"name":"V","refId":"dart.collection/_KeyValuePair/V"},"name":"value","kind":"variable","id":"value","line":"377"},{"name":"_KeyValuePair","children":[{"initializedField":{"name":"key","refId":"dart.collection/_KeyValuePair/key"},"ref":{"name":"K","refId":"dart.collection/_KeyValuePair/K"},"name":"key","kind":"param","id":"key"},{"initializedField":{"name":"value","refId":"dart.collection/_KeyValuePair/value"},"ref":{"name":"V","refId":"dart.collection/_KeyValuePair/V"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","id":"_KeyValuePair2()","line":"374"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","comment":"\nThis class represents a pair of two objects, used by LinkedHashMap\nto store a {key, value} in a list.\n","id":"_KeyValuePair","line":"373"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_DeletedKeySentinel","children":[{"name":"_DeletedKeySentinel","kind":"constructor","id":"_DeletedKeySentinel0()","line":"365"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","comment":"\nA singleton sentinel used to represent when a key is deleted from the map.\nWe can't use [: const Object() :] as a sentinel because it would end up\ncanonicalized and then we cannot distinguish the deleted key from the\ncanonicalized [: Object() :].\n","id":"_DeletedKeySentinel","line":"364"},{"superclass":{"name":"_HashMapImplIterator","refId":"dart.collection/_HashMapImplIterator","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_HashMapImplIndexIterator","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_computeCurrentFromIndex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"keys","kind":"param","id":"keys"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"values","kind":"param","id":"values"}],"isPrivate":true,"kind":"method","id":"_computeCurrentFromIndex3()","line":"353"},{"name":"_HashMapImplIndexIterator","children":[{"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"map","kind":"param","id":"map"}],"kind":"constructor","id":"_HashMapImplIndexIterator1()","line":"351"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplIndexIterator","line":"350"},{"superclass":{"name":"_HashMapImplIterator","refId":"dart.collection/_HashMapImplIterator","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplValueIterator/E"}]},"name":"_HashMapImplValueIterator","children":[{"returnType":{"name":"E","refId":"dart.collection/_HashMapImplValueIterator/E"},"name":"_computeCurrentFromIndex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"keys","kind":"param","id":"keys"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"values","kind":"param","id":"values"}],"isPrivate":true,"kind":"method","id":"_computeCurrentFromIndex3()","line":"345"},{"name":"_HashMapImplValueIterator","children":[{"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"map","kind":"param","id":"map"}],"kind":"constructor","id":"_HashMapImplValueIterator1()","line":"343"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplValueIterator","line":"342"},{"superclass":{"name":"_HashMapImplIterator","refId":"dart.collection/_HashMapImplIterator","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplKeyIterator/E"}]},"name":"_HashMapImplKeyIterator","children":[{"returnType":{"name":"E","refId":"dart.collection/_HashMapImplKeyIterator/E"},"name":"_computeCurrentFromIndex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"keys","kind":"param","id":"keys"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"values","kind":"param","id":"values"}],"isPrivate":true,"kind":"method","id":"_computeCurrentFromIndex3()","line":"337"},{"name":"_HashMapImplKeyIterator","children":[{"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"map","kind":"param","id":"map"}],"kind":"constructor","id":"_HashMapImplKeyIterator1()","line":"335"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplKeyIterator","line":"334"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplIterator/E"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_HashMapImplIterator","children":[{"returnType":{"name":"E","refId":"dart.collection/_HashMapImplIterator/E"},"name":"_computeCurrentFromIndex","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"keys","kind":"param","id":"keys"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"values","kind":"param","id":"values"}],"isPrivate":true,"kind":"method","id":"_computeCurrentFromIndex3()","line":"312"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"314"},{"ref":{"name":"E","refId":"dart.collection/_HashMapImplIterator/E"},"name":"current","kind":"property","id":"current","line":"331"},{"isFinal":true,"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"variable","id":"_map","line":"306"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_index","isPrivate":true,"kind":"variable","id":"_index","line":"307"},{"ref":{"name":"E","refId":"dart.collection/_HashMapImplIterator/E"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"308"},{"name":"_HashMapImplIterator","children":[{"initializedField":{"name":"_map","refId":"dart.collection/_HashMapImplIterator/_map"},"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"param","id":"_map"}],"kind":"constructor","id":"_HashMapImplIterator1()","line":"310"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplIterator","line":"305"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplValueIterable/E"}]},"name":"_HashMapImplValueIterable","children":[{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplValueIterable/E"}]},"name":"iterator","kind":"property","id":"iterator","line":"302"},{"isFinal":true,"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"variable","id":"_map","line":"299"},{"name":"_HashMapImplValueIterable","children":[{"initializedField":{"name":"_map","refId":"dart.collection/_HashMapImplValueIterable/_map"},"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"param","id":"_map"}],"kind":"constructor","id":"_HashMapImplValueIterable1()","line":"300"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplValueIterable","line":"298"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplKeyIterable/E"}]},"name":"_HashMapImplKeyIterable","children":[{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"E","refId":"dart.collection/_HashMapImplKeyIterable/E"}]},"name":"iterator","kind":"property","id":"iterator","line":"295"},{"isFinal":true,"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"variable","id":"_map","line":"292"},{"name":"_HashMapImplKeyIterable","children":[{"initializedField":{"name":"_map","refId":"dart.collection/_HashMapImplKeyIterable/_map"},"ref":{"name":"_HashMapImpl","refId":"dart.collection/_HashMapImpl"},"name":"_map","isPrivate":true,"kind":"param","id":"_map"}],"kind":"constructor","id":"_HashMapImplKeyIterable1()","line":"293"},{"name":"E","kind":"typeparam","id":"E"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImplKeyIterable","line":"291"},{"interfaces":[{"name":"HashMap","refId":"dart.collection/HashMap","arguments":[{"name":"K","refId":"dart.collection/_HashMapImpl/K"},{"name":"V","refId":"dart.collection/_HashMapImpl/V"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_HashMapImpl","children":[{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_computeLoadLimit","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"capacity","kind":"param","id":"capacity"}],"isPrivate":true,"kind":"method","id":"_computeLoadLimit1()","line":"97"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_firstProbe","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"hashCode","kind":"param","id":"hashCode"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"param","id":"length"}],"isPrivate":true,"kind":"method","id":"_firstProbe2()","line":"101"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"_nextProbe","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"currentProbe","kind":"param","id":"currentProbe"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"numberOfProbes","kind":"param","id":"numberOfProbes"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"param","id":"length"}],"isPrivate":true,"kind":"method","id":"_nextProbe3()","line":"105"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_probeForAdding","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"isPrivate":true,"kind":"method","id":"_probeForAdding1()","line":"109"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_probeForLookup","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"isPrivate":true,"kind":"method","id":"_probeForLookup1()","line":"144"},{"returnType":{"name":"void","refId":"void"},"name":"_ensureCapacity","isPrivate":true,"kind":"method","id":"_ensureCapacity0()","line":"164"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_isPowerOfTwo","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_isPowerOfTwo1()","line":"184"},{"returnType":{"name":"void","refId":"void"},"name":"_grow","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"newCapacity","kind":"param","id":"newCapacity"}],"isPrivate":true,"kind":"method","id":"_grow1()","line":"188"},{"returnType":{"name":"void","refId":"void"},"name":"clear","kind":"method","id":"clear0()","line":"212"},{"isOperator":true,"returnType":{"name":"void","refId":"void"},"name":"[]=","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"[]=2()","line":"222"},{"isOperator":true,"returnType":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"[]","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"[]1()","line":"232"},{"returnType":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"putIfAbsent","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"ifAbsent","children":[{"returnType":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"ifAbsent"}],"kind":"method","id":"putIfAbsent2()","line":"238"},{"returnType":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"remove","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"remove1()","line":"247"},{"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","uri":"sdk/lib/collection/map.dart","kind":"param","id":"key","line":"269"},{"ref":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"value","uri":"sdk/lib/collection/map.dart","kind":"param","id":"value","line":"269"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach1()","line":"269"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsKey","children":[{"ref":{"name":"K","refId":"dart.collection/_HashMapImpl/K"},"name":"key","kind":"param","id":"key"}],"kind":"method","id":"containsKey1()","line":"280"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"containsValue","children":[{"ref":{"name":"V","refId":"dart.collection/_HashMapImpl/V"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"containsValue1()","line":"284"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"286"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"261"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"property","id":"length","line":"265"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"K","refId":"dart.collection/_HashMapImpl/K"}]},"name":"keys","kind":"property","id":"keys","line":"276"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"V","refId":"dart.collection/_HashMapImpl/V"}]},"name":"values","kind":"property","id":"values","line":"278"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"_keys","isPrivate":true,"kind":"variable","id":"_keys","line":"59"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"V","refId":"dart.collection/_HashMapImpl/V"}]},"name":"_values","isPrivate":true,"kind":"variable","id":"_values","line":"64"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_loadLimit","isPrivate":true,"kind":"variable","id":"_loadLimit","line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_numberOfEntries","isPrivate":true,"kind":"variable","id":"_numberOfEntries","line":"72"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_numberOfDeleted","isPrivate":true,"kind":"variable","id":"_numberOfDeleted","line":"75"},{"ref":{"name":"_DeletedKeySentinel","refId":"dart.collection/_DeletedKeySentinel"},"isStatic":true,"name":"_DELETED_KEY","isPrivate":true,"kind":"variable","id":"_DELETED_KEY","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_INITIAL_CAPACITY","isPrivate":true,"kind":"variable","id":"_INITIAL_CAPACITY","line":"81"},{"name":"_HashMapImpl","kind":"constructor","id":"_HashMapImpl0()","line":"83"},{"name":"_HashMapImpl.from","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/_HashMapImpl/K"},{"name":"V","refId":"dart.collection/_HashMapImpl/V"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","id":"_HashMapImpl.from1()","line":"91"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"isPrivate":true,"uri":"sdk/lib/collection/map.dart","kind":"class","id":"_HashMapImpl","line":"44"},{"superclass":{"name":"HashMap","refId":"dart.collection/HashMap","arguments":[{"name":"K","refId":"dart.collection/LinkedHashMap/K"},{"name":"V","refId":"dart.collection/LinkedHashMap/V"}]},"isAbstract":true,"name":"LinkedHashMap","children":[{"name":"LinkedHashMap","kind":"constructor","comment":"\nCreates a map with the default implementation.\n","id":"LinkedHashMap0()","line":"33"},{"name":"LinkedHashMap.from","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/LinkedHashMap/K"},{"name":"V","refId":"dart.collection/LinkedHashMap/V"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","comment":"\nCreates a [LinkedHashMap] that contains all key value pairs of [other].\n","id":"LinkedHashMap.from1()","line":"38"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"uri":"sdk/lib/collection/map.dart","kind":"class","comment":"\nHash map version of the [Map] interface that preserves insertion\norder.\n","id":"LinkedHashMap","line":"29"},{"superclass":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/HashMap/K"},{"name":"V","refId":"dart.collection/HashMap/V"}]},"isAbstract":true,"name":"HashMap","children":[{"name":"HashMap","kind":"constructor","comment":"\nCreates a map with the default implementation.\n","id":"HashMap0()","line":"17"},{"name":"HashMap.from","children":[{"ref":{"name":"Map","refId":"dart.core/Map","arguments":[{"name":"K","refId":"dart.collection/HashMap/K"},{"name":"V","refId":"dart.collection/HashMap/V"}]},"name":"other","kind":"param","id":"other"}],"kind":"constructor","comment":"\nCreates a [HashMap] that contains all key value pairs of [other].\n","id":"HashMap.from1()","line":"22"},{"name":"K","kind":"typeparam","id":"K"},{"name":"V","kind":"typeparam","id":"V"}],"uri":"sdk/lib/collection/map.dart","kind":"class","comment":"\nHash map version of the [Map] interface. A [HashMap] does not\nprovide any guarantees on the order of keys and values in [keys]\nand [values].\n","id":"HashMap","line":"13"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"HasNextIterator","children":[{"returnType":{"name":"E","refId":"dart.collection/HasNextIterator/E"},"name":"next","kind":"method","id":"next0()","line":"28"},{"returnType":{"name":"void","refId":"void"},"name":"_move","isPrivate":true,"kind":"method","id":"_move0()","line":"38"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"hasNext","kind":"property","id":"hasNext","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_HAS_NEXT_AND_NEXT_IN_CURRENT","isPrivate":true,"kind":"variable","id":"_HAS_NEXT_AND_NEXT_IN_CURRENT","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_NO_NEXT","isPrivate":true,"kind":"variable","id":"_NO_NEXT","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_NOT_MOVED_YET","isPrivate":true,"kind":"variable","id":"_NOT_MOVED_YET","line":"16"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator"},"name":"_iterator","isPrivate":true,"kind":"variable","id":"_iterator","line":"18"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_state","isPrivate":true,"kind":"variable","id":"_state","line":"19"},{"name":"HasNextIterator","children":[{"initializedField":{"name":"_iterator","refId":"dart.collection/HasNextIterator/_iterator"},"ref":{"name":"Iterator","refId":"dart.core/Iterator"},"name":"_iterator","isPrivate":true,"kind":"param","id":"_iterator"}],"kind":"constructor","id":"HasNextIterator1()","line":"21"},{"name":"E","kind":"typeparam","id":"E"}],"uri":"sdk/lib/collection/iterator.dart","kind":"class","comment":"\nThe [HasNextIterator] class wraps an [Iterator] and provides methods to\niterate over an object using `hasNext` and `next`.\n\nAn [HasNextIterator] does not implement the [Iterator] interface.\n","id":"HasNextIterator","line":"13"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Collections","children":[{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"contains","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"373"},{"name":"element","kind":"param","id":"element","line":"373"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"contains2()","line":"372"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"378"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"378"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f","line":"378"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"forEach2()","line":"377"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"any","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"384"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"384"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f","line":"384"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"any2()","line":"383"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"every","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"389"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"389"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f","line":"389"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"every2()","line":"388"},{"isStatic":true,"name":"reduce","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"394"},{"name":"initialValue","kind":"param","id":"initialValue","line":"395"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"combine","children":[{"name":"Function","children":[{"name":"previousValue","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"previousValue","line":"396"},{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"396"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"combine","line":"396"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"reduce3()","line":"393"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"401"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"isEmpty1()","line":"400"},{"isStatic":true,"name":"first","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"406"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"first1()","line":"405"},{"isStatic":true,"name":"last","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"411"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"last1()","line":"410"},{"isStatic":true,"name":"min","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"416"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"name":"a","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"a","line":"416"},{"name":"b","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"b","line":"416"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare","line":"416"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"min2()","line":"415"},{"isStatic":true,"name":"max","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"421"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"name":"a","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"a","line":"421"},{"name":"b","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"b","line":"421"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare","line":"421"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"max2()","line":"420"},{"isStatic":true,"name":"single","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"426"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"single1()","line":"425"},{"isStatic":true,"name":"firstMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"431"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"432"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"432"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"433"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"firstMatching3()","line":"430"},{"isStatic":true,"name":"lastMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"438"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"439"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"439"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"440"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"lastMatching3()","line":"437"},{"isStatic":true,"name":"lastMatchingInList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list","line":"445"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"446"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"446"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"447"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"lastMatchingInList3()","line":"444"},{"isStatic":true,"name":"singleMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"452"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"452"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"452"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"singleMatching2()","line":"451"},{"isStatic":true,"name":"elementAt","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"457"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index","line":"457"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"elementAt2()","line":"456"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"join","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"462"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"name":"separator","kind":"param","id":"separator","line":"462"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"join2()","line":"461"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"joinList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list","line":"467"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"name":"separator","kind":"param","id":"separator","line":"467"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"joinList2()","line":"466"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"where","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"472"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"472"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f","line":"472"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"where2()","line":"471"},{"isStatic":true,"returnType":{"name":"List","refId":"dart.core/List"},"name":"mappedByList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list","line":"477"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"477"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f","line":"477"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"mappedByList2()","line":"476"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"takeList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list","line":"482"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n","line":"482"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"takeList2()","line":"481"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"takeWhile","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"487"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"487"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"487"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"takeWhile2()","line":"486"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"skipList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list","line":"492"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n","line":"492"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"skipList2()","line":"491"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"skipWhile","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable","line":"497"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"497"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"497"}],"kind":"method","comment":"Deprecated. Use the same method in [IterableMixinWorkaround] instead.","id":"skipWhile2()","line":"496"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"collectionToString","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"c","kind":"param","id":"c"}],"kind":"method","id":"collectionToString1()","line":"500"}],"uri":"sdk/lib/collection/collections.dart","kind":"class","comment":"\nThe [Collections] class implements static methods useful when\nwriting a class that implements [Collection] and the [iterator]\nmethod.\n","id":"Collections","line":"370"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"IterableMixinWorkaround","children":[{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"contains","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"name":"element","kind":"param","id":"element"}],"kind":"method","id":"contains2()","line":"13"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"forEach","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"20"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"forEach2()","line":"20"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"any","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"26"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"any2()","line":"26"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"every","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"o","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"o","line":"33"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"every2()","line":"33"},{"isStatic":true,"name":"reduce","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"name":"initialValue","kind":"param","id":"initialValue","line":"41"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"combine","children":[{"name":"Function","children":[{"name":"previousValue","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"previousValue","line":"42"},{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"42"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"combine","line":"42"}],"kind":"method","id":"reduce3()","line":"40"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"removeAll","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"elementsToRemove","kind":"param","id":"elementsToRemove"}],"kind":"method","comment":"\nSimple implementation for [Collection.removeAll].\n\nThis implementation assumes that [Collection.remove] on [collection]\nis efficient. The [:remove:] method on [List] objects is typically\nnot efficient since it requires linear search to find an element.\n","id":"removeAll2()","line":"56"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"removeAllList","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"elementsToRemove","kind":"param","id":"elementsToRemove"}],"kind":"method","comment":"\nImplementation of [Collection.removeAll] for lists.\n\nThis implementation assumes that [Collection.remove] is not efficient\n(as it usually isn't on a [List]) and uses [Collection.removeMathcing]\ninstead of just repeatedly calling remove.\n","id":"removeAllList2()","line":"69"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"retainAll","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"elementsToRetain","kind":"param","id":"elementsToRetain"}],"kind":"method","comment":"\nSimple implemenation for [Collection.retainAll].\n\nThis implementation assumes that [Collecton.retainMatching] on [collection]\nis efficient.\n","id":"retainAll2()","line":"86"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"removeMatching","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"106"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nSimple implemenation for [Collection.removeMatching].\n\nThis implementation assumes that [Collecton.removeAll] on [collection] is\nefficient.\n","id":"removeMatching2()","line":"106"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"removeMatchingList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"121"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nRemoves elements matching [test] from [list].\n\nThis is performed in two steps, to avoid exposing an inconsistent state\nto the [test] function. First the elements to ratain are found, and then\nthe original list is updated to contain those elements.\n","id":"removeMatchingList2()","line":"121"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"retainMatching","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection"},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"146"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nSimple implemenation for [Collection.retainMatching].\n\nThis implementation assumes that [Collecton.removeAll] on [collection] is\nefficient.\n","id":"retainMatching2()","line":"146"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","id":"isEmpty1()","line":"154"},{"isStatic":true,"name":"first","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","id":"first1()","line":"158"},{"isStatic":true,"name":"last","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","id":"last1()","line":"166"},{"isStatic":true,"name":"min","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"name":"a","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"a","line":"178"},{"name":"b","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"b","line":"178"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare"}],"kind":"method","id":"min2()","line":"178"},{"isStatic":true,"name":"max","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"name":"a","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"a","line":"191"},{"name":"b","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"b","line":"191"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare"}],"kind":"method","id":"max2()","line":"191"},{"isStatic":true,"name":"single","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"}],"kind":"method","id":"single1()","line":"204"},{"isStatic":true,"name":"firstMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"213"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"213"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"214"}],"kind":"method","id":"firstMatching3()","line":"212"},{"isStatic":true,"name":"lastMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"223"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"223"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"224"}],"kind":"method","id":"lastMatching3()","line":"222"},{"isStatic":true,"name":"lastMatchingInList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"239"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"239"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"orElse","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"orElse","line":"240"}],"kind":"method","id":"lastMatchingInList3()","line":"238"},{"isStatic":true,"name":"singleMatching","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"250"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"singleMatching2()","line":"250"},{"isStatic":true,"name":"elementAt","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"}],"kind":"method","id":"elementAt2()","line":"266"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"join","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"name":"separator","kind":"param","id":"separator"}],"kind":"method","id":"join2()","line":"276"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"joinList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"String","refId":"dart.core/String"},"isOptional":true,"name":"separator","kind":"param","id":"separator"}],"kind":"method","id":"joinList2()","line":"294"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"where","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"312"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"where2()","line":"312"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"map","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"316"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"map2()","line":"316"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"mapList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"320"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"mapList2()","line":"320"},{"isStatic":true,"returnType":{"name":"List","refId":"dart.core/List"},"name":"mappedByList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"324"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"mappedByList2()","line":"324"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"expand","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"element","line":"329"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","id":"expand2()","line":"329"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"takeList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"takeList2()","line":"333"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"takeWhile","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"339"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"takeWhile2()","line":"339"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"skipList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"n","kind":"param","id":"n"}],"kind":"method","id":"skipList2()","line":"344"},{"isStatic":true,"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"skipWhile","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"iterable","kind":"param","id":"iterable"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"value","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"value","line":"350"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"skipWhile2()","line":"350"},{"isStatic":true,"returnType":{"name":"List","refId":"dart.core/List"},"name":"reversedList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"l","kind":"param","id":"l"}],"kind":"method","id":"reversedList1()","line":"355"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"sortList","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"l","kind":"param","id":"l"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"name":"a","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"a","line":"359"},{"name":"b","uri":"sdk/lib/collection/collections.dart","kind":"param","id":"b","line":"359"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare"}],"kind":"method","id":"sortList2()","line":"359"}],"uri":"sdk/lib/collection/collections.dart","kind":"class","comment":"\nThis class provides default implementations for Iterables (including Lists).\n\nOnce Dart receives Mixins it will be replaced with mixin classes.\n","id":"IterableMixinWorkaround","line":"12"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Arrays","children":[{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"copy","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"src","kind":"param","id":"src"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"srcStart","kind":"param","id":"srcStart"},{"ref":{"name":"List","refId":"dart.core/List"},"name":"dst","kind":"param","id":"dst","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"dstStart","kind":"param","id":"dstStart","line":"10"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"count","kind":"param","id":"count","line":"10"}],"kind":"method","id":"copy5()","line":"9"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"areEqual","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"b","kind":"param","id":"b"}],"kind":"method","id":"areEqual2()","line":"26"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"indexOf","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"element","kind":"param","id":"element","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"startIndex","kind":"param","id":"startIndex","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"endIndex","kind":"param","id":"endIndex","line":"46"}],"kind":"method","comment":"\nReturns the index in the list [a] of the given [element], starting\nthe search at index [startIndex] to [endIndex] (exclusive).\nReturns -1 if [element] is not found.\n","id":"indexOf4()","line":"43"},{"isStatic":true,"returnType":{"name":"int","refId":"dart.core/int"},"name":"lastIndexOf","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"element","kind":"param","id":"element"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"startIndex","kind":"param","id":"startIndex"}],"kind":"method","comment":"\nReturns the last index in the list [a] of the given [element], starting\nthe search at index [startIndex] to 0.\nReturns -1 if [element] is not found.\n","id":"lastIndexOf3()","line":"66"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"rangeCheck","children":[{"ref":{"name":"List","refId":"dart.core/List"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"start","kind":"param","id":"start"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"param","id":"length"}],"kind":"method","id":"rangeCheck3()","line":"81"}],"uri":"sdk/lib/collection/arrays.dart","kind":"class","id":"Arrays","line":"8"}],"uri":"sdk/lib/collection/collection.dart","kind":"library","id":"dart.collection","line":"5"}