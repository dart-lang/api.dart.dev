{"name":"dart:async","children":[{"returnType":{"name":"void","refId":"void"},"name":"_defaultHandleDone","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink"},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Default done handler forwards done. ","id":"_defaultHandleDone1()","line":"483"},{"returnType":{"name":"void","refId":"void"},"name":"_defaultHandleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink"},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Default error handler forwards all errors. ","id":"_defaultHandleError2()","line":"478"},{"returnType":{"name":"void","refId":"void"},"name":"_defaultHandleData","children":[{"name":"data","kind":"param","id":"data"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink"},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Default data handler forwards all data. ","id":"_defaultHandleData2()","line":"473"},{"name":"_cancelAndError","children":[{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription"},"name":"subscription","kind":"param","id":"subscription"},{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Helper function to make an onError argument to [_runUserCode]. ","id":"_cancelAndError2()","line":"33"},{"name":"_runUserCode","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"userCode","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"userCode"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onSuccess","children":[{"name":"Function","children":[{"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"15"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onSuccess"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"15"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"},{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"isNamed":true,"isOptional":true,"name":"cause","kind":"param","id":"cause","line":"16"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Runs user code and takes actions depending on success or failure. ","id":"_runUserCode4()","line":"15"},{"returnType":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"_asyncError","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"stackTrace","kind":"param","id":"stackTrace"},{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"isOptional":true,"name":"cause","kind":"param","id":"cause"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"method","comment":"Utility function to create an [AsyncError] if [error] isn't one already. ","id":"_asyncError3()","line":"8"},{"returnType":{"name":"void","refId":"void"},"name":"_nullDoneHandler","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"method","comment":"Default done handler, does nothing. ","id":"_nullDoneHandler0()","line":"811"},{"returnType":{"name":"void","refId":"void"},"name":"_nullErrorHandler","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"method","comment":"Default error handler, reports the error to the global handler. ","id":"_nullErrorHandler1()","line":"806"},{"returnType":{"name":"void","refId":"void"},"name":"_nullDataHandler","children":[{"name":"value","kind":"param","id":"value"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"method","comment":"Default data handler, does nothing. ","id":"_nullDataHandler1()","line":"803"},{"name":"deprecatedFutureValue","children":[{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"uri":"sdk/lib/async/future_impl.dart","kind":"method","id":"deprecatedFutureValue1()","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_PAUSE_COUNT_SHIFT","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_PAUSE_COUNT_SHIFT","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_EVENT_ID_SHIFT","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_EVENT_ID_SHIFT","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_EVENT_ID","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_EVENT_ID","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_PENDING_UNSUBSCRIBE","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_PENDING_UNSUBSCRIBE","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_SUBSCRIBED","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_SUBSCRIBED","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_LISTENER_UNSUBSCRIBED","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_LISTENER_UNSUBSCRIBED","line":"31"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_PAUSE_COUNT_SHIFT","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_PAUSE_COUNT_SHIFT","line":"26"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_FIRING","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_FIRING","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_EVENT_ID_SHIFT","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_EVENT_ID_SHIFT","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_EVENT_ID","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_EVENT_ID","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_COMPLETE","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_COMPLETE","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_CLOSED","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_CLOSED","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_STREAM_OPEN","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"variable","id":"_STREAM_OPEN","line":"10"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Timer","children":[{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","comment":"\nCancels the timer.\n","id":"cancel0()","line":"24"},{"name":"Timer","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"milliseconds","kind":"param","id":"milliseconds"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"callback","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"name":"timer","uri":"sdk/lib/async/timer.dart","kind":"param","id":"timer","line":"12"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"callback"}],"kind":"constructor","comment":"\nCreates a new timer. The [callback] callback is invoked after\n[milliseconds] milliseconds.\n","id":"Timer2()","line":"12"},{"name":"Timer.repeating","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"milliseconds","kind":"param","id":"milliseconds"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"callback","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"Timer","refId":"dart.async/Timer"},"name":"timer","uri":"sdk/lib/async/timer.dart","kind":"param","id":"timer","line":"19"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"callback","line":"19"}],"kind":"constructor","comment":"\nCreates a new repeating timer. The [callback] is invoked every\n[milliseconds] millisecond until cancelled.\n","id":"Timer.repeating2()","line":"18"}],"uri":"sdk/lib/async/timer.dart","kind":"class","id":"Timer","line":"7"},{"superclass":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[{"name":"S","refId":"dart.async/_StreamTransformerImpl/S"},{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"_StreamTransformerImpl","children":[{"returnType":{"name":"void","refId":"void"},"name":"handleData","children":[{"ref":{"name":"S","refId":"dart.async/_StreamTransformerImpl/S"},"name":"data","kind":"param","id":"data"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","id":"handleData2()","line":"524"},{"returnType":{"name":"void","refId":"void"},"name":"handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","id":"handleError2()","line":"528"},{"returnType":{"name":"void","refId":"void"},"name":"handleDone","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","id":"handleDone1()","line":"532"},{"isFinal":true,"ref":{"name":"Function","refId":"dart.core/Function"},"name":"_handleData","isPrivate":true,"kind":"variable","id":"_handleData","line":"510"},{"isFinal":true,"ref":{"name":"_TransformErrorHandler","refId":"dart.async/_TransformErrorHandler"},"name":"_handleError","isPrivate":true,"kind":"variable","id":"_handleError","line":"511"},{"isFinal":true,"ref":{"name":"_TransformDoneHandler","refId":"dart.async/_TransformDoneHandler"},"name":"_handleDone","isPrivate":true,"kind":"variable","id":"_handleDone","line":"512"},{"name":"_StreamTransformerImpl","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_StreamTransformerImpl/S"},"name":"data","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"data","line":"514"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"sink","line":"514"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"data","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"data","line":"515"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"sink","line":"515"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError","line":"515"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamTransformerImpl/T"}]},"name":"sink","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"sink","line":"516"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone","line":"516"}],"kind":"constructor","id":"_StreamTransformerImpl3()","line":"514"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nA [StreamTransformer] that modifies stream events.\n\nThis class is used by [StreamTransformer]'s factory constructor.\nIt is actually an [StreamEventTransformer] where the functions used to\nmodify the events are passed as constructor arguments.\n\nIf an argument is omitted, it acts as the default method from\n[StreamEventTransformer].\n","id":"_StreamTransformerImpl","line":"507"},{"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamImplSink/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_StreamImplSink","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImplSink/T"},"name":"data","kind":"param","id":"data"}],"kind":"method","id":"add1()","line":"492"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"kind":"method","id":"signalError1()","line":"493"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","id":"close0()","line":"494"},{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_StreamImplSink/T"}]},"name":"_target","isPrivate":true,"kind":"variable","id":"_target","line":"490"},{"name":"_StreamImplSink","children":[{"initializedField":{"name":"_target","refId":"dart.async/_StreamImplSink/_target"},"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_StreamImplSink/T"}]},"name":"_target","isPrivate":true,"kind":"param","id":"_target"}],"kind":"constructor","id":"_StreamImplSink1()","line":"491"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"Creates a [StreamSink] from a [_StreamImpl]'s input methods. ","id":"_StreamImplSink","line":"489"},{"returnType":{"name":"void","refId":"void"},"name":"_TransformDoneHandler","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_TransformDoneHandler/T"}]},"name":"sink","kind":"param","id":"sink"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_TransformDoneHandler","line":"470"},{"returnType":{"name":"void","refId":"void"},"name":"_TransformErrorHandler","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"data","kind":"param","id":"data"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_TransformErrorHandler/T"}]},"name":"sink","kind":"param","id":"sink"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_TransformErrorHandler","line":"469"},{"returnType":{"name":"void","refId":"void"},"name":"_TransformDataHandler","children":[{"ref":{"name":"S","refId":"dart.async/_TransformDataHandler/S"},"name":"data","kind":"param","id":"data"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_TransformDataHandler/T"}]},"name":"sink","kind":"param","id":"sink"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_TransformDataHandler","line":"468"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"},{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"name":"_DistinctStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"442"},{"isStatic":true,"name":"_SENTINEL","isPrivate":true,"kind":"variable","id":"_SENTINEL","line":"434"},{"ref":{"name":"_Equality","refId":"dart.async/_Equality"},"name":"_equals","isPrivate":true,"kind":"variable","id":"_equals","line":"436"},{"name":"_previous","isPrivate":true,"kind":"variable","id":"_previous","line":"437"},{"name":"_DistinctStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_DistinctStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"equals","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"name":"a","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"a","line":"439"},{"ref":{"name":"T","refId":"dart.async/_DistinctStream/T"},"name":"b","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"b","line":"439"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"equals"}],"kind":"constructor","id":"_DistinctStream2()","line":"439"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_DistinctStream","line":"433"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_Equality","children":[{"ref":{"name":"T","refId":"dart.async/_Equality/T"},"name":"a","kind":"param","id":"a"},{"ref":{"name":"T","refId":"dart.async/_Equality/T"},"name":"b","kind":"param","id":"b"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_Equality","line":"431"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"},{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"name":"_SkipWhileStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_SkipWhileStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"411"},{"isFinal":true,"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"name":"_test","isPrivate":true,"kind":"variable","id":"_test","line":"405"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasFailed","isPrivate":true,"kind":"variable","id":"_hasFailed","line":"406"},{"name":"_SkipWhileStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_SkipWhileStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_SkipWhileStream/T"},"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"408"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"constructor","id":"_SkipWhileStream2()","line":"408"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_SkipWhileStream","line":"404"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"},{"name":"T","refId":"dart.async/_SkipStream/T"}]},"name":"_SkipStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_SkipStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"395"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_remaining","isPrivate":true,"kind":"variable","id":"_remaining","line":"386"},{"name":"_SkipStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_SkipStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"count","kind":"param","id":"count"}],"kind":"constructor","id":"_SkipStream2()","line":"388"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_SkipStream","line":"385"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"},{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"name":"_TakeWhileStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_TakeWhileStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"367"},{"isFinal":true,"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"name":"_test","isPrivate":true,"kind":"variable","id":"_test","line":"362"},{"name":"_TakeWhileStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_TakeWhileStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_TakeWhileStream/T"},"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"364"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"constructor","id":"_TakeWhileStream2()","line":"364"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_TakeWhileStream","line":"361"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"},{"name":"T","refId":"dart.async/_TakeStream/T"}]},"name":"_TakeStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_TakeStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"347"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_remaining","isPrivate":true,"kind":"variable","id":"_remaining","line":"338"},{"name":"_TakeStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_TakeStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"count","kind":"param","id":"count"}],"kind":"constructor","id":"_TakeStream2()","line":"340"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_TakeStream","line":"337"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"},{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"name":"_HandleErrorStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleError2()","line":"313"},{"isFinal":true,"ref":{"name":"_ErrorTransformation","refId":"dart.async/_ErrorTransformation"},"name":"_transform","isPrivate":true,"kind":"variable","id":"_transform","line":"305"},{"isFinal":true,"ref":{"name":"_ErrorTest","refId":"dart.async/_ErrorTest"},"name":"_test","isPrivate":true,"kind":"variable","id":"_test","line":"306"},{"name":"_HandleErrorStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_HandleErrorStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"transform","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"event","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"event","line":"309"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"transform","line":"309"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"310"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"310"}],"kind":"constructor","id":"_HandleErrorStream3()","line":"308"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nA stream pipe that converts or disposes error events\nbefore passing them on.\n","id":"_HandleErrorStream","line":"304"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_ErrorTest","children":[{"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_ErrorTest","line":"298"},{"returnType":{"name":"void","refId":"void"},"name":"_ErrorTransformation","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_ErrorTransformation","line":"297"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ExpandStream/S"},{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"name":"_ExpandStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"S","refId":"dart.async/_ExpandStream/S"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"283"},{"isFinal":true,"ref":{"name":"_Transformation","refId":"dart.async/_Transformation"},"name":"_expand","isPrivate":true,"kind":"variable","id":"_expand","line":"278"},{"name":"_ExpandStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ExpandStream/S"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"expand","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/_ExpandStream/T"}]},"name":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_ExpandStream/S"},"name":"event","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"event","line":"280"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"expand"}],"kind":"constructor","id":"_ExpandStream2()","line":"280"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nA stream pipe that converts data events before passing them on.\n","id":"_ExpandStream","line":"277"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_MapStream/S"},{"name":"T","refId":"dart.async/_MapStream/T"}]},"name":"_MapStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"S","refId":"dart.async/_MapStream/S"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_MapStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"262"},{"isFinal":true,"ref":{"name":"_Transformation","refId":"dart.async/_Transformation"},"name":"_transform","isPrivate":true,"kind":"variable","id":"_transform","line":"257"},{"name":"_MapStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_MapStream/S"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"transform","children":[{"returnType":{"name":"T","refId":"dart.async/_MapStream/T"},"name":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_MapStream/S"},"name":"event","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"event","line":"259"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"transform"}],"kind":"constructor","id":"_MapStream2()","line":"259"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nA stream pipe that converts data events before passing them on.\n","id":"_MapStream","line":"256"},{"returnType":{"name":"T","refId":"dart.async/_Transformation/T"},"name":"_Transformation","children":[{"ref":{"name":"S","refId":"dart.async/_Transformation/S"},"name":"value","kind":"param","id":"value"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_Transformation","line":"251"},{"superclass":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"},{"name":"T","refId":"dart.async/_WhereStream/T"}]},"name":"_WhereStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"T","refId":"dart.async/_WhereStream/T"},"name":"inputEvent","kind":"param","id":"inputEvent"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"236"},{"isFinal":true,"ref":{"name":"_Predicate","refId":"dart.async/_Predicate"},"name":"_test","isPrivate":true,"kind":"variable","id":"_test","line":"231"},{"name":"_WhereStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_WhereStream/T"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_WhereStream/T"},"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"233"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"constructor","id":"_WhereStream2()","line":"233"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","id":"_WhereStream","line":"230"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_Predicate","children":[{"ref":{"name":"T","refId":"dart.async/_Predicate/T"},"name":"value","kind":"param","id":"value"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"typedef","id":"_Predicate","line":"228"},{"interfaces":[{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]}],"superclass":{"name":"_BaseStreamSubscription","refId":"dart.async/_BaseStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"name":"_ForwardingStreamSubscription","children":[{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"resumeSignal","kind":"param","id":"resumeSignal"}],"kind":"method","id":"pause1()","line":"160"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","id":"resume0()","line":"167"},{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","id":"cancel0()","line":"174"},{"returnType":{"name":"void","refId":"void"},"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_sendData1()","line":"184"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"188"},{"returnType":{"name":"void","refId":"void"},"name":"_sendDone","isPrivate":true,"kind":"method","id":"_sendDone0()","line":"196"},{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_handleData1()","line":"209"},{"returnType":{"name":"void","refId":"void"},"name":"_handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_handleError1()","line":"213"},{"returnType":{"name":"void","refId":"void"},"name":"_handleDone","isPrivate":true,"kind":"method","id":"_handleDone0()","line":"217"},{"isFinal":true,"ref":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"},{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"name":"_stream","isPrivate":true,"kind":"variable","id":"_stream","line":"140"},{"isFinal":true,"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"variable","id":"_unsubscribeOnError","line":"141"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"}]},"name":"_subscription","isPrivate":true,"kind":"variable","id":"_subscription","line":"143"},{"name":"_ForwardingStreamSubscription","children":[{"initializedField":{"name":"_stream","refId":"dart.async/_ForwardingStreamSubscription/_stream"},"ref":{"name":"_ForwardingStream","refId":"dart.async/_ForwardingStream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStreamSubscription/S"},{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"}]},"name":"_stream","isPrivate":true,"kind":"param","id":"_stream"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStreamSubscription/T"},"name":"data","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"data","line":"146"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData","line":"146"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"147"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"147"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"148"},{"initializedField":{"name":"_unsubscribeOnError","refId":"dart.async/_ForwardingStreamSubscription/_unsubscribeOnError"},"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"param","id":"_unsubscribeOnError","line":"149"}],"kind":"constructor","id":"_ForwardingStreamSubscription5()","line":"145"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nAbstract superclass for subscriptions that forward to other subscriptions.\n","id":"_ForwardingStreamSubscription","line":"138"},{"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_BaseStreamSubscription/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_BaseStreamSubscription","children":[{"returnType":{"name":"void","refId":"void"},"name":"onData","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_BaseStreamSubscription/T"},"name":"event","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"event","line":"112"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleData"}],"kind":"method","id":"onData1()","line":"112"},{"returnType":{"name":"void","refId":"void"},"name":"onError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"117"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError"}],"kind":"method","id":"onError1()","line":"117"},{"returnType":{"name":"void","refId":"void"},"name":"onDone","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone"}],"kind":"method","id":"onDone1()","line":"122"},{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"resumeSignal","kind":"param","id":"resumeSignal"}],"kind":"method","id":"pause1()","line":"127"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","id":"resume0()","line":"129"},{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","id":"cancel0()","line":"131"},{"name":"_onData","isPrivate":true,"kind":"variable","id":"_onData","line":"99"},{"ref":{"name":"_ErrorHandler","refId":"dart.async/_ErrorHandler"},"name":"_onError","isPrivate":true,"kind":"variable","id":"_onError","line":"100"},{"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_onDone","isPrivate":true,"kind":"variable","id":"_onDone","line":"101"},{"name":"_BaseStreamSubscription","children":[{"initializedField":{"name":"_onData","refId":"dart.async/_BaseStreamSubscription/_onData"},"name":"_onData","isPrivate":true,"kind":"param","id":"_onData"},{"initializedField":{"name":"_onError","refId":"dart.async/_BaseStreamSubscription/_onError"},"ref":{"name":"_ErrorHandler","refId":"dart.async/_ErrorHandler"},"name":"_onError","isPrivate":true,"kind":"param","id":"_onError","line":"104"},{"initializedField":{"name":"_onDone","refId":"dart.async/_BaseStreamSubscription/_onDone"},"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_onDone","isPrivate":true,"kind":"param","id":"_onDone","line":"105"}],"kind":"constructor","id":"_BaseStreamSubscription3()","line":"103"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nCommon behavior of [StreamSubscription] classes.\n\nStores and allows updating of the event handlers of a [StreamSubscription].\n","id":"_BaseStreamSubscription","line":"96"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"isAbstract":true,"name":"_ForwardingStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"name":"listen","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStream/T"},"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"56"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"57"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"57"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"58"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"59"}],"kind":"method","id":"listen4()","line":"56"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"name":"_createSubscription","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_ForwardingStream/T"},"name":"value","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"value","line":"67"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_pipe.dart","kind":"param","id":"error","line":"68"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"68"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"69"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"70"}],"isPrivate":true,"kind":"method","id":"_createSubscription4()","line":"67"},{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"S","refId":"dart.async/_ForwardingStream/S"},"name":"data","kind":"param","id":"data"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleData2()","line":"77"},{"returnType":{"name":"void","refId":"void"},"name":"_handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleError2()","line":"82"},{"returnType":{"name":"void","refId":"void"},"name":"_handleDone","children":[{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_ForwardingStream/T"}]},"name":"sink","kind":"param","id":"sink"}],"isPrivate":true,"kind":"method","id":"_handleDone1()","line":"86"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isBroadcast","kind":"property","id":"isBroadcast","line":"54"},{"isFinal":true,"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStream/S"}]},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"50"},{"name":"_ForwardingStream","children":[{"initializedField":{"name":"_source","refId":"dart.async/_ForwardingStream/_source"},"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_ForwardingStream/S"}]},"name":"_source","isPrivate":true,"kind":"param","id":"_source"}],"kind":"constructor","id":"_ForwardingStream1()","line":"52"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_pipe.dart","kind":"class","comment":"\nA [Stream] that forwards subscriptions to another stream.\n\nThis stream implements [Stream], but forwards all subscriptions\nto an underlying stream, and wraps the returned subscription to\nmodify the events on the way.\n\nThis class is intended for internal use only.\n","id":"_ForwardingStream","line":"49"},{"superclass":{"name":"_MultiStreamImpl","refId":"dart.async/_MultiStreamImpl","arguments":[{"name":"T","refId":"dart.async/_SingleStreamMultiplexer/T"}]},"name":"_SingleStreamMultiplexer","children":[{"returnType":{"name":"void","refId":"void"},"name":"_onPauseStateChange","isPrivate":true,"kind":"method","id":"_onPauseStateChange0()","line":"1141"},{"returnType":{"name":"void","refId":"void"},"name":"_onSubscriptionStateChange","isPrivate":true,"kind":"method","comment":"\nSubscribe or unsubscribe on [_source] depending on whether\n[_stream] has subscribers.\n","id":"_onSubscriptionStateChange0()","line":"1157"},{"isFinal":true,"ref":{"name":"_SingleStreamImpl","refId":"dart.async/_SingleStreamImpl","arguments":[{"name":"T","refId":"dart.async/_SingleStreamMultiplexer/T"}]},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"1136"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_SingleStreamMultiplexer/T"}]},"name":"_subscription","isPrivate":true,"kind":"variable","id":"_subscription","line":"1137"},{"name":"_SingleStreamMultiplexer","children":[{"initializedField":{"name":"_source","refId":"dart.async/_SingleStreamMultiplexer/_source"},"ref":{"name":"_SingleStreamImpl","refId":"dart.async/_SingleStreamImpl","arguments":[{"name":"T","refId":"dart.async/_SingleStreamMultiplexer/T"}]},"name":"_source","isPrivate":true,"kind":"param","id":"_source"}],"kind":"constructor","id":"_SingleStreamMultiplexer1()","line":"1139"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","id":"_SingleStreamMultiplexer","line":"1135"},{"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_DoneSubscription/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_DoneSubscription","children":[{"returnType":{"name":"void","refId":"void"},"name":"_delayDone","isPrivate":true,"kind":"method","id":"_delayDone0()","line":"1085"},{"returnType":{"name":"void","refId":"void"},"name":"onData","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleAction","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_DoneSubscription/T"},"name":"value","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"value","line":"1094"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleAction"}],"kind":"method","id":"onData1()","line":"1094"},{"returnType":{"name":"void","refId":"void"},"name":"onError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"1096"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError"}],"kind":"method","id":"onError1()","line":"1096"},{"returnType":{"name":"void","refId":"void"},"name":"onDone","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone"}],"kind":"method","id":"onDone1()","line":"1098"},{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"signal","kind":"param","id":"signal"}],"kind":"method","id":"pause1()","line":"1102"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","id":"resume0()","line":"1110"},{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","id":"cancel0()","line":"1123"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isComplete","isPrivate":true,"kind":"property","id":"_isComplete","line":"1092"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isPaused","kind":"property","id":"isPaused","line":"1121"},{"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_handler","isPrivate":true,"kind":"variable","id":"_handler","line":"1077"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"name":"_timer","isPrivate":true,"kind":"variable","id":"_timer","line":"1078"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_pauseCount","isPrivate":true,"kind":"variable","id":"_pauseCount","line":"1079"},{"name":"_DoneSubscription","children":[{"initializedField":{"name":"_handler","refId":"dart.async/_DoneSubscription/_handler"},"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_handler","isPrivate":true,"kind":"param","id":"_handler"}],"kind":"constructor","id":"_DoneSubscription1()","line":"1081"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","id":"_DoneSubscription","line":"1076"},{"superclass":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"name":"_StreamImplEvents","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"event","kind":"param","id":"event"}],"kind":"method","id":"add1()","line":"1056"},{"returnType":{"name":"void","refId":"void"},"name":"handleNext","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"handleNext1()","line":"1064"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"1052"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isScheduled","kind":"property","id":"isScheduled","line":"1054"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"firstPendingEvent","kind":"variable","id":"firstPendingEvent","line":"1048"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"lastPendingEvent","kind":"variable","id":"lastPendingEvent","line":"1050"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"Class holding pending events for a [_StreamImpl]. ","id":"_StreamImplEvents","line":"1046"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_PendingEvents","children":[{"returnType":{"name":"void","refId":"void"},"name":"schedule","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"schedule1()","line":"1027"},{"returnType":{"name":"void","refId":"void"},"name":"cancelSchedule","kind":"method","id":"cancelSchedule0()","line":"1035"},{"returnType":{"name":"void","refId":"void"},"name":"handleNext","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"handleNext1()","line":"1041"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"1023"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isScheduled","kind":"property","id":"isScheduled","line":"1025"},{"ref":{"name":"Timer","refId":"dart.async/Timer"},"name":"scheduleTimer","kind":"variable","id":"scheduleTimer","line":"1021"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"Superclass for provider of pending events. ","id":"_PendingEvents","line":"1013"},{"interfaces":[{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_StreamListener/T"}]}],"superclass":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"isAbstract":true,"name":"_StreamListener","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_needsEvent","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"currentEventIdBit","kind":"param","id":"currentEventIdBit"}],"isPrivate":true,"kind":"method","comment":"\nWhether the listener still needs to receive the currently firing event.\n\nThe currently firing event is identified by a single bit, which alternates\nbetween events. The [_state] contains the previously sent event's bit in\nthe [_LISTENER_EVENT_ID] bit. If the two don't match, this listener\nstill need the current event.\n","id":"_needsEvent1()","line":"963"},{"returnType":{"name":"void","refId":"void"},"name":"_toggleEventReceived","isPrivate":true,"kind":"method","comment":"If a subscriber's \"firing bit\" doesn't match the stream's firing bit,\nwe are currently firing an event and the subscriber still need to receive\nthe event.","id":"_toggleEventReceived0()","line":"972"},{"returnType":{"name":"void","refId":"void"},"name":"_setSubscribed","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"eventIdBit","kind":"param","id":"eventIdBit"}],"isPrivate":true,"kind":"method","id":"_setSubscribed1()","line":"976"},{"returnType":{"name":"void","refId":"void"},"name":"_setPendingUnsubscribe","isPrivate":true,"kind":"method","id":"_setPendingUnsubscribe0()","line":"981"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_setUnsubscribed","isPrivate":true,"kind":"method","comment":"\nMarks the listener as unsubscibed.\n\nReturns the number of unresumed pauses for the listener.\n","id":"_setUnsubscribed0()","line":"991"},{"returnType":{"name":"void","refId":"void"},"name":"_incrementPauseCount","isPrivate":true,"kind":"method","id":"_incrementPauseCount0()","line":"998"},{"returnType":{"name":"void","refId":"void"},"name":"_decrementPauseCount","isPrivate":true,"kind":"method","id":"_decrementPauseCount0()","line":"1002"},{"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_StreamListener/T"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_sendData1()","line":"1007"},{"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"1008"},{"name":"_sendDone","isPrivate":true,"kind":"method","id":"_sendDone0()","line":"1009"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isPaused","kind":"property","id":"isPaused","line":"948"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isPendingUnsubscribe","isPrivate":true,"kind":"property","id":"_isPendingUnsubscribe","line":"950"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isSubscribed","isPrivate":true,"kind":"property","id":"_isSubscribed","line":"953"},{"isFinal":true,"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"943"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_state","isPrivate":true,"kind":"variable","id":"_state","line":"944"},{"name":"_StreamListener","children":[{"initializedField":{"name":"_source","refId":"dart.async/_StreamListener/_source"},"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"_source","isPrivate":true,"kind":"param","id":"_source"}],"kind":"constructor","id":"_StreamListener1()","line":"946"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","id":"_StreamListener","line":"941"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_StreamOutputSink","children":[{"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_StreamOutputSink/T"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_sendData1()","line":"936"},{"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"937"},{"name":"_sendDone","isPrivate":true,"kind":"method","id":"_sendDone0()","line":"938"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"Abstract type for an internal interface for sending events. ","id":"_StreamOutputSink","line":"935"},{"superclass":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"isAbstract":true,"name":"_InternalLinkList","children":[{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"_InternalLinkList","refId":"dart.async/_InternalLinkList"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"element","kind":"param","id":"element"}],"kind":"method","comment":"\nAdds an element to a list, just before the header link.\n\nThis effectively adds it at the end of the list.\n","id":"add2()","line":"902"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"remove","children":[{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"element","kind":"param","id":"element"}],"kind":"method","comment":"Removes an element from its list. ","id":"remove1()","line":"912"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","children":[{"ref":{"name":"_InternalLinkList","refId":"dart.async/_InternalLinkList"},"name":"list","kind":"param","id":"list"}],"kind":"method","comment":"Check whether a list contains no elements, only the header link. ","id":"isEmpty1()","line":"917"},{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"addAll","children":[{"ref":{"name":"_InternalLinkList","refId":"dart.async/_InternalLinkList"},"name":"list","kind":"param","id":"list"},{"ref":{"name":"_InternalLinkList","refId":"dart.async/_InternalLinkList"},"name":"other","kind":"param","id":"other"}],"kind":"method","comment":"Moves all elements from the list [other] to [list]. ","id":"addAll2()","line":"920"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"\nMarker interface for \"list\" links.\n\nAn \"InternalLinkList\" is an abstraction on top of a link cycle, where the\n\"list\" object itself is not considered an element (it's just a header link\ncreated to avoid edge cases).\nAn element is considered part of a list if it is in the list's cycle.\nThere should never be more than one \"list\" object in a cycle.\n","id":"_InternalLinkList","line":"896"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_InternalLink","children":[{"isStatic":true,"returnType":{"name":"void","refId":"void"},"name":"unlink","children":[{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"element","kind":"param","id":"element"}],"kind":"method","id":"unlink1()","line":"873"},{"isStatic":true,"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"isUnlinked","children":[{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"element","kind":"param","id":"element"}],"kind":"method","comment":"Check whether an element is unattached to other elements. ","id":"isUnlinked1()","line":"882"},{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"_nextLink","isPrivate":true,"kind":"variable","id":"_nextLink","line":"865"},{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"_previousLink","isPrivate":true,"kind":"variable","id":"_previousLink","line":"866"},{"name":"_InternalLink","kind":"constructor","id":"_InternalLink0()","line":"868"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"\nSimple internal doubly-linked list implementation.\n\nIn an internal linked list, the links are in the data objects themselves,\ninstead of in a separate object. That means each element can be in at most\none list at a time.\n\nAll links are always members of an element cycle. At creation it's a\nsingleton cycle.\n","id":"_InternalLink","line":"864"},{"interfaces":[{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_DelayedDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"perform","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"perform1()","line":"843"},{"isSetter":true,"returnType":{"name":"void","refId":"void"},"name":"next=","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"_","isPrivate":true,"kind":"param","id":"_"}],"kind":"method","id":"next=1()","line":"849"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"next","kind":"property","id":"next","line":"847"},{"name":"_DelayedDone","kind":"constructor","id":"_DelayedDone0()","line":"842"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"A delayed done event. ","id":"_DelayedDone","line":"841"},{"superclass":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"_DelayedError","children":[{"returnType":{"name":"void","refId":"void"},"name":"perform","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"perform1()","line":"835"},{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"variable","id":"error","line":"833"},{"name":"_DelayedError","children":[{"initializedField":{"name":"error","refId":"dart.async/_DelayedError/error"},"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"kind":"constructor","id":"_DelayedError1()","line":"834"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"A delayed error event. ","id":"_DelayedError","line":"832"},{"superclass":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"_DelayedData","children":[{"returnType":{"name":"void","refId":"void"},"name":"perform","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_DelayedData/T"}]},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"perform1()","line":"826"},{"ref":{"name":"T","refId":"dart.async/_DelayedData/T"},"name":"value","kind":"variable","id":"value","line":"824"},{"name":"_DelayedData","children":[{"initializedField":{"name":"value","refId":"dart.async/_DelayedData/value"},"ref":{"name":"T","refId":"dart.async/_DelayedData/T"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","id":"_DelayedData1()","line":"825"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"A delayed data event. ","id":"_DelayedData","line":"823"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_DelayedEvent","children":[{"returnType":{"name":"void","refId":"void"},"name":"perform","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"stream","kind":"param","id":"stream"}],"kind":"method","comment":"Execute the delayed event on the [StreamController]. ","id":"perform1()","line":"819"},{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"next","kind":"variable","id":"next","line":"817"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"A delayed event on a stream implementation. ","id":"_DelayedEvent","line":"815"},{"returnType":{"name":"void","refId":"void"},"name":"_DoneHandler","isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"typedef","id":"_DoneHandler","line":"799"},{"returnType":{"name":"void","refId":"void"},"name":"_ErrorHandler","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"typedef","id":"_ErrorHandler","line":"798"},{"returnType":{"name":"void","refId":"void"},"name":"_DataHandler","children":[{"ref":{"name":"T","refId":"dart.async/_DataHandler/T"},"name":"value","kind":"param","id":"value"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"typedef","id":"_DataHandler","line":"797"},{"interfaces":[{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamSubscriptionImpl/T"}]}],"superclass":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_StreamSubscriptionImpl/T"}]},"name":"_StreamSubscriptionImpl","children":[{"returnType":{"name":"void","refId":"void"},"name":"onData","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_StreamSubscriptionImpl/T"},"name":"event","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"event","line":"750"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleData"}],"kind":"method","id":"onData1()","line":"750"},{"returnType":{"name":"void","refId":"void"},"name":"onError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"755"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError"}],"kind":"method","id":"onError1()","line":"755"},{"returnType":{"name":"void","refId":"void"},"name":"onDone","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone"}],"kind":"method","id":"onDone1()","line":"760"},{"returnType":{"name":"void","refId":"void"},"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_StreamSubscriptionImpl/T"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_sendData1()","line":"765"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"769"},{"returnType":{"name":"void","refId":"void"},"name":"_sendDone","isPrivate":true,"kind":"method","id":"_sendDone0()","line":"774"},{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","id":"cancel0()","line":"778"},{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"resumeSignal","kind":"param","id":"resumeSignal"}],"kind":"method","id":"pause1()","line":"782"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","id":"resume0()","line":"786"},{"isFinal":true,"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"variable","id":"_unsubscribeOnError","line":"738"},{"name":"_onData","isPrivate":true,"kind":"variable","id":"_onData","line":"741"},{"ref":{"name":"_ErrorHandler","refId":"dart.async/_ErrorHandler"},"name":"_onError","isPrivate":true,"kind":"variable","id":"_onError","line":"742"},{"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_onDone","isPrivate":true,"kind":"variable","id":"_onDone","line":"743"},{"name":"_StreamSubscriptionImpl","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl"},"name":"source","kind":"param","id":"source"},{"initializedField":{"name":"_onData","refId":"dart.async/_StreamSubscriptionImpl/_onData"},"name":"_onData","isPrivate":true,"kind":"param","id":"_onData","line":"745"},{"initializedField":{"name":"_onError","refId":"dart.async/_StreamSubscriptionImpl/_onError"},"ref":{"name":"_ErrorHandler","refId":"dart.async/_ErrorHandler"},"name":"_onError","isPrivate":true,"kind":"param","id":"_onError","line":"746"},{"initializedField":{"name":"_onDone","refId":"dart.async/_StreamSubscriptionImpl/_onDone"},"ref":{"name":"_DoneHandler","refId":"dart.async/_DoneHandler"},"name":"_onDone","isPrivate":true,"kind":"param","id":"_onDone","line":"747"},{"initializedField":{"name":"_unsubscribeOnError","refId":"dart.async/_StreamSubscriptionImpl/_unsubscribeOnError"},"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"param","id":"_unsubscribeOnError","line":"748"}],"kind":"constructor","id":"_StreamSubscriptionImpl5()","line":"744"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"\nThe subscription class that the [StreamController] uses.\n\nThe [_StreamImpl.createSubscription] method should\ncreate an object of this type, or another subclass of [_StreamListener].\nA subclass of [_StreamImpl] can specify which subclass\nof [_StreamSubscriptionImpl] it uses by overriding\n[_StreamImpl.createSubscription].\n\nThe subscription is in one of three states:\n* Subscribed.\n* Paused-and-subscribed.\n* Unsubscribed.\nUnsubscribing also resumes any pauses started by the subscription.\n","id":"_StreamSubscriptionImpl","line":"736"},{"superclass":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"name":"_IterablePendingEvents","children":[{"returnType":{"name":"void","refId":"void"},"name":"handleNext","children":[{"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_IterablePendingEvents/T"}]},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"handleNext1()","line":"703"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isEmpty","kind":"property","id":"isEmpty","line":"701"},{"isFinal":true,"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"T","refId":"dart.async/_IterablePendingEvents/T"}]},"name":"_iterator","isPrivate":true,"kind":"variable","id":"_iterator","line":"690"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isDone","isPrivate":true,"kind":"variable","id":"_isDone","line":"697"},{"name":"_IterablePendingEvents","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/_IterablePendingEvents/T"}]},"name":"data","kind":"param","id":"data"}],"kind":"constructor","id":"_IterablePendingEvents1()","line":"699"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"Pending events object that gets its events from an [Iterable]. ","id":"_IterablePendingEvents","line":"689"},{"superclass":{"name":"_SingleStreamImpl","refId":"dart.async/_SingleStreamImpl","arguments":[{"name":"T","refId":"dart.async/_GeneratedSingleStreamImpl/T"}]},"name":"_GeneratedSingleStreamImpl","children":[{"returnType":{"name":"void","refId":"void"},"name":"_add","children":[{"ref":{"name":"T","refId":"dart.async/_GeneratedSingleStreamImpl/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_add1()","line":"674"},{"returnType":{"name":"void","refId":"void"},"name":"_signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_signalError1()","line":"678"},{"returnType":{"name":"void","refId":"void"},"name":"_close","isPrivate":true,"kind":"method","id":"_close0()","line":"682"},{"name":"_GeneratedSingleStreamImpl","children":[{"ref":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"name":"events","kind":"param","id":"events"}],"kind":"constructor","comment":"\nInitializes the stream to have only the events provided by [events].\n\nA [_PendingEvents] implementation provides events that are handled\nby calling [_PendingEvents.handleNext] with the [_StreamImpl].\n","id":"_GeneratedSingleStreamImpl1()","line":"669"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"Stream that generates its own events. ","id":"_GeneratedSingleStreamImpl","line":"662"},{"interfaces":[{"name":"_InternalLinkList","refId":"dart.async/_InternalLinkList"}],"superclass":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_MultiStreamImpl/T"}]},"name":"_MultiStreamImpl","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_MultiStreamImpl/T"}]},"name":"asBroadcastStream","kind":"method","id":"asBroadcastStream0()","line":"549"},{"returnType":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_MultiStreamImpl/T"}]},"name":"_createSubscription","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_MultiStreamImpl/T"},"name":"data","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"data","line":"561"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData","line":"561"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"562"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"562"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"563"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"564"}],"isPrivate":true,"kind":"method","comment":"\nCreate the new subscription object.\n","id":"_createSubscription4()","line":"560"},{"returnType":{"name":"void","refId":"void"},"name":"_forEachSubscriber","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_MultiStreamImpl/T"}]},"name":"subscription","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"subscription","line":"585"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action","line":"585"}],"isPrivate":true,"kind":"method","comment":"\nIterate over all current subscribers and perform an action on each.\n\nThe set of subscribers cannot be modified during this iteration.\nAll attempts to add or unsubscribe subscribers will be delayed until\nafter the iteration is complete.\n\nThe [action] must not throw, or the controller will be left in an\ninvalid state.\n\nThis method must not be called while [isFiring] is true.\n","id":"_forEachSubscriber1()","line":"584"},{"returnType":{"name":"void","refId":"void"},"name":"_addListener","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","id":"_addListener1()","line":"605"},{"returnType":{"name":"void","refId":"void"},"name":"_cancel","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","comment":"\nHandle a cancel requested from a [_StreamListener].\n\nThis method is called from [_StreamListener.cancel].\n\nIf an event is currently firing, the cancel is delayed\nuntil after the subscribers have received the event.\n","id":"_cancel1()","line":"622"},{"returnType":{"name":"void","refId":"void"},"name":"_removeListener","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","comment":"\nRemoves a listener from this stream and cancels its pauses.\n\nThis is a low-level action that doesn't call [_onSubscriptionStateChange].\nor [_onPauseStateChange].\n","id":"_removeListener1()","line":"653"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isBroadcast","kind":"property","id":"isBroadcast","line":"547"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasSubscribers","isPrivate":true,"kind":"property","comment":"Whether there are currently any subscribers on this [Stream]. ","id":"_hasSubscribers","line":"555"},{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"_nextLink","isPrivate":true,"kind":"variable","id":"_nextLink","line":"540"},{"ref":{"name":"_InternalLink","refId":"dart.async/_InternalLink"},"name":"_previousLink","isPrivate":true,"kind":"variable","id":"_previousLink","line":"541"},{"name":"_MultiStreamImpl","kind":"constructor","id":"_MultiStreamImpl0()","line":"543"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"\nDefault implementation of stream capable of sending events to subscribers.\n\nAny class needing to implement [Stream] can either directly extend this\nclass, or extend [Stream] and delegate the subscribe method to an instance\nof this class.\n\nThe only public methods are those of [Stream], so instances of\n[_MultiStreamImpl] can be returned directly as a [Stream] without exposing\ninternal functionality.\n\nThe [StreamController] is a public facing version of this class, with\nsome methods made public.\n\nThe user interface of [_MultiStreamImpl] are the following methods:\n* [_add]: Add a data event to the stream.\n* [_signalError]: Add an error event to the stream.\n* [_close]: Request to close the stream.\n* [_onSubscriptionStateChange]: Called when receiving the first subscriber or\n                                when losing the last subscriber.\n* [_onPauseStateChange]: Called when entering or leaving paused mode.\n* [_hasSubscribers]: Test whether there are currently any subscribers.\n* [_isPaused]: Test whether the stream is currently paused.\nThe user should not add new events while the stream is paused, but if it\nhappens anyway, the stream will enqueue the events just as when new events\narrive while still firing an old event.\n","id":"_MultiStreamImpl","line":"537"},{"superclass":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/_SingleStreamImpl/T"}]},"name":"_SingleStreamImpl","children":[{"returnType":{"name":"_StreamSubscriptionImpl","refId":"dart.async/_StreamSubscriptionImpl","arguments":[{"name":"T","refId":"dart.async/_SingleStreamImpl/T"}]},"name":"_createSubscription","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_SingleStreamImpl/T"},"name":"data","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"data","line":"446"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData","line":"446"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"447"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"447"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"448"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"449"}],"isPrivate":true,"kind":"method","comment":"\nCreate the new subscription object.\n","id":"_createSubscription4()","line":"445"},{"returnType":{"name":"void","refId":"void"},"name":"_addListener","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"subscription","kind":"param","id":"subscription"}],"isPrivate":true,"kind":"method","id":"_addListener1()","line":"454"},{"returnType":{"name":"void","refId":"void"},"name":"_cancel","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"subscriber","kind":"param","id":"subscriber"}],"isPrivate":true,"kind":"method","comment":"\nHandle a cancel requested from a [_StreamSubscriptionImpl].\n\nThis method is called from [_StreamSubscriptionImpl.cancel].\n\nIf an event is currently firing, the cancel is delayed\nuntil after the subscriber has received the event.\n","id":"_cancel1()","line":"474"},{"returnType":{"name":"void","refId":"void"},"name":"_forEachSubscriber","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_SingleStreamImpl/T"}]},"name":"subscription","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"subscription","line":"496"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action","line":"496"}],"isPrivate":true,"kind":"method","id":"_forEachSubscriber1()","line":"495"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isPaused","isPrivate":true,"kind":"property","comment":"Whether one or more active subscribers have requested a pause. ","id":"_isPaused","line":"434"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasSubscribers","isPrivate":true,"kind":"property","comment":"Whether there is currently a subscriber on this [Stream]. ","id":"_hasSubscribers","line":"437"},{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener"},"name":"_subscriber","isPrivate":true,"kind":"variable","id":"_subscriber","line":"431"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","comment":"\nDefault implementation of stream capable of sending events to one subscriber.\n\nAny class needing to implement [Stream] can either directly extend this\nclass, or extend [Stream] and delegate the subscribe method to an instance\nof this class.\n\nThe only public methods are those of [Stream], so instances of\n[_SingleStreamImpl] can be returned directly as a [Stream] without exposing\ninternal functionality.\n\nThe [StreamController] is a public facing version of this class, with\nsome methods made public.\n\nThe user interface of [_SingleStreamImpl] are the following methods:\n* [_add]: Add a data event to the stream.\n* [_signalError]: Add an error event to the stream.\n* [_close]: Request to close the stream.\n* [_onSubscriberStateChange]: Called when receiving the first subscriber or\n                              when losing the last subscriber.\n* [_onPauseStateChange]: Called when entering or leaving paused mode.\n* [_hasSubscribers]: Test whether there are currently any subscribers.\n* [_isPaused]: Test whether the stream is currently paused.\nThe user should not add new events while the stream is paused, but if it\nhappens anyway, the stream will enqueue the events just as when new events\narrive while still firing an old event.\n","id":"_SingleStreamImpl","line":"430"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"isAbstract":true,"name":"_StreamImpl","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"listen","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImpl/T"},"name":"data","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"data","line":"65"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"66"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"66"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"67"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"68"}],"kind":"method","id":"listen4()","line":"65"},{"returnType":{"name":"void","refId":"void"},"name":"_add","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImpl/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","comment":"\nSend or queue a data event.\n","id":"_add1()","line":"91"},{"returnType":{"name":"void","refId":"void"},"name":"_signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","comment":"\nSend or enqueue an error event.\n\nIf a subscription has requested to be unsubscribed on errors,\nit will be unsubscribed after receiving this event.\n","id":"_signalError1()","line":"107"},{"returnType":{"name":"void","refId":"void"},"name":"_close","isPrivate":true,"kind":"method","comment":"\nSend or enqueue a \"done\" message.\n\nThe \"done\" message should be sent at most once by a stream, and it\nshould be the last message sent.\n","id":"_close0()","line":"123"},{"returnType":{"name":"void","refId":"void"},"name":"_incrementPauseCount","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","comment":"Record an increases in the number of times the listener has paused. ","id":"_incrementPauseCount1()","line":"168"},{"returnType":{"name":"void","refId":"void"},"name":"_decrementPauseCount","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","comment":"Record a decrease in the number of times the listener has paused. ","id":"_decrementPauseCount1()","line":"174"},{"returnType":{"name":"void","refId":"void"},"name":"_updatePauseCount","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"by","kind":"param","id":"by"}],"isPrivate":true,"kind":"method","comment":"Update the stream's own pause count only. ","id":"_updatePauseCount1()","line":"181"},{"returnType":{"name":"void","refId":"void"},"name":"_setClosed","isPrivate":true,"kind":"method","id":"_setClosed0()","line":"195"},{"returnType":{"name":"void","refId":"void"},"name":"_setComplete","isPrivate":true,"kind":"method","id":"_setComplete0()","line":"200"},{"returnType":{"name":"void","refId":"void"},"name":"_startFiring","isPrivate":true,"kind":"method","id":"_startFiring0()","line":"205"},{"returnType":{"name":"void","refId":"void"},"name":"_endFiring","isPrivate":true,"kind":"method","id":"_endFiring0()","line":"216"},{"returnType":{"name":"void","refId":"void"},"name":"_pause","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"listener","kind":"param","id":"listener"},{"ref":{"name":"Future","refId":"dart.async/Future"},"name":"resumeSignal","kind":"param","id":"resumeSignal"}],"isPrivate":true,"kind":"method","comment":"\nRecord that a listener wants a pause from events.\n\nThis methods is called from [_StreamListener.pause()].\nSubclasses can override this method, along with [isPaused] and\n[createSubscription], if they want to do a different handling of paused\nsubscriptions, e.g., a filtering stream pausing its own source if all its\nsubscribers are paused.\n","id":"_pause2()","line":"232"},{"returnType":{"name":"void","refId":"void"},"name":"_resume","children":[{"ref":{"name":"_StreamListener","refId":"dart.async/_StreamListener","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"listener","kind":"param","id":"listener"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"fromEvent","kind":"param","id":"fromEvent"}],"isPrivate":true,"kind":"method","comment":"Stops pausing due to one request from the given listener. ","id":"_resume2()","line":"249"},{"returnType":{"name":"void","refId":"void"},"name":"_schedulePendingEvents","isPrivate":true,"kind":"method","comment":"Schedule pending events to be executed. ","id":"_schedulePendingEvents0()","line":"268"},{"returnType":{"name":"_StreamSubscriptionImpl","refId":"dart.async/_StreamSubscriptionImpl","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"_createSubscription","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImpl/T"},"name":"data","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"data","line":"275"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData","line":"275"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"error","line":"276"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"276"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"277"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"278"}],"isPrivate":true,"kind":"method","comment":"Create a subscription object. Called by [subcribe]. ","id":"_createSubscription4()","line":"274"},{"returnType":{"name":"void","refId":"void"},"name":"_addListener","children":[{"ref":{"name":"_StreamSubscriptionImpl","refId":"dart.async/_StreamSubscriptionImpl"},"name":"subscription","kind":"param","id":"subscription"}],"isPrivate":true,"kind":"method","comment":"\nAdds a listener to this stream.\n","id":"_addListener1()","line":"283"},{"returnType":{"name":"void","refId":"void"},"name":"_cancel","children":[{"ref":{"name":"_StreamSubscriptionImpl","refId":"dart.async/_StreamSubscriptionImpl"},"name":"subscriber","kind":"param","id":"subscriber"}],"isPrivate":true,"kind":"method","comment":"\nHandle a cancel requested from a [_StreamSubscriptionImpl].\n\nThis method is called from [_StreamSubscriptionImpl.cancel].\n\nIf an event is currently firing, the cancel is delayed\nuntil after the subscribers have received the event.\n","id":"_cancel1()","line":"293"},{"returnType":{"name":"void","refId":"void"},"name":"_forEachSubscriber","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"_StreamSubscriptionImpl","refId":"dart.async/_StreamSubscriptionImpl","arguments":[{"name":"T","refId":"dart.async/_StreamImpl/T"}]},"name":"subscription","uri":"sdk/lib/async/stream_impl.dart","kind":"param","id":"subscription","line":"310"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action"}],"isPrivate":true,"kind":"method","comment":"\nIterate over all current subscribers and perform an action on each.\n\nSubscribers added during the iteration will not be visited.\nSubscribers unsubscribed during the iteration will only be removed\nafter they have been acted on.\n\nAny change in the pause state is only reported after all subscribers have\nreceived the event.\n\nThe [action] must not throw, or the controller will be left in an\ninvalid state.\n\nThis method must not be called while [isFiring] is true.\n","id":"_forEachSubscriber1()","line":"310"},{"returnType":{"name":"void","refId":"void"},"name":"_onPauseStateChange","isPrivate":true,"kind":"method","comment":"\nCalled when the first subscriber requests a pause or the last a resume.\n\nRead [isPaused] to see the new state.\n","id":"_onPauseStateChange0()","line":"317"},{"returnType":{"name":"void","refId":"void"},"name":"_onSubscriptionStateChange","isPrivate":true,"kind":"method","comment":"\nCalled when the first listener subscribes or the last unsubscribes.\n\nRead [hasSubscribers] to see what the new state is.\n","id":"_onSubscriptionStateChange0()","line":"324"},{"returnType":{"name":"void","refId":"void"},"name":"_addPendingEvent","children":[{"ref":{"name":"_DelayedEvent","refId":"dart.async/_DelayedEvent"},"name":"event","kind":"param","id":"event"}],"isPrivate":true,"kind":"method","comment":"Add a pending event at the end of the pending event queue. ","id":"_addPendingEvent1()","line":"327"},{"returnType":{"name":"void","refId":"void"},"name":"_handlePendingEvents","isPrivate":true,"kind":"method","comment":"Fire any pending events until the pending event queue. ","id":"_handlePendingEvents0()","line":"334"},{"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_StreamImpl/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","comment":"\nSend a data event directly to each subscriber.\n","id":"_sendData1()","line":"345"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","comment":"\nSends an error event directly to each subscriber.\n","id":"_sendError1()","line":"362"},{"returnType":{"name":"void","refId":"void"},"name":"_sendDone","isPrivate":true,"kind":"method","comment":"\nSends the \"done\" message directly to each subscriber.\nThis automatically stops further subscription and\nunsubscribes all subscribers.\n","id":"_sendDone0()","line":"381"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isClosed","isPrivate":true,"kind":"property","comment":"Whether the stream has been closed (a done event requested). ","id":"_isClosed","line":"141"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isComplete","isPrivate":true,"kind":"property","comment":"Whether the stream is completed. ","id":"_isComplete","line":"144"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isPaused","isPrivate":true,"kind":"property","comment":"Whether one or more active subscribers have requested a pause. ","id":"_isPaused","line":"147"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasPendingEvent","isPrivate":true,"kind":"property","comment":"Check whether the pending event queue is non-empty ","id":"_hasPendingEvent","line":"150"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isFiring","isPrivate":true,"kind":"property","comment":"Whether we are currently firing an event. ","id":"_isFiring","line":"154"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_currentEventIdBit","isPrivate":true,"kind":"property","id":"_currentEventIdBit","line":"156"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasSubscribers","isPrivate":true,"kind":"property","comment":"Whether there is currently a subscriber on this [Stream]. ","id":"_hasSubscribers","line":"160"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_canFireEvent","isPrivate":true,"kind":"property","comment":"Whether the stream can fire a new event. ","id":"_canFireEvent","line":"163"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_state","isPrivate":true,"kind":"variable","id":"_state","line":"50"},{"ref":{"name":"_PendingEvents","refId":"dart.async/_PendingEvents"},"name":"_pendingEvents","isPrivate":true,"kind":"variable","id":"_pendingEvents","line":"60"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_impl.dart","kind":"class","id":"_StreamImpl","line":"48"},{"superclass":{"name":"_SingleStreamImpl","refId":"dart.async/_SingleStreamImpl","arguments":[{"name":"T","refId":"dart.async/_SingleControllerStream/T"}]},"name":"_SingleControllerStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_onSubscriptionStateChange","isPrivate":true,"kind":"method","id":"_onSubscriptionStateChange0()","line":"131"},{"returnType":{"name":"void","refId":"void"},"name":"_onPauseStateChange","isPrivate":true,"kind":"method","id":"_onPauseStateChange0()","line":"135"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_subscriptionHandler","isPrivate":true,"kind":"variable","id":"_subscriptionHandler","line":"126"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_pauseHandler","isPrivate":true,"kind":"variable","id":"_pauseHandler","line":"127"},{"name":"_SingleControllerStream","children":[{"initializedField":{"name":"_subscriptionHandler","refId":"dart.async/_SingleControllerStream/_subscriptionHandler"},"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_subscriptionHandler","isPrivate":true,"kind":"param","id":"_subscriptionHandler"},{"initializedField":{"name":"_pauseHandler","refId":"dart.async/_SingleControllerStream/_pauseHandler"},"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_pauseHandler","isPrivate":true,"kind":"param","id":"_pauseHandler"}],"kind":"constructor","id":"_SingleControllerStream2()","line":"129"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_controller.dart","kind":"class","id":"_SingleControllerStream","line":"125"},{"superclass":{"name":"_MultiStreamImpl","refId":"dart.async/_MultiStreamImpl","arguments":[{"name":"T","refId":"dart.async/_MultiControllerStream/T"}]},"name":"_MultiControllerStream","children":[{"returnType":{"name":"void","refId":"void"},"name":"_onSubscriptionStateChange","isPrivate":true,"kind":"method","id":"_onSubscriptionStateChange0()","line":"116"},{"returnType":{"name":"void","refId":"void"},"name":"_onPauseStateChange","isPrivate":true,"kind":"method","id":"_onPauseStateChange0()","line":"120"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_subscriptionHandler","isPrivate":true,"kind":"variable","id":"_subscriptionHandler","line":"111"},{"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_pauseHandler","isPrivate":true,"kind":"variable","id":"_pauseHandler","line":"112"},{"name":"_MultiControllerStream","children":[{"initializedField":{"name":"_subscriptionHandler","refId":"dart.async/_MultiControllerStream/_subscriptionHandler"},"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_subscriptionHandler","isPrivate":true,"kind":"param","id":"_subscriptionHandler"},{"initializedField":{"name":"_pauseHandler","refId":"dart.async/_MultiControllerStream/_pauseHandler"},"ref":{"name":"_NotificationHandler","refId":"dart.async/_NotificationHandler"},"name":"_pauseHandler","isPrivate":true,"kind":"param","id":"_pauseHandler"}],"kind":"constructor","id":"_MultiControllerStream2()","line":"114"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream_controller.dart","kind":"class","id":"_MultiControllerStream","line":"110"},{"returnType":{"name":"void","refId":"void"},"name":"_NotificationHandler","isPrivate":true,"uri":"sdk/lib/async/stream_controller.dart","kind":"typedef","id":"_NotificationHandler","line":"108"},{"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"StreamController","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/StreamController/T"},"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"\nSend or queue a data event.\n","id":"add1()","line":"75"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"method","comment":"\nSend or enqueue an error event.\n\nIf [error] is not an [AsyncError], [error] and an optional [stackTrace]\nis combined into an [AsyncError] and sent this stream's listeners.\n\nOtherwise, if [error] is an [AsyncError], it is used directly as the\nerror object reported to listeners, and the [stackTrace] is ignored.\n\nIf a subscription has requested to be unsubscribed on errors,\nit will be unsubscribed after receiving this event.\n","id":"signalError2()","line":"89"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","comment":"\nSend or enqueue a \"done\" message.\n\nThe \"done\" message should be sent at most once by a stream, and it\nshould be the last message sent.\n","id":"close0()","line":"105"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"name":"sink","kind":"property","comment":"\nReturns a view of this object that only exposes the [StreamSink] interface.\n","id":"sink","line":"64"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isPaused","kind":"property","comment":"Whether one or more active subscribers have requested a pause. ","id":"isPaused","line":"67"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"hasSubscribers","kind":"property","comment":"Whether there are currently any subscribers on this [Stream]. ","id":"hasSubscribers","line":"70"},{"isFinal":true,"ref":{"name":"_StreamImpl","refId":"dart.async/_StreamImpl","arguments":[{"name":"T","refId":"dart.async/StreamController/T"}]},"name":"stream","kind":"variable","id":"stream","line":"24"},{"name":"StreamController.broadcast","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onPauseStateChange","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onPauseStateChange"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onSubscriptionStateChange","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onSubscriptionStateChange","line":"38"}],"kind":"constructor","comment":"\nA controller with a broadcast [stream]..\n\nThe [onPauseStateChange] function is called when the stream becomes\npaused or resumes after being paused. The current pause state can\nbe read from [isPaused]. Ignored if [:null:].\n\nThe [onSubscriptionStateChange] function is called when the stream\nreceives its first listener or loses its last. The current subscription\nstate can be read from [hasSubscribers]. Ignored if [:null:].\n","id":"StreamController.broadcast2()","line":"37"},{"name":"StreamController","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onPauseStateChange","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onPauseStateChange"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onSubscriptionStateChange","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onSubscriptionStateChange","line":"57"}],"kind":"constructor","comment":"\nA controller with a [stream] that supports only one single subscriber.\n\nThe controller will buffer all incoming events until the subscriber is\nregistered.\n\nThe [onPauseStateChange] function is called when the stream becomes\npaused or resumes after being paused. The current pause state can\nbe read from [isPaused]. Ignored if [:null:].\n\nThe [onSubscriptionStateChange] function is called when the stream\nreceives its first listener or loses its last. The current subscription\nstate can be read from [hasSubscribers]. Ignored if [:null:].\n","id":"StreamController2()","line":"56"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream_controller.dart","kind":"class","comment":"\nA controller with the stream it controls.\n\nThis controller allows sending data, error and done events on\nits [stream].\nThis class can be used to create a simple stream that others\ncan listen on, and to push events to that stream.\n\nIt's possible to check whether the stream is paused or not, and whether\nit has subscribers or not, as well as getting a callback when either of\nthese change.\n","id":"StreamController","line":"23"},{"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_StreamOutputSinkWrapper/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_StreamOutputSinkWrapper","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/_StreamOutputSinkWrapper/T"},"name":"data","kind":"param","id":"data"}],"kind":"method","id":"add1()","line":"1117"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"kind":"method","id":"signalError1()","line":"1118"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","id":"close0()","line":"1119"},{"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink"},"name":"_sink","isPrivate":true,"kind":"variable","id":"_sink","line":"1114"},{"name":"_StreamOutputSinkWrapper","children":[{"initializedField":{"name":"_sink","refId":"dart.async/_StreamOutputSinkWrapper/_sink"},"ref":{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink"},"name":"_sink","isPrivate":true,"kind":"param","id":"_sink"}],"kind":"constructor","id":"_StreamOutputSinkWrapper1()","line":"1115"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream.dart","kind":"class","id":"_StreamOutputSinkWrapper","line":"1113"},{"interfaces":[{"name":"_StreamOutputSink","refId":"dart.async/_StreamOutputSink","arguments":[{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"}]}],"superclass":{"name":"_BaseStreamSubscription","refId":"dart.async/_BaseStreamSubscription","arguments":[{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"}]},"name":"_EventTransformStreamSubscription","children":[{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"pauseSignal","kind":"param","id":"pauseSignal"}],"kind":"method","id":"pause1()","line":"1055"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","id":"resume0()","line":"1059"},{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","id":"cancel0()","line":"1063"},{"returnType":{"name":"void","refId":"void"},"name":"_handleData","children":[{"ref":{"name":"S","refId":"dart.async/_EventTransformStreamSubscription/S"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_handleData1()","line":"1070"},{"returnType":{"name":"void","refId":"void"},"name":"_handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_handleError1()","line":"1078"},{"returnType":{"name":"void","refId":"void"},"name":"_handleDone","isPrivate":true,"kind":"method","id":"_handleDone0()","line":"1086"},{"returnType":{"name":"void","refId":"void"},"name":"_sendData","children":[{"ref":{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"},"name":"data","kind":"param","id":"data"}],"isPrivate":true,"kind":"method","id":"_sendData1()","line":"1095"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"1099"},{"returnType":{"name":"void","refId":"void"},"name":"_sendDone","isPrivate":true,"kind":"method","id":"_sendDone0()","line":"1106"},{"isFinal":true,"ref":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[{"name":"S","refId":"dart.async/_EventTransformStreamSubscription/S"},{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"}]},"name":"_transformer","isPrivate":true,"kind":"variable","id":"_transformer","line":"1034"},{"isFinal":true,"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"variable","id":"_unsubscribeOnError","line":"1036"},{"ref":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"S","refId":"dart.async/_EventTransformStreamSubscription/S"}]},"name":"_subscription","isPrivate":true,"kind":"variable","id":"_subscription","line":"1038"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"}]},"name":"_sink","isPrivate":true,"kind":"variable","id":"_sink","line":"1040"},{"name":"_EventTransformStreamSubscription","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/_EventTransformStreamSubscription/S"}]},"name":"source","kind":"param","id":"source"},{"initializedField":{"name":"_transformer","refId":"dart.async/_EventTransformStreamSubscription/_transformer"},"ref":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[{"name":"S","refId":"dart.async/_EventTransformStreamSubscription/S"},{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"}]},"name":"_transformer","isPrivate":true,"kind":"param","id":"_transformer","line":"1043"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_EventTransformStreamSubscription/T"},"name":"data","uri":"sdk/lib/async/stream.dart","kind":"param","id":"data","line":"1044"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData","line":"1044"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"1045"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"1045"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"1046"},{"initializedField":{"name":"_unsubscribeOnError","refId":"dart.async/_EventTransformStreamSubscription/_unsubscribeOnError"},"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_unsubscribeOnError","isPrivate":true,"kind":"param","id":"_unsubscribeOnError","line":"1047"}],"kind":"constructor","id":"_EventTransformStreamSubscription6()","line":"1042"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/stream.dart","kind":"class","id":"_EventTransformStreamSubscription","line":"1030"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/EventTransformStream/T"}]},"name":"EventTransformStream","children":[{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/EventTransformStream/T"}]},"name":"listen","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/EventTransformStream/T"},"name":"data","uri":"sdk/lib/async/stream.dart","kind":"param","id":"data","line":"1020"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"1021"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"1021"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"1022"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"1023"}],"kind":"method","id":"listen4()","line":"1020"},{"isFinal":true,"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/EventTransformStream/S"}]},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"1014"},{"isFinal":true,"ref":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer"},"name":"_transformer","isPrivate":true,"kind":"variable","id":"_transformer","line":"1015"},{"name":"EventTransformStream","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/EventTransformStream/S"}]},"name":"source","kind":"param","id":"source"},{"ref":{"name":"StreamEventTransformer","refId":"dart.async/StreamEventTransformer","arguments":[{"name":"S","refId":"dart.async/EventTransformStream/S"},{"name":"T","refId":"dart.async/EventTransformStream/T"}]},"name":"transformer","kind":"param","id":"transformer","line":"1017"}],"kind":"constructor","id":"EventTransformStream2()","line":"1016"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nStream that transforms another stream by intercepting and replacing events.\n\nThis [Stream] is a transformation of a source stream. Listening on this\nstream is the same as listening on the source stream, except that events\nare intercepted and modified by a [StreamEventTransformer] before becoming\nevents on this stream.\n","id":"EventTransformStream","line":"1013"},{"interfaces":[{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"S","refId":"dart.async/StreamEventTransformer/S"},{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"StreamEventTransformer","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"name":"bind","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamEventTransformer/S"}]},"name":"source","kind":"param","id":"source"}],"kind":"method","id":"bind1()","line":"968"},{"returnType":{"name":"void","refId":"void"},"name":"handleData","children":[{"ref":{"name":"S","refId":"dart.async/StreamEventTransformer/S"},"name":"event","kind":"param","id":"event"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","comment":"\nAct on incoming data event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","id":"handleData2()","line":"978"},{"returnType":{"name":"void","refId":"void"},"name":"handleError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","comment":"\nAct on incoming error event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","id":"handleError2()","line":"989"},{"returnType":{"name":"void","refId":"void"},"name":"handleDone","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamEventTransformer/T"}]},"name":"sink","kind":"param","id":"sink"}],"kind":"method","comment":"\nAct on incoming done event.\n\nThe method may generate any number of events on the sink, but should\nnot throw.\n","id":"handleDone1()","line":"999"},{"name":"StreamEventTransformer","kind":"constructor","id":"StreamEventTransformer0()","line":"966"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nBase class for transformers that modifies stream events.\n\nA [StreamEventTransformer] transforms incoming Stream\nevents of one kind into outgoing events of (possibly) another kind.\n\nSubscribing on the stream returned by [bind] is the same as subscribing on\nthe source stream, except that events are passed through the [transformer]\nbefore being emitted. The transformer may generate any number and\ntypes of events for each incoming event. Pauses on the returned\nsubscription are forwarded to this stream.\n\nAn example that duplicates all data events:\n\n    class DoubleTransformer<T> extends StreamEventTransformerBase<T, T> {\n      void handleData(T data, StreamSink<T> sink) {\n        sink.add(value);\n        sink.add(value);\n      }\n    }\n    someTypeStream.transform(new DoubleTransformer<Type>());\n\nThe default implementations of the \"handle\" methods forward\nthe events unmodified. If using the default [handleData] the generic type [T]\nneeds to be assignable to [S].\n","id":"StreamEventTransformer","line":"965"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"StreamTransformer","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"name":"bind","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamTransformer/S"}]},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"bind1()","line":"935"},{"name":"StreamTransformer","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"S","refId":"dart.async/StreamTransformer/S"},"name":"data","uri":"sdk/lib/async/stream.dart","kind":"param","id":"data","line":"927"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"name":"sink","uri":"sdk/lib/async/stream.dart","kind":"param","id":"sink","line":"927"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleData","line":"927"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"928"},{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"name":"sink","uri":"sdk/lib/async/stream.dart","kind":"param","id":"sink","line":"928"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError","line":"928"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamTransformer/T"}]},"name":"sink","uri":"sdk/lib/async/stream.dart","kind":"param","id":"sink","line":"929"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone","line":"929"}],"kind":"constructor","comment":"\nCreate a [StreamTransformer] that delegates events to the given functions.\n\nThis is actually a [StreamEventTransformer] where the event handling is\nperformed by the function arguments.\nIf an argument is omitted, it acts as the corresponding default method from\n[StreamEventTransformer].\n\nExample use:\n\n    stringStream.transform(new StreamTransformer<String, String>(\n        handleData: (Strung value, StreamSink<String> sink) {\n          sink.add(value);\n          sink.add(value);  // Duplicate the incoming events.\n        }));\n\n","id":"StreamTransformer3()","line":"926"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nThe target of a [Stream.transform] call.\n\nThe [Stream.transform] call will pass itself to this object and then return\nthe resulting stream.\n","id":"StreamTransformer","line":"908"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"StreamConsumer","children":[{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/StreamConsumer/T"}]},"name":"consume","children":[{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"S","refId":"dart.async/StreamConsumer/S"}]},"name":"stream","kind":"param","id":"stream"}],"kind":"method","id":"consume1()","line":"898"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nThe target of a [Stream.pipe] call.\n\nThe [Stream.pipe] call will pass itself to this object, and then return\nthe resulting [Future]. The pipe should complete the future when it's\ndone.\n","id":"StreamConsumer","line":"897"},{"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamSinkView/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"StreamSinkView","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/StreamSinkView/T"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"add1()","line":"884"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"kind":"method","id":"signalError1()","line":"885"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","id":"close0()","line":"886"},{"isFinal":true,"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamSinkView/T"}]},"name":"_sink","isPrivate":true,"kind":"variable","id":"_sink","line":"880"},{"name":"StreamSinkView","children":[{"initializedField":{"name":"_sink","refId":"dart.async/StreamSinkView/_sink"},"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/StreamSinkView/T"}]},"name":"_sink","isPrivate":true,"kind":"param","id":"_sink"}],"kind":"constructor","id":"StreamSinkView1()","line":"882"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\n[StreamSink] wrapper that only exposes the [StreamSink] interface.\n","id":"StreamSinkView","line":"879"},{"superclass":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"name":"StreamView","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"name":"asBroadcastStream","kind":"method","id":"asBroadcastStream0()","line":"865"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"name":"listen","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/StreamView/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"867"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"868"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"868"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"869"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"870"}],"kind":"method","id":"listen4()","line":"867"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isBroadcast","kind":"property","id":"isBroadcast","line":"863"},{"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"name":"_stream","isPrivate":true,"kind":"variable","id":"_stream","line":"859"},{"name":"StreamView","children":[{"initializedField":{"name":"_stream","refId":"dart.async/StreamView/_stream"},"ref":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/StreamView/T"}]},"name":"_stream","isPrivate":true,"kind":"param","id":"_stream"}],"kind":"constructor","id":"StreamView1()","line":"861"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"[Stream] wrapper that only exposes the [Stream] interface. ","id":"StreamView","line":"858"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"StreamSink","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/StreamSink/T"},"name":"event","kind":"param","id":"event"}],"kind":"method","id":"add1()","line":"851"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"errorEvent","kind":"param","id":"errorEvent"}],"kind":"method","comment":"Signal an async error to the receivers of this sink's values. ","id":"signalError1()","line":"853"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","id":"close0()","line":"854"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nAn interface that abstracts sending events into a [Stream].\n","id":"StreamSink","line":"850"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"StreamSubscription","children":[{"returnType":{"name":"void","refId":"void"},"name":"cancel","kind":"method","comment":"\nCancels this subscription. It will no longer receive events.\n\nIf an event is currently firing, this unsubscription will only\ntake effect after all subscribers have received the current event.\n","id":"cancel0()","line":"815"},{"returnType":{"name":"void","refId":"void"},"name":"onData","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/StreamSubscription/T"},"name":"data","uri":"sdk/lib/async/stream.dart","kind":"param","id":"data","line":"818"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleData"}],"kind":"method","comment":"Set or override the data event handler of this subscription. ","id":"onData1()","line":"818"},{"returnType":{"name":"void","refId":"void"},"name":"onError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"821"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleError"}],"kind":"method","comment":"Set or override the error event handler of this subscription. ","id":"onError1()","line":"821"},{"returnType":{"name":"void","refId":"void"},"name":"onDone","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handleDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handleDone"}],"kind":"method","comment":"Set or override the done event handler of this subscription. ","id":"onDone1()","line":"824"},{"returnType":{"name":"void","refId":"void"},"name":"pause","children":[{"ref":{"name":"Future","refId":"dart.async/Future"},"isOptional":true,"name":"resumeSignal","kind":"param","id":"resumeSignal"}],"kind":"method","comment":"\nRequest that the stream pauses events until further notice.\n\nIf [resumeSignal] is provided, the stream will undo the pause\nwhen the future completes. If the future completes with an error,\nit will not be handled!\n\nA call to [resume] will also undo a pause.\n\nIf the subscription is paused more than once, an equal number\nof resumes must be performed to resume the stream.\n","id":"pause1()","line":"838"},{"returnType":{"name":"void","refId":"void"},"name":"resume","kind":"method","comment":"\nResume after a pause.\n","id":"resume0()","line":"843"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nA control object for the subscription on a [Stream].\n\nWhen you subscribe on a [Stream] using [Stream.listen],\na [StreamSubscription] object is returned. This object\nis used to later unsubscribe again, or to temporarily pause\nthe stream's events.\n","id":"StreamSubscription","line":"808"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Stream","children":[{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"asBroadcastStream","kind":"method","comment":"\nReturns a multi-subscription stream that produces the same events as this.\n\nIf this stream is single-subscription, return a new stream that allows\nmultiple subscribers. It will subscribe to this stream when its first\nsubscriber is added, and unsubscribe again when the last subscription is\ncancelled.\n\nIf this stream is already a broadcast stream, it is returned unmodified.\n","id":"asBroadcastStream0()","line":"94"},{"returnType":{"name":"StreamSubscription","refId":"dart.async/StreamSubscription","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"listen","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onData","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"event","uri":"sdk/lib/async/stream.dart","kind":"param","id":"event","line":"113"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onData"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"114"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"114"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onDone","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onDone","line":"115"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"116"}],"kind":"method","comment":"\nAdd a subscription to this stream.\n\nOn each data event from this stream, the subscribers [onData] handler\nis called. If [onData] is null, nothing happens.\n\nOn errors from this stream, the [onError] handler is given a\n[AsyncError] object describing the error.\n\nIf this stream closes, the [onDone] handler is called.\n\nIf [unsubscribeOnError] is true, the subscription is ended when\nthe first error is reported. The default is false.\n","id":"listen4()","line":"113"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"where","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"event","uri":"sdk/lib/async/stream.dart","kind":"param","id":"event","line":"124"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nCreates a new stream from this stream that discards some data events.\n\nThe new stream sends the same error and done events as this stream,\nbut it only sends the data events that satisfy the [test].\n","id":"where1()","line":"124"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"name":"map","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"convert","children":[{"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"event","uri":"sdk/lib/async/stream.dart","kind":"param","id":"event","line":"132"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"convert"}],"kind":"method","comment":"\nCreate a new stream that converts each element of this stream\nto a new value using the [convert] function.\n","id":"map1()","line":"132"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"name":"mappedBy","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"element","uri":"sdk/lib/async/stream.dart","kind":"param","id":"element","line":"141"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","comment":"\nDeprecated alias for [map].\n\n@deprecated\n","id":"mappedBy1()","line":"141"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"handleError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"handle","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"160"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"handle"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"160"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nCreate a wrapper Stream that intercepts some errors from this stream.\n\nIf this stream sends an error that matches [test], then it is intercepted\nby the [handle] function.\n\nAn [AsyncError] [:e:] is matched by a test function if [:test(e):] returns\ntrue. If [test] is omitted, every error is considered matching.\n\nIf the error is intercepted, the [handle] function can decide what to do\nwith it. It can throw if it wants to raise a new (or the same) error,\nor simply return to make the stream forget the error.\n\nIf you need to transform an error into a data event, use the more generic\n[Stream.transformEvent] to handle the event by writing a data event to\nthe output sink\n","id":"handleError2()","line":"160"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"name":"expand","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"convert","children":[{"returnType":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"172"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"convert"}],"kind":"method","comment":"\nCreate a new stream from this stream that converts each element\ninto zero or more events.\n\nEach incoming event is converted to an [Iterable] of new events,\nand each of these new events are then sent by the returned stream\nin order.\n","id":"expand1()","line":"172"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"pipe","children":[{"ref":{"name":"StreamConsumer","refId":"dart.async/StreamConsumer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"streamConsumer","kind":"param","id":"streamConsumer"}],"kind":"method","comment":"\nBind this stream as the input of the provided [StreamConsumer].\n","id":"pipe1()","line":"179"},{"returnType":{"name":"Stream","refId":"dart.async/Stream"},"name":"transform","children":[{"ref":{"name":"StreamTransformer","refId":"dart.async/StreamTransformer","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"streamTransformer","kind":"param","id":"streamTransformer"}],"kind":"method","comment":"\nChain this stream as the input of the provided [StreamTransformer].\n\nReturns the result of [:streamTransformer.bind:] itself.\n","id":"transform1()","line":"188"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"reduce","children":[{"name":"initialValue","kind":"param","id":"initialValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"combine","children":[{"name":"Function","children":[{"name":"previous","uri":"sdk/lib/async/stream.dart","kind":"param","id":"previous","line":"193"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"element","uri":"sdk/lib/async/stream.dart","kind":"param","id":"element","line":"193"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"combine"}],"kind":"method","comment":"Reduces a sequence of values by repeatedly applying [combine]. ","id":"reduce2()","line":"193"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"pipeInto","children":[{"ref":{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"sink","kind":"param","id":"sink"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/stream.dart","kind":"param","id":"error","line":"219"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"219"},{"ref":{"name":"bool","refId":"dart.core/bool"},"isNamed":true,"isOptional":true,"name":"unsubscribeOnError","kind":"param","id":"unsubscribeOnError","line":"220"}],"kind":"method","id":"pipeInto3()","line":"218"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"name":"contains","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"match","kind":"param","id":"match"}],"kind":"method","comment":"\nCheck whether [match] occurs in the elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","id":"contains1()","line":"240"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"name":"every","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"element","uri":"sdk/lib/async/stream.dart","kind":"param","id":"element","line":"272"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nCheck whether [test] accepts all elements provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","id":"every1()","line":"272"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"name":"any","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"element","uri":"sdk/lib/async/stream.dart","kind":"param","id":"element","line":"304"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nCheck whether [test] accepts any element provided by this stream.\n\nCompletes the [Future] when the answer is known.\nIf this stream reports an error, the [Future] will report that error.\n","id":"any1()","line":"304"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"min","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"a","uri":"sdk/lib/async/stream.dart","kind":"param","id":"a","line":"355"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"b","uri":"sdk/lib/async/stream.dart","kind":"param","id":"b","line":"355"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare"}],"kind":"method","comment":"\nFinds the least element in the stream.\n\nIf the stream is empty, the result is [:null:].\nOtherwise the result is a value from the stream that is not greater\nthan any other value from the stream (according to [compare], which must\nbe a [Comparator]).\n\nIf [compare] is omitted, it defaults to [Comparable.compare].\n","id":"min1()","line":"355"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"max","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"compare","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"a","uri":"sdk/lib/async/stream.dart","kind":"param","id":"a","line":"399"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"b","uri":"sdk/lib/async/stream.dart","kind":"param","id":"b","line":"399"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"compare"}],"kind":"method","comment":"\nFinds the largest element in the stream.\n\nIf the stream is empty, the result is [:null:].\nOtherwise the result is an value from the stream that is not smaller\nthan any other value from the stream (according to [compare], which must\nbe a [Comparator]).\n\nIf [compare] is omitted, it defaults to [Comparable.compare].\n","id":"max1()","line":"399"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"name":"toList","kind":"method","comment":"Collect the data of this stream in a [List]. ","id":"toList0()","line":"451"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"Set","refId":"dart.core/Set","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]}]},"name":"toSet","kind":"method","comment":"Collect the data of this stream in a [Set]. ","id":"toSet0()","line":"469"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"take","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"count","kind":"param","id":"count"}],"kind":"method","comment":"\nProvide at most the first [n] values of this stream.\n\nForwards the first [n] data events of this stream, and all error\nevents, to the returned stream, and ends with a done event.\n\nIf this stream produces fewer than [count] values before it's done,\nso will the returned stream.\n","id":"take1()","line":"495"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"takeWhile","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"507"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nForwards data events while [test] is successful.\n\nThe returned stream provides the same events as this stream as long\nas [test] returns [:true:] for the event data. The stream is done\nwhen either this stream is done, or when this stream first provides\na value that [test] doesn't accept.\n","id":"takeWhile1()","line":"507"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"skip","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"count","kind":"param","id":"count"}],"kind":"method","comment":"\nSkips the first [count] data events from this stream.\n","id":"skip1()","line":"514"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"skipWhile","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"526"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nSkip data events from this stream while they are matched by [test].\n\nError and done events are provided by the returned stream unmodified.\n\nStarting with the first data event where [test] returns true for the\nevent data, the returned stream will have the same events as this stream.\n","id":"skipWhile1()","line":"526"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"distinct","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"isOptional":true,"name":"equals","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"previous","uri":"sdk/lib/async/stream.dart","kind":"param","id":"previous","line":"539"},{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"next","uri":"sdk/lib/async/stream.dart","kind":"param","id":"next","line":"539"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"equals"}],"kind":"method","comment":"\nSkip data events if they are equal to the previous data event.\n\nThe returned stream provides the same events as this stream, except\nthat it never provides two consequtive data events that are equal.\n\nEquality is determined by the provided [equals] method. If that is\nomitted, the '==' operator on the last provided data element is used.\n","id":"distinct1()","line":"539"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"firstMatching","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"647"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"defaultValue","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"defaultValue"}],"kind":"method","comment":"\nFind the first element of this stream matching [test].\n\nReturns a future that is filled with the first element of this stream\nthat [test] returns true for.\n\nIf no such element is found before this stream is done, and a\n[defaultValue] function is provided, the result of calling [defaultValue]\nbecomes the value of the future.\n\nIf an error occurs, or if this stream ends without finding a match and\nwith no [defaultValue] function provided, the future will receive an\nerror.\n","id":"firstMatching2()","line":"647"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"lastMatching","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"685"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"defaultValue","children":[{"returnType":{"name":"T","refId":"dart.async/Stream/T"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"defaultValue"}],"kind":"method","comment":"\nFinds the last element in this stream matching [test].\n\nAs [firstMatching], except that the last matching element is found.\nThat means that the result cannot be provided before this stream\nis done.\n","id":"lastMatching2()","line":"685"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"singleMatching","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Stream/T"},"name":"value","uri":"sdk/lib/async/stream.dart","kind":"param","id":"value","line":"728"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","comment":"\nFinds the single element in this stream matching [test].\n\nLike [lastMatch], except that it is an error if more than one\nmatching element occurs in the stream.\n","id":"singleMatching1()","line":"728"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"elementAt","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"index","kind":"param","id":"index"}],"kind":"method","comment":"\nReturns the value of the [index]th data event of this stream.\n\nIf an error event occurs, the future will end with this error.\n\nIf this stream provides fewer than [index] elements before closing,\nan error is reported.\n","id":"elementAt1()","line":"775"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"isBroadcast","kind":"property","comment":"\nWhether the stream is a broadcast stream.\n","id":"isBroadcast","line":"82"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"length","kind":"property","comment":"Counts the elements in the stream. ","id":"length","line":"332"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"bool","refId":"dart.core/bool"}]},"name":"isEmpty","kind":"property","comment":"Reports whether this stream contains any elements. ","id":"isEmpty","line":"434"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"first","kind":"property","comment":"\nReturns the first element.\n\nIf [this] is empty throws a [StateError]. Otherwise this method is\nequivalent to [:this.elementAt(0):]\n","id":"first","line":"549"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"last","kind":"property","comment":"\nReturns the last element.\n\nIf [this] is empty throws a [StateError].\n","id":"last","line":"573"},{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"single","kind":"property","comment":"\nReturns the single element.\n\nIf [this] is empty or has more than one element throws a [StateError].\n","id":"single","line":"602"},{"name":"Stream","kind":"constructor","id":"Stream0()","line":"50"},{"name":"Stream.fromFuture","children":[{"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"future","kind":"param","id":"future"}],"kind":"constructor","comment":"\nCreates a new single-subscription stream from the future.\n\nWhen the future completes, the stream will fire one event, either\ndata or error, and then close with a done-event.\n","id":"Stream.fromFuture1()","line":"58"},{"name":"Stream.fromIterable","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"T","refId":"dart.async/Stream/T"}]},"name":"data","kind":"param","id":"data"}],"kind":"constructor","comment":"\nCreates a single-subscription stream that gets its data from [data].\n","id":"Stream.fromIterable1()","line":"74"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/stream.dart","kind":"class","comment":"\nA source of asynchronous data events.\n\nA Stream provides a sequence of events. Each event is either a data event or\nan error event, representing the result of a single computation. When the\nStream is exhausted, it may send a single \"done\" event.\n\nYou can [listen] on a stream to receive the events it sends. When you listen,\nyou receive a [StreamSubscription] object that can be used to stop listening,\nor to temporarily pause events from the stream.\n\nWhen an event is fired, the listeners at that time are informed.\nIf a listener is added or removed while an event is being fired, the change\nwill only take effect after the event is completely fired.\n\nStreams always respect \"pause\" requests. If necessary they need to buffer\ntheir input, but often, and preferably, they can simply request their input\nto pause too.\n\nThere are two kinds of streams: The normal \"single-subscription\" streams and\n\"broadcast\" streams.\n\nA single-subscription stream allows only a single listener at a time.\nIt holds back events until it gets a listener, and it may exhaust\nitself when the listener is unsubscribed, even if the stream wasn't done.\n\nSingle-subscription streams are generally used for streaming parts of\ncontiguous data like file I/O.\n\nA broadcast stream allows any number of listeners, and it fires\nits events when they are ready, whether there are listeners or not.\n\nBroadcast streams are used for independent events/observers.\n\nThe default implementation of [isBroadcast] returns false.\nA broadcast stream inheriting from [Stream] must override [isBroadcast]\nto return [:true:].\n","id":"Stream","line":"49"},{"interfaces":[{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureWrapper/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_FutureWrapper","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"then","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"function","children":[{"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_FutureWrapper/T"},"name":"value","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"value","line":"517"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"function"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"517"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"}],"kind":"method","id":"then2()","line":"517"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"catchError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"function","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"521"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"function"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"521"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"catchError2()","line":"521"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureWrapper/T"}]},"name":"whenComplete","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action"}],"kind":"method","id":"whenComplete1()","line":"525"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_FutureWrapper/T"}]},"name":"asStream","kind":"method","id":"asStream0()","line":"529"},{"isFinal":true,"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureWrapper/T"}]},"name":"_future","isPrivate":true,"kind":"variable","id":"_future","line":"513"},{"name":"_FutureWrapper","children":[{"initializedField":{"name":"_future","refId":"dart.async/_FutureWrapper/_future"},"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureWrapper/T"}]},"name":"_future","isPrivate":true,"kind":"param","id":"_future"}],"kind":"constructor","id":"_FutureWrapper1()","line":"515"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"\nThin wrapper around a [Future].\n\nThis is used to return a \"new\" [Future] that effectively work just\nas an existing [Future], without making this discoverable by comparing\nidentities.\n","id":"_FutureWrapper","line":"512"},{"superclass":{"name":"_TransformFuture","refId":"dart.async/_TransformFuture","arguments":[{"name":"T","refId":"dart.async/_WhenFuture/T"},{"name":"T","refId":"dart.async/_WhenFuture/T"}]},"name":"_WhenFuture","children":[{"returnType":{"name":"void","refId":"void"},"name":"_sendValue","children":[{"ref":{"name":"T","refId":"dart.async/_WhenFuture/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"465"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"485"},{"isFinal":true,"ref":{"name":"_FutureAction","refId":"dart.async/_FutureAction"},"name":"_action","isPrivate":true,"kind":"variable","id":"_action","line":"461"},{"name":"_WhenFuture","children":[{"initializedField":{"name":"_action","refId":"dart.async/_WhenFuture/_action"},"ref":{"name":"_FutureAction","refId":"dart.async/_FutureAction"},"name":"_action","isPrivate":true,"kind":"param","id":"_action"}],"kind":"constructor","id":"_WhenFuture1()","line":"463"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"Future returned by [Future.whenComplete]. ","id":"_WhenFuture","line":"460"},{"superclass":{"name":"_ThenFuture","refId":"dart.async/_ThenFuture","arguments":[{"name":"S","refId":"dart.async/_SubscribeFuture/S"},{"name":"T","refId":"dart.async/_SubscribeFuture/T"}]},"name":"_SubscribeFuture","children":[{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"443"},{"isFinal":true,"ref":{"name":"_FutureOnError","refId":"dart.async/_FutureOnError"},"name":"_onError","isPrivate":true,"kind":"variable","id":"_onError","line":"437"},{"name":"_SubscribeFuture","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onValue","children":[{"name":"Function","children":[{"ref":{"name":"S","refId":"dart.async/_SubscribeFuture/S"},"name":"value","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"value","line":"439"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onValue"},{"initializedField":{"name":"_onError","refId":"dart.async/_SubscribeFuture/_onError"},"ref":{"name":"_FutureOnError","refId":"dart.async/_FutureOnError"},"name":"_onError","isPrivate":true,"kind":"param","id":"_onError"}],"kind":"constructor","id":"_SubscribeFuture2()","line":"439"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"Future returned by [Future.then] with an [:onError:] parameter. ","id":"_SubscribeFuture","line":"436"},{"superclass":{"name":"_TransformFuture","refId":"dart.async/_TransformFuture","arguments":[{"name":"T","refId":"dart.async/_CatchErrorFuture/T"},{"name":"T","refId":"dart.async/_CatchErrorFuture/T"}]},"name":"_CatchErrorFuture","children":[{"name":"_sendValue","children":[{"ref":{"name":"T","refId":"dart.async/_CatchErrorFuture/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"399"},{"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"403"},{"isFinal":true,"ref":{"name":"_FutureErrorTest","refId":"dart.async/_FutureErrorTest"},"name":"_test","isPrivate":true,"kind":"variable","id":"_test","line":"394"},{"isFinal":true,"ref":{"name":"_FutureOnError","refId":"dart.async/_FutureOnError"},"name":"_onError","isPrivate":true,"kind":"variable","id":"_onError","line":"395"},{"name":"_CatchErrorFuture","children":[{"initializedField":{"name":"_onError","refId":"dart.async/_CatchErrorFuture/_onError"},"ref":{"name":"_FutureOnError","refId":"dart.async/_FutureOnError"},"name":"_onError","isPrivate":true,"kind":"param","id":"_onError"},{"initializedField":{"name":"_test","refId":"dart.async/_CatchErrorFuture/_test"},"ref":{"name":"_FutureErrorTest","refId":"dart.async/_FutureErrorTest"},"name":"_test","isPrivate":true,"kind":"param","id":"_test"}],"kind":"constructor","id":"_CatchErrorFuture2()","line":"397"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"Future returned by [Future.catchError]. ","id":"_CatchErrorFuture","line":"393"},{"superclass":{"name":"_TransformFuture","refId":"dart.async/_TransformFuture","arguments":[{"name":"S","refId":"dart.async/_ThenFuture/S"},{"name":"T","refId":"dart.async/_ThenFuture/T"}]},"name":"_ThenFuture","children":[{"name":"_sendValue","children":[{"ref":{"name":"S","refId":"dart.async/_ThenFuture/S"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"372"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"387"},{"isFinal":true,"name":"_onValue","isPrivate":true,"kind":"variable","id":"_onValue","line":"368"},{"name":"_ThenFuture","children":[{"initializedField":{"name":"_onValue","refId":"dart.async/_ThenFuture/_onValue"},"name":"_onValue","isPrivate":true,"kind":"param","id":"_onValue"}],"kind":"constructor","id":"_ThenFuture1()","line":"370"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"Future returned by [Future.then] with no [:onError:] parameter. ","id":"_ThenFuture","line":"365"},{"name":"_FutureAction","isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"typedef","comment":"Used by [WhenFuture]. ","id":"_FutureAction","line":"362"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_FutureErrorTest","children":[{"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"typedef","comment":"Test used by [Future.catchError] to handle skip some errors. ","id":"_FutureErrorTest","line":"360"},{"name":"_FutureOnError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"typedef","id":"_FutureOnError","line":"358"},{"name":"_FutureOnValue","children":[{"ref":{"name":"T","refId":"dart.async/_FutureOnValue/T"},"name":"value","kind":"param","id":"value"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"typedef","comment":"The onValue and onError handlers return either a value or a future ","id":"_FutureOnValue","line":"357"},{"interfaces":[{"name":"_FutureListener","refId":"dart.async/_FutureListener","arguments":[{"name":"S","refId":"dart.async/_TransformFuture/S"}]}],"superclass":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl","arguments":[{"name":"T","refId":"dart.async/_TransformFuture/T"}]},"isAbstract":true,"name":"_TransformFuture","children":[{"returnType":{"name":"void","refId":"void"},"name":"_sendValue","children":[{"ref":{"name":"S","refId":"dart.async/_TransformFuture/S"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"347"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"349"},{"returnType":{"name":"void","refId":"void"},"name":"_subscribeTo","children":[{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"isPrivate":true,"kind":"method","id":"_subscribeTo1()","line":"351"},{"ref":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"_nextListener","isPrivate":true,"kind":"variable","id":"_nextListener","line":"345"},{"name":"S","kind":"typeparam","id":"S"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"\nTransforming future base class.\n\nA transforming future is itself a future and a future listener.\nSubclasses override [_sendValue]/[_sendError] to intercept\nthe results of a previous future.\n","id":"_TransformFuture","line":"342"},{"interfaces":[{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureImpl/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_FutureImpl","children":[{"returnType":{"name":"void","refId":"void"},"name":"_clearUnhandledError","isPrivate":true,"kind":"method","id":"_clearUnhandledError0()","line":"78"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"then","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/_FutureImpl/T"},"name":"value","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"value","line":"144"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"144"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"}],"kind":"method","id":"then2()","line":"144"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"catchError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"asyncError","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"asyncError","line":"165"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"165"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"kind":"method","id":"catchError2()","line":"165"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_FutureImpl/T"}]},"name":"whenComplete","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action"}],"kind":"method","id":"whenComplete1()","line":"176"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"_handleValue","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onValue","children":[{"name":"Function","children":[{"name":"value","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"value","line":"197"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onValue"}],"isPrivate":true,"kind":"method","comment":"Handle a late listener on a completed future with a value. ","id":"_handleValue1()","line":"197"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"_handleError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"206"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"name":"error","uri":"sdk/lib/async/future_impl.dart","kind":"param","id":"error","line":"206"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test"}],"isPrivate":true,"kind":"method","comment":"Handle a late listener on a completed future with an error. ","id":"_handleError2()","line":"206"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/_FutureImpl/T"}]},"name":"asStream","kind":"method","id":"asStream0()","line":"215"},{"returnType":{"name":"void","refId":"void"},"name":"_setValue","children":[{"ref":{"name":"T","refId":"dart.async/_FutureImpl/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_setValue1()","line":"217"},{"returnType":{"name":"void","refId":"void"},"name":"_setError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_setError1()","line":"230"},{"returnType":{"name":"void","refId":"void"},"name":"_scheduleUnhandledError","isPrivate":true,"kind":"method","id":"_scheduleUnhandledError0()","line":"247"},{"returnType":{"name":"void","refId":"void"},"name":"_addListener","children":[{"ref":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"listener","kind":"param","id":"listener"}],"isPrivate":true,"kind":"method","id":"_addListener1()","line":"265"},{"returnType":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"_removeListeners","isPrivate":true,"kind":"method","id":"_removeListeners0()","line":"272"},{"returnType":{"name":"void","refId":"void"},"name":"_chain","children":[{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"isPrivate":true,"kind":"method","comment":"\nMake another [_FutureImpl] receive the result of this one.\n\nIf this future is already complete, the [future] is notified\nimmediately. This function is only called during event resolution\nwhere it's acceptable to send an event.\n","id":"_chain1()","line":"295"},{"returnType":{"name":"void","refId":"void"},"name":"_setOrChainValue","children":[{"name":"result","kind":"param","id":"result"}],"isPrivate":true,"kind":"method","comment":"\nHelper function to handle the result of transforming an incoming event.\n\nIf the result is itself a [Future], this future is linked to that\nfuture's output. If not, this future is completed with the result.\n","id":"_setOrChainValue1()","line":"313"},{"returnType":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"_asListener","isPrivate":true,"kind":"method","id":"_asListener0()","line":"332"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isComplete","isPrivate":true,"kind":"property","id":"_isComplete","line":"73"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasValue","isPrivate":true,"kind":"property","id":"_hasValue","line":"74"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasError","isPrivate":true,"kind":"property","id":"_hasError","line":"75"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_hasUnhandledError","isPrivate":true,"kind":"property","id":"_hasUnhandledError","line":"76"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_INCOMPLETE","isPrivate":true,"kind":"variable","id":"_INCOMPLETE","line":"65"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_VALUE","isPrivate":true,"kind":"variable","id":"_VALUE","line":"66"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_ERROR","isPrivate":true,"kind":"variable","id":"_ERROR","line":"67"},{"ref":{"name":"int","refId":"dart.core/int"},"isStatic":true,"name":"_UNHANDLED_ERROR","isPrivate":true,"kind":"variable","id":"_UNHANDLED_ERROR","line":"68"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_state","isPrivate":true,"kind":"variable","id":"_state","line":"71"},{"name":"_resultOrListeners","isPrivate":true,"kind":"variable","id":"_resultOrListeners","line":"95"},{"name":"_FutureImpl","kind":"constructor","id":"_FutureImpl0()","line":"97"},{"name":"_FutureImpl.immediate","children":[{"ref":{"name":"T","refId":"dart.async/_FutureImpl/T"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","id":"_FutureImpl.immediate1()","line":"99"},{"name":"_FutureImpl.immediateError","children":[{"name":"error","kind":"param","id":"error"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"constructor","id":"_FutureImpl.immediateError2()","line":"104"},{"name":"_FutureImpl.wait","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Future","refId":"dart.async/Future"}]},"name":"futures","kind":"param","id":"futures"}],"kind":"constructor","id":"_FutureImpl.wait1()","line":"114"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","id":"_FutureImpl","line":"64"},{"interfaces":[{"name":"_FutureListener","refId":"dart.async/_FutureListener","arguments":[{"name":"T","refId":"dart.async/_FutureListenerWrapper/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_FutureListenerWrapper","children":[{"name":"_sendValue","children":[{"ref":{"name":"T","refId":"dart.async/_FutureListenerWrapper/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"60"},{"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"61"},{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"variable","id":"future","line":"57"},{"ref":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"_nextListener","isPrivate":true,"kind":"variable","id":"_nextListener","line":"58"},{"name":"_FutureListenerWrapper","children":[{"initializedField":{"name":"future","refId":"dart.async/_FutureListenerWrapper/future"},"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"kind":"constructor","id":"_FutureListenerWrapper1()","line":"59"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"Adapter for a [_FutureImpl] to be a future result listener. ","id":"_FutureListenerWrapper","line":"56"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_FutureListener","children":[{"returnType":{"name":"void","refId":"void"},"name":"_sendValue","children":[{"ref":{"name":"T","refId":"dart.async/_FutureListener/T"},"name":"value","kind":"param","id":"value"}],"isPrivate":true,"kind":"method","id":"_sendValue1()","line":"51"},{"returnType":{"name":"void","refId":"void"},"name":"_sendError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"kind":"method","id":"_sendError1()","line":"52"},{"ref":{"name":"_FutureListener","refId":"dart.async/_FutureListener"},"name":"_nextListener","isPrivate":true,"kind":"variable","id":"_nextListener","line":"47"},{"name":"_FutureListener.wrap","children":[{"ref":{"name":"_FutureImpl","refId":"dart.async/_FutureImpl"},"name":"future","kind":"param","id":"future"}],"kind":"constructor","id":"_FutureListener.wrap1()","line":"48"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","comment":"\nA listener on a future.\n\nWhen the future completes, the [_sendValue] or [_sendError] method\nis invoked with the result.\n\nListeners are kept in a linked list.\n","id":"_FutureListener","line":"46"},{"interfaces":[{"name":"Completer","refId":"dart.async/Completer","arguments":[{"name":"T","refId":"dart.async/_CompleterImpl/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_CompleterImpl","children":[{"returnType":{"name":"void","refId":"void"},"name":"complete","children":[{"ref":{"name":"T","refId":"dart.async/_CompleterImpl/T"},"isOptional":true,"name":"value","kind":"param","id":"value"}],"kind":"method","id":"complete1()","line":"17"},{"returnType":{"name":"void","refId":"void"},"name":"completeError","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"error","kind":"param","id":"error"},{"ref":{"name":"Object","refId":"dart.core/Object"},"defaultValue":"null","isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"method","id":"completeError2()","line":"24"},{"isFinal":true,"ref":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/_CompleterImpl/T"}]},"name":"future","kind":"variable","id":"future","line":"12"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isComplete","isPrivate":true,"kind":"variable","id":"_isComplete","line":"13"},{"name":"_CompleterImpl","kind":"constructor","id":"_CompleterImpl0()","line":"15"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/future_impl.dart","kind":"class","id":"_CompleterImpl","line":"11"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Completer","children":[{"returnType":{"name":"void","refId":"void"},"name":"complete","children":[{"ref":{"name":"T","refId":"dart.async/Completer/T"},"isOptional":true,"name":"value","kind":"param","id":"value"}],"kind":"method","comment":"\nCompletes [future] with the supplied values.\n\nAll listeners on the future will be immediately informed about the value.\n","id":"complete1()","line":"338"},{"returnType":{"name":"void","refId":"void"},"name":"completeError","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"exception","kind":"param","id":"exception"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"method","comment":"\nComplete [future] with an error.\n\nCompleting a future with an error indicates that an exception was thrown\nwhile trying to produce a value.\n\nThe argument [exception] should not be `null`.\n\nIf [exception] is an [AsyncError], it is used directly as the error\nmessage sent to the future's listeners, and [stackTrace] is ignored.\n\nOtherwise the [exception] and an optional [stackTrace] is combined into an\n[AsyncError] and sent to this future's listeners.\n","id":"completeError2()","line":"354"},{"ref":{"name":"Future","refId":"dart.async/Future"},"name":"future","kind":"property","comment":"The future that will contain the result provided to this completer. ","id":"future","line":"331"},{"name":"Completer","kind":"constructor","id":"Completer0()","line":"328"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/future.dart","kind":"class","comment":"\nA [Completer] is used to produce [Future]s and supply their value when it\nbecomes available.\n\nA service that provides values to callers, and wants to return [Future]s can\nuse a [Completer] as follows:\n\n    Completer completer = new Completer();\n    // send future object back to client...\n    return completer.future;\n    ...\n\n    // later when value is available, call:\n    completer.complete(value);\n\n    // alternatively, if the service cannot produce the value, it\n    // can provide an error:\n    completer.completeError(error);\n\n","id":"Completer","line":"326"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Future","children":[{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"List","refId":"dart.core/List"}]},"name":"wait","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"Future","refId":"dart.async/Future"}]},"name":"futures","kind":"param","id":"futures"}],"kind":"method","comment":"\nWait for all the given futures to complete and collect their values.\n\nReturns a future which will complete once all the futures in a list are\ncomplete. If any of the futures in the list completes with an error,\nthe resulting future also completes with an error. Otherwise the value\nof the returned future will be a list of all the values that were produced.\n","id":"wait1()","line":"164"},{"isStatic":true,"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"forEach","children":[{"ref":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"input","kind":"param","id":"input"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"f","children":[{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"Function","children":[{"name":"element","uri":"sdk/lib/async/future.dart","kind":"param","id":"element","line":"178"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"f"}],"kind":"method","comment":"\nPerform an async operation for each element of the iterable, in turn.\n\nRuns [f] for each element in [input] in order, moving to the next element\nonly when the [Future] returned by [f] completes. Returns a [Future] that\ncompletes when all elements have been processed.\n\nThe return values of all [Future]s are discarded. Any errors will cause the\niteration to stop and will be piped through the returned [Future].\n","id":"forEach2()","line":"178"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"then","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onValue","children":[{"name":"Function","children":[{"ref":{"name":"T","refId":"dart.async/Future/T"},"name":"value","uri":"sdk/lib/async/future.dart","kind":"param","id":"value","line":"216"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onValue"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"asyncError","uri":"sdk/lib/async/future.dart","kind":"param","id":"asyncError","line":"216"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"}],"kind":"method","comment":"\nWhen this future completes with a value, then [onValue] is called with this\nvalue. If [this] future is already completed then the invocation of\n[onValue] is delayed until the next event-loop iteration.\n\nReturns a new [Future] `f` which is completed with the result of\ninvoking [onValue] (if [this] completes with a value) or [onError] (if\n[this] completes with an error).\n\nIf the invoked callback throws an exception, the returned future `f` is\ncompleted with the error. If the value thrown is an [AsyncError], it is\nused directly, as the error result. Otherwise it is wrapped in an\n[AsyncError] first.\n\nIf the invoked callback returns a [Future] `f2` then `f` and `f2` are\nchained. That is, `f` is completed with the completion value of `f2`.\n\nIf [onError] is not given, it is equivalent to `(e) { throw e; }`. That\nis, it forwards the error to `f`.\n\nIn most cases, it is more readable to use [catchError] separately, possibly\nwith a `test` parameter, instead of handling both value and error in a\nsingle [then] call.\n","id":"then2()","line":"216"},{"returnType":{"name":"Future","refId":"dart.async/Future"},"name":"catchError","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"onError","children":[{"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"asyncError","uri":"sdk/lib/async/future.dart","kind":"param","id":"asyncError","line":"258"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"test","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"Function","children":[{"ref":{"name":"Object","refId":"dart.core/Object"},"name":"error","uri":"sdk/lib/async/future.dart","kind":"param","id":"error","line":"259"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"test","line":"259"}],"kind":"method","comment":"\nHandles errors emitted by this [Future].\n\nReturns a new [Future] `f`.\n\nWhen [this] completes with a value, the value is forwarded to `f`\nunmodified. That is, `f` completes with the same value.\n\nWhen [this] completes with an error, [test] is called with the\nerror's value. If the invocation returns [true], [onError] is called with\nthe error wrapped in an [AsyncError]. The result of [onError] is handled\nexactly the same as for [then]'s [onError].\n\nIf [test] returns false, the exception is not handled by [onError], but is\nthrown unmodified, thus forwarding it to `f`.\n\nIf [test] is omitted, it defaults to a function that always returns true.\n\nExample:\n\n    foo\n      .catchError(..., test: (e) => e is ArgumentError)\n      .catchError(..., test: (e) => e is NoSuchMethodError)\n      .then((v) { ... });\n\nThis method is equivalent to:\n\n    Future catchError(onError(AsyncError asyncError),\n                      {bool test(Object error)}) {\n      this.then((v) => v,  // Forward the value.\n                // But handle errors, if the [test] succeeds.\n                onError: (AsyncError e) {\n                  if (test == null || test(e.error)) {\n                    return onError(e);\n                  }\n                  throw e;\n                });\n    }\n\n","id":"catchError2()","line":"258"},{"returnType":{"name":"Future","refId":"dart.async/Future","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"name":"whenComplete","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"action","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"action"}],"kind":"method","comment":"\nRegister a function to be called when this future completes.\n\nThe [action] function is called when this future completes, whether it\ndoes so with a value or with an error.\n\nThis is the asynchronous equivalent of a \"finally\" block.\n\nThe future returned by this call, `f`, will complete the same way\nas this future unless an error occurs in the [action] call, or in\na [Future] returned by the [action] call. If the call to [action]\ndoes not return a future, its return value is ignored.\n\nIf the call to [action] throws, then `f` is completed with the\nthrown error.\n\nIf the call to [action] returns a [Future], `f2`, then completion of\n`f` is delayed until `f2` completes. If `f2` completes with\nan error, that will be the result of `f` too. The value of `f2` is always\nignored.\n\nThis method is equivalent to:\n\n    Future<T> whenComplete(action()) {\n      this.then((v) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) => v);\n                  return v\n                },\n                onError: (AsyncError e) {\n                  var f2 = action();\n                  if (f2 is Future) return f2.then((_) { throw e; });\n                  throw e;\n                });\n    }\n","id":"whenComplete1()","line":"297"},{"returnType":{"name":"Stream","refId":"dart.async/Stream","arguments":[{"name":"T","refId":"dart.async/Future/T"}]},"name":"asStream","kind":"method","comment":"\nCreates a [Stream] that sends [this]' completion value, data or error, to\nits subscribers. The stream closes after the completion value.\n","id":"asStream0()","line":"303"},{"name":"Future.of","children":[{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"function","children":[{"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"function"}],"kind":"constructor","comment":"\nCreates a future containing the result of calling [function].\n\nThe result of computing [:function():] is either a returned value or\na throw.\n\nIf a value is returned, it becomes the result of the created future.\n\nIf calling [function] throws, the created [Future] will be completed\nwith an async error containing the thrown value and a captured\nstacktrace.\n\nHowever, if the result of calling [function] is already an asynchronous\nresult, we treat it specially.\n\nIf the returned value is itself a [Future], completion of\nthe created future will wait until the returned future completes,\nand will then complete with the same result.\n\nIf a thrown value is an [AsyncError], it is used directly as the result\nof the created future.\n","id":"Future.of1()","line":"109"},{"name":"Future.immediate","children":[{"ref":{"name":"T","refId":"dart.async/Future/T"},"name":"value","kind":"param","id":"value"}],"kind":"constructor","comment":"\nA future whose value is available in the next event-loop iteration.\n\nIf [value] is not a [Future], using this constructor is equivalent\nto [:new Future.of(() => value):].\n\nSee [Completer] to create a Future and complete it later.\n","id":"Future.immediate1()","line":"126"},{"name":"Future.immediateError","children":[{"name":"error","kind":"param","id":"error"},{"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"constructor","comment":"\nA future that completes with an error in the next event-loop iteration.\n\nSee [Completer] to create a Future and complete it later.\n","id":"Future.immediateError2()","line":"133"},{"name":"Future.delayed","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"milliseconds","kind":"param","id":"milliseconds"},{"ref":{"name":"Function","refId":"dart.core/Function"},"name":"value","children":[{"returnType":{"name":"T","refId":"dart.async/Future/T"},"name":"Function","uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"value"}],"kind":"constructor","comment":"\nCreates a future that completes after a delay.\n\nThe future will be completed after [milliseconds] have passed with\nthe result of calling [value]. If [milliseconds] is 0, it completes at the\nearliest in the next event-loop iteration.\n\nIf calling [value] throws, the created future will complete with the\nerror.\n\nSee [Completer]s, for futures with values that are computed asynchronously.\n","id":"Future.delayed2()","line":"149"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/future.dart","kind":"class","comment":"\nA [Future] represents a delayed computation. It is used to obtain a not-yet\navailable value, or error, sometime in the future.  Receivers of a\n[Future] can register callbacks that handle the value or error once it is\navailable. For example:\n\n    Future<int> future = getFuture();\n    future.then((value) => handleValue(value))\n          .catchError((error) => handleError(error));\n\nA [Future] can be completed in two ways: with a value (\"the future succeeds\")\nor with an error (\"the future fails\"). Users can install callbacks for each\ncase. The result of registering a pair of callbacks is a new Future (the\n\"successor\") which in turn is completed with the result of invoking the\ncorresponding callback. The successor is completed with an error if the\ninvoked callback throws. For example:\n\n    Future<int> successor = future.then((int value) {\n        // Invoked when the future is completed with a value.\n        return 42;  // The successor is completed with the value 42.\n      },\n      onError: (AsyncError e) {\n        // Invoked when the future is completed with an error.\n        if (canHandle(e)) {\n          return 499;  // The successor is completed with the value 499.\n        } else {\n          throw e;  // The successor is completed with the error e.\n        }\n      });\n\nIf a future does not have a successor but is completed with an error, it\nforwards the error message to the global error-handler. This special casing\nmakes sure that no error is silently dropped. However, it also means that\nerror handlers should be installed early, so that they are present as soon\nas a future is completed with an error. The following example demonstrates\nthis potential bug:\n\n    var future = getFuture();\n    new Timer(5, (_) {\n      // The error-handler is only attached 5ms after the future has been\n      // received. If the future fails in the mean-time it will forward the\n      // error to the global error-handler, even though there is code (just\n      // below) to handle the error.\n      future.then((value) { useValue(value); },\n                  onError: (e) { handleError(e); });\n    });\n\nIn general we discourage registering the two callbacks at the same time, but\nprefer to use [then] with one argument (the value handler), and to use\n[catchError] for handling errors. The missing callbacks (the error-handler\nfor [then], and the value-handler for [catchError]), are automatically\nconfigured to \"forward\" the value/error. Separating value and error-handling\ninto separate registration calls usually leads to code that is easier to\nreason about. In fact it makes asynchronous code very similar to synchronous\ncode:\n\n    // Synchronous code.\n    try {\n      int value = foo();\n      return bar(value);\n    } catch (e) {\n      return 499;\n    }\n\n Equivalent asynchronous code, based on futures:\n\n    Future<int> future = foo();  // foo now returns a future.\n    future.then((int value) => bar(value))\n          .catchError((e) => 499);\n\nSimilar to the synchronous code, the error handler (registered with\n[catchError]) is handling the errors for exceptions coming from calls to\n'foo', as well as 'bar'. This would not be the case if the error-handler was\nregistered at the same time as the value-handler.\n\nFutures can have more than one callback-pairs registered. Each successor is\ntreated independently and is handled as if it was the only successor.\n","id":"Future","line":"86"},{"interfaces":[{"name":"StreamSink","refId":"dart.async/StreamSink","arguments":[{"name":"T","refId":"dart.async/CollectionSink/T"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"CollectionSink","children":[{"name":"add","children":[{"ref":{"name":"T","refId":"dart.async/CollectionSink/T"},"name":"value","kind":"param","id":"value"}],"kind":"method","id":"add1()","line":"31"},{"returnType":{"name":"void","refId":"void"},"name":"signalError","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"kind":"method","id":"signalError1()","line":"36"},{"returnType":{"name":"void","refId":"void"},"name":"close","kind":"method","id":"close0()","line":"41"},{"isFinal":true,"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"T","refId":"dart.async/CollectionSink/T"}]},"name":"collection","kind":"variable","id":"collection","line":"12"},{"isFinal":true,"ref":{"name":"_CollectionSinkCallback","refId":"dart.async/_CollectionSinkCallback"},"name":"_callback","isPrivate":true,"kind":"variable","id":"_callback","line":"13"},{"isFinal":true,"ref":{"name":"_CollectionSinkErrorCallback","refId":"dart.async/_CollectionSinkErrorCallback"},"name":"_errorCallback","isPrivate":true,"kind":"variable","id":"_errorCallback","line":"14"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isClosed","isPrivate":true,"kind":"variable","id":"_isClosed","line":"15"},{"name":"CollectionSink","children":[{"initializedField":{"name":"collection","refId":"dart.async/CollectionSink/collection"},"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"T","refId":"dart.async/CollectionSink/T"}]},"name":"collection","kind":"param","id":"collection"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onClose","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"T","refId":"dart.async/CollectionSink/T"}]},"name":"collection","uri":"sdk/lib/async/collection_sink.dart","kind":"param","id":"collection","line":"26"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onClose","line":"26"},{"ref":{"name":"Function","refId":"dart.core/Function"},"isNamed":true,"isOptional":true,"name":"onError","children":[{"returnType":{"name":"void","refId":"void"},"name":"Function","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","uri":"sdk/lib/async/collection_sink.dart","kind":"param","id":"error","line":"27"}],"uri":"sdk/lib/core/function.dart","kind":"functiontype","id":"Function","line":"13"}],"kind":"param","id":"onError","line":"27"}],"kind":"constructor","comment":"\nCreate a sink that stores incoming values in a collection.\n\nThe [collection] is the collection to add the values to.\n\nIf [callback] is provided, then it's called with the collection as arugment\nwhen the sink's [close] method is called.\n","id":"CollectionSink3()","line":"25"},{"name":"T","kind":"typeparam","id":"T"}],"uri":"sdk/lib/async/collection_sink.dart","kind":"class","comment":"StreamSink that stores incoming data in a collection. ","id":"CollectionSink","line":"11"},{"returnType":{"name":"void","refId":"void"},"name":"_CollectionSinkErrorCallback","children":[{"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"error","kind":"param","id":"error"}],"isPrivate":true,"uri":"sdk/lib/async/collection_sink.dart","kind":"typedef","id":"_CollectionSinkErrorCallback","line":"8"},{"returnType":{"name":"void","refId":"void"},"name":"_CollectionSinkCallback","children":[{"ref":{"name":"Collection","refId":"dart.core/Collection","arguments":[{"name":"T","refId":"dart.async/_CollectionSinkCallback/T"}]},"name":"collection","kind":"param","id":"collection"},{"name":"T","kind":"typeparam","id":"T"}],"isPrivate":true,"uri":"sdk/lib/async/collection_sink.dart","kind":"typedef","id":"_CollectionSinkCallback","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"AsyncError","children":[{"returnType":{"name":"void","refId":"void"},"name":"_writeOn","children":[{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"name":"buffer","kind":"param","id":"buffer"}],"isPrivate":true,"kind":"method","id":"_writeOn1()","line":"23"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"40"},{"name":"throwDelayed","kind":"method","id":"throwDelayed0()","line":"53"},{"isFinal":true,"name":"error","kind":"variable","id":"error","line":"12"},{"isFinal":true,"ref":{"name":"Object","refId":"dart.core/Object"},"name":"stackTrace","kind":"variable","id":"stackTrace","line":"14"},{"isFinal":true,"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"cause","kind":"variable","id":"cause","line":"16"},{"name":"AsyncError","children":[{"initializedField":{"name":"error","refId":"dart.async/AsyncError/error"},"name":"error","kind":"param","id":"error"},{"initializedField":{"name":"stackTrace","refId":"dart.async/AsyncError/stackTrace"},"ref":{"name":"Object","refId":"dart.core/Object"},"isOptional":true,"name":"stackTrace","kind":"param","id":"stackTrace"}],"kind":"constructor","id":"AsyncError2()","line":"20"},{"name":"AsyncError.withCause","children":[{"initializedField":{"name":"error","refId":"dart.async/AsyncError/error"},"name":"error","kind":"param","id":"error"},{"initializedField":{"name":"stackTrace","refId":"dart.async/AsyncError/stackTrace"},"ref":{"name":"Object","refId":"dart.core/Object"},"name":"stackTrace","kind":"param","id":"stackTrace"},{"initializedField":{"name":"cause","refId":"dart.async/AsyncError/cause"},"ref":{"name":"AsyncError","refId":"dart.async/AsyncError"},"name":"cause","kind":"param","id":"cause"}],"kind":"constructor","id":"AsyncError.withCause3()","line":"21"}],"uri":"sdk/lib/async/async_error.dart","kind":"class","comment":"\nError result of an asynchronous computation.\n","id":"AsyncError","line":"10"}],"uri":"sdk/lib/async/async.dart","kind":"library","id":"dart.async","line":"5"}