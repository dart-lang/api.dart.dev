{"name":"dart:utf","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"_validCodepoint","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"codepoint","kind":"param","id":"codepoint"}],"isPrivate":true,"uri":"sdk/lib/utf/utf32.dart","kind":"method","id":"_validCodepoint1()","line":"334"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf32leBom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nlittle-endian byte-order marker (BOM).\n","id":"hasUtf32leBom3()","line":"170"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf32beBom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nbig-endian byte-order marker (BOM).\n","id":"hasUtf32beBom3()","line":"158"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf32Bom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes","line":"149"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"149"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"149"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nbyte-order marker (BOM).\n","id":"hasUtf32Bom3()","line":"148"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf32le","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"name":"writeBOM","kind":"param","id":"writeBOM"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a list of UTF-32LE encoded bytes. By default, this method produces\nUTF-32BE bytes with no BOM.\n","id":"encodeUtf32le2()","line":"124"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf32be","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"name":"writeBOM","kind":"param","id":"writeBOM"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a list of UTF-32BE encoded bytes. By default, this method produces\nUTF-32BE bytes with no BOM.\n","id":"encodeUtf32be2()","line":"100"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf32","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a list of UTF-32 encoded bytes. This method prefixes the resulting\nbytes with a big-endian byte-order-marker.\n","id":"encodeUtf321()","line":"93"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf32le","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes","line":"84"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"84"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"84"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"84"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"85"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-32LE encoded bytes. The parameters\nallow an offset into a list of bytes (as int), limiting the length of the\nvalues be decoded and the ability of override the default Unicode\nreplacement character. Set the replacementCharacter to null to throw an\nArgumentError rather than replace the bad value.\n","id":"decodeUtf32le5()","line":"83"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf32be","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"71"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"72"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-32BE encoded bytes. The parameters\nallow an offset into a list of bytes (as int), limiting the length of the\nvalues be decoded and the ability of override the default Unicode\nreplacement character. Set the replacementCharacter to null to throw an\nArgumentError rather than replace the bad value.\n","id":"decodeUtf32be5()","line":"70"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf32","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"59"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-32 encoded bytes. The parameters\nallow an offset into a list of bytes (as int), limiting the length of the\nvalues be decoded and the ability of override the default Unicode\nreplacement character. Set the replacementCharacter to null to throw an\nArgumentError rather than replace the bad value.\n","id":"decodeUtf324()","line":"58"},{"returnType":{"name":"IterableUtf32Decoder","refId":"dart.utf/IterableUtf32Decoder"},"name":"decodeUtf32leAsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"44"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"44"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"45"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nDecodes the UTF-32LE bytes as an iterable. Thus, the consumer can only convert\nas much of the input as needed. This method strips a leading BOM by default,\nbut can be overridden by setting the optional parameter [stripBom] to false.\nSet the replacementCharacter to null to throw an ArgumentError\nrather than replace the bad value.\n","id":"decodeUtf32leAsIterable5()","line":"43"},{"returnType":{"name":"IterableUtf32Decoder","refId":"dart.utf/IterableUtf32Decoder"},"name":"decodeUtf32beAsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"29"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"30"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nDecodes the UTF-32BE bytes as an iterable. Thus, the consumer can only convert\nas much of the input as needed. This method strips a leading BOM by default,\nbut can be overridden by setting the optional parameter [stripBom] to false.\nSet the replacementCharacter to null to throw an ArgumentError\nrather than replace the bad value.\n","id":"decodeUtf32beAsIterable5()","line":"28"},{"returnType":{"name":"IterableUtf32Decoder","refId":"dart.utf/IterableUtf32Decoder"},"name":"decodeUtf32AsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"16"}],"uri":"sdk/lib/utf/utf32.dart","kind":"method","comment":"\nDecodes the UTF-32 bytes as an iterable. Thus, the consumer can only convert\nas much of the input as needed. Determines the byte order from the BOM,\nor uses big-endian as a default. This method always strips a leading BOM.\nSet the replacementCharacter to null to throw an ArgumentError\nrather than replace the bad value.\n","id":"decodeUtf32AsIterable4()","line":"14"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_stringToUtf16CodeUnits","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"}],"isPrivate":true,"uri":"sdk/lib/utf/utf16.dart","kind":"method","id":"_stringToUtf16CodeUnits1()","line":"180"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf16leBom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16EncodedBytes","kind":"param","id":"utf16EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nlittle-endian byte-order marker (BOM).\n","id":"hasUtf16leBom3()","line":"173"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf16beBom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16EncodedBytes","kind":"param","id":"utf16EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nbig-endian byte-order marker (BOM).\n","id":"hasUtf16beBom3()","line":"162"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"hasUtf16Bom","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nIdentifies whether a List of bytes starts (based on offset) with a\nbyte-order marker (BOM).\n","id":"hasUtf16Bom3()","line":"153"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf16le","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"name":"writeBOM","kind":"param","id":"writeBOM"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a list of UTF-16LE encoded bytes. By default, this method produces\nUTF-16LE bytes with no BOM.\n","id":"encodeUtf16le2()","line":"133"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf16be","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"false","isOptional":true,"name":"writeBOM","kind":"param","id":"writeBOM"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a list of UTF-16BE encoded bytes. By default, this method produces\nUTF-16BE bytes with no BOM.\n","id":"encodeUtf16be2()","line":"113"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf16","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a list of UTF-16 encoded bytes. This method prefixes the resulting\nbytes with a big-endian byte-order-marker.\n","id":"encodeUtf161()","line":"106"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf16le","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"94"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"95"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-16LE encoded bytes. This method\nstrips a leading BOM by default, but can be overridden by setting the\noptional parameter [stripBom] to false. Set the [replacementCodepoint] to\nnull to throw an ArgumentError rather than replace the bad value.\nThe default value for the [replacementCodepoint] is U+FFFD.\n","id":"decodeUtf16le5()","line":"93"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf16be","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"78"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"79"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-16BE encoded bytes. This method\nstrips a leading BOM by default, but can be overridden by setting the\noptional parameter [stripBom] to false. Set the [replacementCodepoint] to\nnull to throw an ArgumentError rather than replace the bad value.\nThe default value for the [replacementCodepoint] is U+FFFD.\n","id":"decodeUtf16be5()","line":"77"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf16","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"62"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nProduce a String from a sequence of UTF-16 encoded bytes. This method always\nstrips a leading BOM. Set the [replacementCodepoint] to null to throw  an\nArgumentError rather than replace the bad value. The default\nvalue for the [replacementCodepoint] is U+FFFD.\n","id":"decodeUtf164()","line":"61"},{"returnType":{"name":"IterableUtf16Decoder","refId":"dart.utf/IterableUtf16Decoder"},"name":"decodeUtf16leAsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"48"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"48"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nDecodes the UTF-16LE bytes as an iterable. Thus, the consumer can only\nconvert as much of the input as needed. This method strips a leading BOM by\ndefault, but can be overridden by setting the optional parameter [stripBom]\nto false. Set the [replacementCodepoint] to null to throw an\nArgumentError rather than replace the bad value. The default\nvalue for the [replacementCodepoint] is U+FFFD.\n","id":"decodeUtf16leAsIterable5()","line":"47"},{"returnType":{"name":"IterableUtf16Decoder","refId":"dart.utf/IterableUtf16Decoder"},"name":"decodeUtf16beAsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"32"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"32"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nDecodes the UTF-16BE bytes as an iterable. Thus, the consumer can only\nconvert as much of the input as needed. This method strips a leading BOM by\ndefault, but can be overridden by setting the optional parameter [stripBom]\nto false. Set the [replacementCodepoint] to null to throw an\nArgumentError rather than replace the bad value. The default\nvalue for the [replacementCodepoint] is U+FFFD.\n","id":"decodeUtf16beAsIterable5()","line":"31"},{"returnType":{"name":"IterableUtf16Decoder","refId":"dart.utf/IterableUtf16Decoder"},"name":"decodeUtf16AsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"16"}],"uri":"sdk/lib/utf/utf16.dart","kind":"method","comment":"\nDecodes the UTF-16 bytes as an iterable. Thus, the consumer can only convert\nas much of the input as needed. Determines the byte order from the BOM,\nor uses big-endian as a default. This method always strips a leading BOM.\nSet the [replacementCodepoint] to null to throw an ArgumentError\nrather than replace the bad value. The default value for\n[replacementCodepoint] is U+FFFD.\n","id":"decodeUtf16AsIterable4()","line":"15"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf8ToCodepoints","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf8EncodedBytes","kind":"param","id":"utf8EncodedBytes","line":"121"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"121"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"121"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"122"}],"uri":"sdk/lib/utf/utf8.dart","kind":"method","id":"utf8ToCodepoints4()","line":"120"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"codepointsToUtf8","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"codepoints","kind":"param","id":"codepoints","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"71"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"71"}],"uri":"sdk/lib/utf/utf8.dart","kind":"method","comment":"\nEncode code points as UTF-8 code units.\n","id":"codepointsToUtf83()","line":"70"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_addToEncoding","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"value","kind":"param","id":"value"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"buffer","kind":"param","id":"buffer"}],"isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"method","id":"_addToEncoding4()","line":"57"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"encodeUtf8","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"}],"uri":"sdk/lib/utf/utf8.dart","kind":"method","comment":"\nProduce a sequence of UTF-8 encoded bytes from the provided string.\n","id":"encodeUtf81()","line":"54"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"decodeUtf8","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"45"}],"uri":"sdk/lib/utf/utf8.dart","kind":"method","comment":"\nProduce a String from a List of UTF-8 encoded bytes. The parameters\ncan set an offset into a list of bytes (as int), limit the length of the\nvalues to be decoded, and override the default Unicode replacement character.\nSet the replacementCharacter to null to throw an ArgumentError\nrather than replace the bad value.\n","id":"decodeUtf84()","line":"44"},{"returnType":{"name":"IterableUtf8Decoder","refId":"dart.utf/IterableUtf8Decoder"},"name":"decodeUtf8AsIterable","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"33"}],"uri":"sdk/lib/utf/utf8.dart","kind":"method","comment":"\nDecodes the UTF-8 bytes as an iterable. Thus, the consumer can only convert\nas much of the input as needed. Set the replacementCharacter to null to\nthrow an ArgumentError rather than replace the bad value.\n","id":"decodeUtf8AsIterable4()","line":"31"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_utf16CodeUnitsToCodepoints","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16CodeUnits","kind":"param","id":"utf16CodeUnits","line":"93"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"93"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"93"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"94"}],"isPrivate":true,"uri":"sdk/lib/utf/utf_core.dart","kind":"method","comment":"\nDecodes the utf16 codeunits to codepoints.\n","id":"_utf16CodeUnitsToCodepoints4()","line":"92"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_codepointsToUtf16CodeUnits","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"codepoints","kind":"param","id":"codepoints","line":"48"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"49"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"50"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"51"}],"isPrivate":true,"uri":"sdk/lib/utf/utf_core.dart","kind":"method","comment":"\nEncode code points as UTF16 code units.\n","id":"_codepointsToUtf16CodeUnits4()","line":"47"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"codepointsToString","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"codepoints","kind":"param","id":"codepoints"}],"uri":"sdk/lib/utf/utf_core.dart","kind":"method","comment":"\nGenerate a string from the provided Unicode codepoints.\n","id":"codepointsToString1()","line":"20"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"stringToCodepoints","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"str","kind":"param","id":"str"}],"uri":"sdk/lib/utf/utf_core.dart","kind":"method","comment":"\nProvide a list of Unicode codepoints for a given string.\n","id":"stringToCodepoints1()","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_SUBSEQUENT_BYTE_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_SUBSEQUENT_BYTE_BASE","line":"24"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_BOUND_EXCL","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_BOUND_EXCL","line":"23"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_FOUR_MASK","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_FOUR_MASK","line":"21"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_THREE_MASK","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_THREE_MASK","line":"20"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_TWO_MASK","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_TWO_MASK","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_SIX_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_SIX_BASE","line":"17"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_FIVE_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_FIVE_BASE","line":"16"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_FOUR_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_FOUR_BASE","line":"15"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_THREE_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_THREE_BASE","line":"14"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_FIRST_BYTE_OF_TWO_BASE","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_FIRST_BYTE_OF_TWO_BASE","line":"13"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_LO_SIX_BIT_MASK","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_LO_SIX_BIT_MASK","line":"11"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_THREE_BYTE_MAX","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_THREE_BYTE_MAX","line":"9"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_TWO_BYTE_MAX","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_TWO_BYTE_MAX","line":"8"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_UTF8_ONE_BYTE_MAX","isPrivate":true,"uri":"sdk/lib/utf/utf8.dart","kind":"variable","id":"_UTF8_ONE_BYTE_MAX","line":"7"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_LO_MASK","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_LO_MASK","line":"42"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_HI_MASK","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_HI_MASK","line":"41"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_SURROGATE_UNIT_1_BASE","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_SURROGATE_UNIT_1_BASE","line":"40"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_SURROGATE_UNIT_0_BASE","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_SURROGATE_UNIT_0_BASE","line":"39"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_OFFSET","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_OFFSET","line":"38"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_RESERVED_HI","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_RESERVED_HI","line":"37"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF16_RESERVED_LO","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF16_RESERVED_LO","line":"36"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_PLANE_ONE_MAX","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_PLANE_ONE_MAX","line":"35"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_VALID_RANGE_MAX","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_VALID_RANGE_MAX","line":"34"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_BYTE_ONE_MASK","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_BYTE_ONE_MASK","line":"33"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_BYTE_ZERO_MASK","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_BYTE_ZERO_MASK","line":"32"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF_BOM_HI","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF_BOM_HI","line":"30"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_UTF_BOM_LO","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_UTF_BOM_LO","line":"29"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_BOM","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_BOM","line":"28"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","uri":"sdk/lib/utf/utf_core.dart","kind":"variable","id":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","line":"27"},{"superclass":{"name":"Utf32BytesDecoder","refId":"dart.utf/Utf32BytesDecoder"},"name":"Utf32leBytesDecoder","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"321"},{"name":"Utf32leBytesDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"311"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"311"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"312"}],"kind":"constructor","id":"Utf32leBytesDecoder5()","line":"310"}],"uri":"sdk/lib/utf/utf32.dart","kind":"class","comment":"\nConvert UTF-32BE encoded bytes to codepoints by grouping 4 bytes\nto produce the unicode codepoint.\n","id":"Utf32leBytesDecoder","line":"309"},{"superclass":{"name":"Utf32BytesDecoder","refId":"dart.utf/Utf32BytesDecoder"},"name":"Utf32beBytesDecoder","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"292"},{"name":"Utf32beBytesDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"282"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"282"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"283"}],"kind":"constructor","id":"Utf32beBytesDecoder5()","line":"281"}],"uri":"sdk/lib/utf/utf32.dart","kind":"class","comment":"\nConvert UTF-32BE encoded bytes to codepoints by grouping 4 bytes\nto produce the unicode codepoint.\n","id":"Utf32beBytesDecoder","line":"280"},{"interfaces":[{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Utf32BytesDecoder","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"decodeRest","kind":"method","id":"decodeRest0()","line":"224"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"235"},{"returnType":{"name":"void","refId":"void"},"name":"backup","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"by","kind":"param","id":"by"}],"kind":"method","id":"backup1()","line":"263"},{"returnType":{"name":"void","refId":"void"},"name":"skip","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"count","kind":"param","id":"count"}],"kind":"method","id":"skip1()","line":"269"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"273"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"233"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"position","kind":"property","id":"position","line":"261"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"remaining","kind":"property","id":"remaining","line":"267"},{"isFinal":true,"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf32EncodedBytesIterator","kind":"variable","id":"utf32EncodedBytesIterator","line":"199"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"200"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"201"},{"name":"Utf32BytesDecoder._fromListRangeIterator","children":[{"initializedField":{"name":"utf32EncodedBytesIterator","refId":"dart.utf/Utf32BytesDecoder/utf32EncodedBytesIterator"},"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf32EncodedBytesIterator","kind":"param","id":"utf32EncodedBytesIterator","line":"204"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf32BytesDecoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"204"}],"isPrivate":true,"kind":"constructor","id":"Utf32BytesDecoder._fromListRangeIterator2()","line":"203"},{"name":"Utf32BytesDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf32EncodedBytes","kind":"param","id":"utf32EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"207"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"207"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"208"}],"kind":"constructor","id":"Utf32BytesDecoder4()","line":"206"}],"uri":"sdk/lib/utf/utf32.dart","kind":"class","comment":"\nAbstrace parent class converts encoded bytes to codepoints.\n","id":"Utf32BytesDecoder","line":"198"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"IterableUtf32Decoder","children":[{"ref":{"name":"Utf32BytesDecoder","refId":"dart.utf/Utf32BytesDecoder"},"name":"iterator","kind":"property","id":"iterator","line":"192"},{"isFinal":true,"ref":{"name":"Utf32BytesDecoderProvider","refId":"dart.utf/Utf32BytesDecoderProvider"},"name":"codeunitsProvider","kind":"variable","id":"codeunitsProvider","line":"188"},{"name":"IterableUtf32Decoder._","children":[{"initializedField":{"name":"codeunitsProvider","refId":"dart.utf/IterableUtf32Decoder/codeunitsProvider"},"ref":{"name":"Utf32BytesDecoderProvider","refId":"dart.utf/Utf32BytesDecoderProvider"},"name":"codeunitsProvider","kind":"param","id":"codeunitsProvider"}],"isPrivate":true,"kind":"constructor","id":"IterableUtf32Decoder._1()","line":"190"}],"uri":"sdk/lib/utf/utf32.dart","kind":"class","comment":"\nReturn type of [decodeUtf32AsIterable] and variants. The Iterable type\nprovides an iterator on demand and the iterator will only translate bytes\nas requested by the user of the iterator. (Note: results are not cached.)\n","id":"IterableUtf32Decoder","line":"187"},{"returnType":{"name":"Utf32BytesDecoder","refId":"dart.utf/Utf32BytesDecoder"},"name":"Utf32BytesDecoderProvider","uri":"sdk/lib/utf/utf32.dart","kind":"typedef","id":"Utf32BytesDecoderProvider","line":"178"},{"superclass":{"name":"Utf16BytesToCodeUnitsDecoder","refId":"dart.utf/Utf16BytesToCodeUnitsDecoder"},"name":"Utf16leBytesToCodeUnitsDecoder","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"330"},{"name":"Utf16leBytesToCodeUnitsDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16EncodedBytes","kind":"param","id":"utf16EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"320"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"320"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"320"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"321"}],"kind":"constructor","id":"Utf16leBytesToCodeUnitsDecoder5()","line":"319"}],"uri":"sdk/lib/utf/utf16.dart","kind":"class","comment":"\nConvert UTF-16LE encoded bytes to utf16 code units by grouping 1-2 bytes\nto produce the code unit (0-(2^16)-1).\n","id":"Utf16leBytesToCodeUnitsDecoder","line":"318"},{"superclass":{"name":"Utf16BytesToCodeUnitsDecoder","refId":"dart.utf/Utf16BytesToCodeUnitsDecoder"},"name":"Utf16beBytesToCodeUnitsDecoder","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"305"},{"name":"Utf16beBytesToCodeUnitsDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16EncodedBytes","kind":"param","id":"utf16EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"295"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"295"},{"ref":{"name":"bool","refId":"dart.core/bool"},"defaultValue":"true","isOptional":true,"name":"stripBom","kind":"param","id":"stripBom","line":"295"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"296"}],"kind":"constructor","id":"Utf16beBytesToCodeUnitsDecoder5()","line":"294"}],"uri":"sdk/lib/utf/utf16.dart","kind":"class","comment":"\nConvert UTF-16BE encoded bytes to utf16 code units by grouping 1-2 bytes\nto produce the code unit (0-(2^16)-1).\n","id":"Utf16beBytesToCodeUnitsDecoder","line":"293"},{"interfaces":[{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Utf16BytesToCodeUnitsDecoder","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"decodeRest","kind":"method","comment":"\nProvides a fast way to decode the rest of the source bytes in a single\ncall. This method trades memory for improved speed in that it potentially\nover-allocates the List containing results.\n","id":"decodeRest0()","line":"240"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"257"},{"returnType":{"name":"void","refId":"void"},"name":"backup","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"by","kind":"param","id":"by"}],"kind":"method","id":"backup1()","line":"276"},{"returnType":{"name":"void","refId":"void"},"name":"skip","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"count","kind":"param","id":"count"}],"kind":"method","id":"skip1()","line":"282"},{"returnType":{"name":"int","refId":"dart.core/int"},"name":"decode","kind":"method","id":"decode0()","line":"286"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"255"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"position","kind":"property","id":"position","line":"274"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"remaining","kind":"property","id":"remaining","line":"280"},{"isFinal":true,"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf16EncodedBytesIterator","kind":"variable","id":"utf16EncodedBytesIterator","line":"210"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"211"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"212"},{"name":"Utf16BytesToCodeUnitsDecoder._fromListRangeIterator","children":[{"initializedField":{"name":"utf16EncodedBytesIterator","refId":"dart.utf/Utf16BytesToCodeUnitsDecoder/utf16EncodedBytesIterator"},"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf16EncodedBytesIterator","kind":"param","id":"utf16EncodedBytesIterator","line":"215"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf16BytesToCodeUnitsDecoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"215"}],"isPrivate":true,"kind":"constructor","id":"Utf16BytesToCodeUnitsDecoder._fromListRangeIterator2()","line":"214"},{"name":"Utf16BytesToCodeUnitsDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16EncodedBytes","kind":"param","id":"utf16EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset","line":"218"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length","line":"218"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"219"}],"kind":"constructor","id":"Utf16BytesToCodeUnitsDecoder4()","line":"217"}],"uri":"sdk/lib/utf/utf16.dart","kind":"class","comment":"\nConvert UTF-16 encoded bytes to UTF-16 code units by grouping 1-2 bytes\nto produce the code unit (0-(2^16)-1). Relies on BOM to determine\nendian-ness, and defaults to BE.\n","id":"Utf16BytesToCodeUnitsDecoder","line":"209"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"IterableUtf16Decoder","children":[{"ref":{"name":"Utf16CodeUnitDecoder","refId":"dart.utf/Utf16CodeUnitDecoder"},"name":"iterator","kind":"property","id":"iterator","line":"199"},{"isFinal":true,"ref":{"name":"_CodeUnitsProvider","refId":"dart.utf/_CodeUnitsProvider"},"name":"codeunitsProvider","kind":"variable","id":"codeunitsProvider","line":"194"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"195"},{"name":"IterableUtf16Decoder._","children":[{"initializedField":{"name":"codeunitsProvider","refId":"dart.utf/IterableUtf16Decoder/codeunitsProvider"},"ref":{"name":"_CodeUnitsProvider","refId":"dart.utf/_CodeUnitsProvider"},"name":"codeunitsProvider","kind":"param","id":"codeunitsProvider"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/IterableUtf16Decoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint"}],"isPrivate":true,"kind":"constructor","id":"IterableUtf16Decoder._2()","line":"197"}],"uri":"sdk/lib/utf/utf16.dart","kind":"class","comment":"\nReturn type of [decodeUtf16AsIterable] and variants. The Iterable type\nprovides an iterator on demand and the iterator will only translate bytes\nas requested by the user of the iterator. (Note: results are not cached.)\n","id":"IterableUtf16Decoder","line":"193"},{"returnType":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"_CodeUnitsProvider","isPrivate":true,"uri":"sdk/lib/utf/utf16.dart","kind":"typedef","id":"_CodeUnitsProvider","line":"184"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"int","refId":"dart.core/int"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Utf8Decoder","children":[{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"decodeRest","kind":"method","comment":"Decode the remaininder of the characters in this decoder\ninto a [List<int>].\n","id":"decodeRest0()","line":"175"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"192"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"190"},{"isFinal":true,"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf8EncodedBytesIterator","kind":"variable","id":"utf8EncodedBytesIterator","line":"156"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"157"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"158"},{"name":"Utf8Decoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf8EncodedBytes","kind":"param","id":"utf8EncodedBytes"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf8Decoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"161"}],"kind":"constructor","id":"Utf8Decoder4()","line":"160"},{"name":"Utf8Decoder._fromListRangeIterator","children":[{"ref":{"name":"_ListRange","refId":"dart.utf/_ListRange"},"name":"source","kind":"param","id":"source"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf8Decoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"168"}],"isPrivate":true,"kind":"constructor","id":"Utf8Decoder._fromListRangeIterator2()","line":"167"}],"uri":"sdk/lib/utf/utf8.dart","kind":"class","comment":"\nProvides an iterator of Unicode codepoints from UTF-8 encoded bytes. The\nparameters can set an offset into a list of bytes (as int), limit the length\nof the values to be decoded, and override the default Unicode replacement\ncharacter. Set the replacementCharacter to null to throw an\nArgumentError rather than replace the bad value. The return value\nfrom this method can be used as an Iterable (e.g. in a for-loop).\n","id":"Utf8Decoder","line":"155"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"IterableUtf8Decoder","children":[{"ref":{"name":"Utf8Decoder","refId":"dart.utf/Utf8Decoder"},"name":"iterator","kind":"property","id":"iterator","line":"143"},{"isFinal":true,"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"variable","id":"bytes","line":"135"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"offset","kind":"variable","id":"offset","line":"136"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"variable","id":"length","line":"137"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"138"},{"name":"IterableUtf8Decoder","children":[{"initializedField":{"name":"bytes","refId":"dart.utf/IterableUtf8Decoder/bytes"},"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"initializedField":{"name":"offset","refId":"dart.utf/IterableUtf8Decoder/offset"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"initializedField":{"name":"length","refId":"dart.utf/IterableUtf8Decoder/length"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"null","isOptional":true,"name":"length","kind":"param","id":"length"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/IterableUtf8Decoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"141"}],"kind":"constructor","id":"IterableUtf8Decoder4()","line":"140"}],"uri":"sdk/lib/utf/utf8.dart","kind":"class","comment":"\nReturn type of [decodeUtf8AsIterable] and variants. The Iterable type\nprovides an iterator on demand and the iterator will only translate bytes\nas requested by the user of the iterator. (Note: results are not cached.)\n","id":"IterableUtf8Decoder","line":"134"},{"interfaces":[{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_ListRangeIteratorImpl","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"243"},{"returnType":{"name":"void","refId":"void"},"name":"backup","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"by","kind":"param","id":"by"}],"kind":"method","id":"backup1()","line":"247"},{"returnType":{"name":"void","refId":"void"},"name":"skip","children":[{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"1","isOptional":true,"name":"count","kind":"param","id":"count"}],"kind":"method","id":"skip1()","line":"253"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"241"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"position","kind":"property","id":"position","line":"245"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"remaining","kind":"property","id":"remaining","line":"251"},{"isFinal":true,"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"234"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_offset","isPrivate":true,"kind":"variable","id":"_offset","line":"235"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_end","isPrivate":true,"kind":"variable","id":"_end","line":"236"},{"name":"_ListRangeIteratorImpl","children":[{"initializedField":{"name":"_source","refId":"dart.utf/_ListRangeIteratorImpl/_source"},"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_source","isPrivate":true,"kind":"param","id":"_source"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"offset","kind":"param","id":"offset"},{"initializedField":{"name":"_end","refId":"dart.utf/_ListRangeIteratorImpl/_end"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_end","isPrivate":true,"kind":"param","id":"_end"}],"kind":"constructor","id":"_ListRangeIteratorImpl3()","line":"238"}],"isPrivate":true,"uri":"sdk/lib/utf/utf_core.dart","kind":"class","id":"_ListRangeIteratorImpl","line":"233"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"int","refId":"dart.core/int"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_ListRangeIterator","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"225"},{"returnType":{"name":"void","refId":"void"},"name":"backup","children":[{"isOptional":true,"name":"by","kind":"param","id":"by"}],"kind":"method","id":"backup1()","line":"228"},{"returnType":{"name":"void","refId":"void"},"name":"skip","children":[{"isOptional":true,"name":"count","kind":"param","id":"count"}],"kind":"method","id":"skip1()","line":"230"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"226"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"position","kind":"property","id":"position","line":"227"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"remaining","kind":"property","id":"remaining","line":"229"}],"isPrivate":true,"uri":"sdk/lib/utf/utf_core.dart","kind":"class","comment":"\nThe _ListRangeIterator provides more capabilities than a standard iterator,\nincluding the ability to get the current position, count remaining items,\nand move forward/backward within the iterator.\n","id":"_ListRangeIterator","line":"224"},{"superclass":{"name":"Iterable","refId":"dart.core/Iterable"},"name":"_ListRange","children":[{"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"iterator","kind":"property","id":"iterator","line":"213"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"length","kind":"property","id":"length","line":"216"},{"isFinal":true,"ref":{"name":"List","refId":"dart.core/List"},"name":"_source","isPrivate":true,"kind":"variable","id":"_source","line":"194"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_offset","isPrivate":true,"kind":"variable","id":"_offset","line":"195"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_length","isPrivate":true,"kind":"variable","id":"_length","line":"196"},{"name":"_ListRange","children":[{"name":"source","kind":"param","id":"source"},{"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"isOptional":true,"name":"length","kind":"param","id":"length"}],"kind":"constructor","id":"_ListRange3()","line":"198"}],"isPrivate":true,"uri":"sdk/lib/utf/utf_core.dart","kind":"class","comment":"\n_ListRange in an internal type used to create a lightweight Interable on a\nrange within a source list. DO NOT MODIFY the underlying list while\niterating over it. The results of doing so are undefined.\n","id":"_ListRange","line":"193"},{"interfaces":[{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"int","refId":"dart.core/int"}]}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"Utf16CodeUnitDecoder","children":[{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"moveNext","kind":"method","id":"moveNext0()","line":"138"},{"ref":{"name":"Iterator","refId":"dart.core/Iterator","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"iterator","kind":"property","id":"iterator","line":"134"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"current","kind":"property","id":"current","line":"136"},{"isFinal":true,"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf16CodeUnitIterator","kind":"variable","id":"utf16CodeUnitIterator","line":"120"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"variable","id":"replacementCodepoint","line":"121"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_current","isPrivate":true,"kind":"variable","id":"_current","line":"122"},{"name":"Utf16CodeUnitDecoder","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"utf16CodeUnits","kind":"param","id":"utf16CodeUnits"},{"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"0","isOptional":true,"name":"offset","kind":"param","id":"offset"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"length","kind":"param","id":"length"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf16CodeUnitDecoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"defaultValue":"UNICODE_REPLACEMENT_CHARACTER_CODEPOINT","isOptional":true,"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"125"}],"kind":"constructor","id":"Utf16CodeUnitDecoder4()","line":"124"},{"name":"Utf16CodeUnitDecoder.fromListRangeIterator","children":[{"initializedField":{"name":"utf16CodeUnitIterator","refId":"dart.utf/Utf16CodeUnitDecoder/utf16CodeUnitIterator"},"ref":{"name":"_ListRangeIterator","refId":"dart.utf/_ListRangeIterator"},"name":"utf16CodeUnitIterator","kind":"param","id":"utf16CodeUnitIterator","line":"131"},{"initializedField":{"name":"replacementCodepoint","refId":"dart.utf/Utf16CodeUnitDecoder/replacementCodepoint"},"ref":{"name":"int","refId":"dart.core/int"},"name":"replacementCodepoint","kind":"param","id":"replacementCodepoint","line":"132"}],"kind":"constructor","id":"Utf16CodeUnitDecoder.fromListRangeIterator2()","line":"130"}],"uri":"sdk/lib/utf/utf_core.dart","kind":"class","comment":"\nAn Iterator<int> of codepoints built on an Iterator of UTF-16 code units.\nThe parameters can override the default Unicode replacement character. Set\nthe replacementCharacter to null to throw an ArgumentError\nrather than replace the bad value.\n","id":"Utf16CodeUnitDecoder","line":"119"}],"uri":"sdk/lib/utf/utf.dart","kind":"library","id":"dart.utf","line":"5"}