{"name":"dart:crypto","children":[{"returnType":{"name":"int","refId":"dart.core/int"},"name":"_rotl32","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"val","kind":"param","id":"val"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"shift","kind":"param","id":"shift"}],"isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"method","id":"_rotl322()","line":"16"},{"name":"_BYTES_PER_WORD","isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"variable","id":"_BYTES_PER_WORD","line":"11"},{"name":"_BITS_PER_BYTE","isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"variable","id":"_BITS_PER_BYTE","line":"10"},{"name":"_MASK_32","isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"variable","id":"_MASK_32","line":"9"},{"name":"_MASK_8","isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"variable","id":"_MASK_8","line":"8"},{"interfaces":[{"name":"SHA256","refId":"dart.crypto/SHA256"}],"superclass":{"name":"_HashBase","refId":"dart.crypto/_HashBase"},"name":"_SHA256","children":[{"returnType":{"name":"SHA256","refId":"dart.crypto/SHA256"},"name":"newInstance","kind":"method","id":"newInstance0()","line":"24"},{"name":"_rotr32","children":[{"name":"n","kind":"param","id":"n"},{"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_rotr322()","line":"46"},{"name":"_ch","children":[{"name":"x","kind":"param","id":"x"},{"name":"y","kind":"param","id":"y"},{"name":"z","kind":"param","id":"z"}],"isPrivate":true,"kind":"method","id":"_ch3()","line":"47"},{"name":"_maj","children":[{"name":"x","kind":"param","id":"x"},{"name":"y","kind":"param","id":"y"},{"name":"z","kind":"param","id":"z"}],"isPrivate":true,"kind":"method","id":"_maj3()","line":"48"},{"name":"_bsig0","children":[{"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_bsig01()","line":"49"},{"name":"_bsig1","children":[{"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_bsig11()","line":"50"},{"name":"_ssig0","children":[{"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_ssig01()","line":"51"},{"name":"_ssig1","children":[{"name":"x","kind":"param","id":"x"}],"isPrivate":true,"kind":"method","id":"_ssig11()","line":"52"},{"returnType":{"name":"void","refId":"void"},"name":"_updateHash","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"M","kind":"param","id":"M"}],"isPrivate":true,"kind":"method","id":"_updateHash1()","line":"56"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"isStatic":true,"name":"_K","isPrivate":true,"kind":"variable","id":"_K","line":"30"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_w","isPrivate":true,"kind":"variable","id":"_w","line":"104"},{"name":"_SHA256","kind":"constructor","id":"_SHA2560()","line":"10"}],"isPrivate":true,"uri":"sdk/lib/crypto/sha256.dart","kind":"class","id":"_SHA256","line":"8"},{"interfaces":[{"name":"SHA1","refId":"dart.crypto/SHA1"}],"superclass":{"name":"_HashBase","refId":"dart.crypto/_HashBase"},"name":"_SHA1","children":[{"returnType":{"name":"SHA1","refId":"dart.crypto/SHA1"},"name":"newInstance","kind":"method","id":"newInstance0()","line":"19"},{"returnType":{"name":"void","refId":"void"},"name":"_updateHash","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"m","kind":"param","id":"m"}],"isPrivate":true,"kind":"method","id":"_updateHash1()","line":"25"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_w","isPrivate":true,"kind":"variable","id":"_w","line":"66"},{"name":"_SHA1","kind":"constructor","id":"_SHA10()","line":"10"}],"isPrivate":true,"uri":"sdk/lib/crypto/sha1.dart","kind":"class","id":"_SHA1","line":"8"},{"interfaces":[{"name":"MD5","refId":"dart.crypto/MD5"}],"superclass":{"name":"_HashBase","refId":"dart.crypto/_HashBase"},"name":"_MD5","children":[{"returnType":{"name":"MD5","refId":"dart.crypto/MD5"},"name":"newInstance","kind":"method","id":"newInstance0()","line":"17"},{"returnType":{"name":"void","refId":"void"},"name":"_updateHash","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"m","kind":"param","id":"m"}],"isPrivate":true,"kind":"method","id":"_updateHash1()","line":"42"},{"isStatic":true,"name":"_k","isPrivate":true,"kind":"variable","id":"_k","line":"21"},{"isStatic":true,"name":"_r","isPrivate":true,"kind":"variable","id":"_r","line":"34"},{"name":"_MD5","kind":"constructor","id":"_MD50()","line":"9"}],"isPrivate":true,"uri":"sdk/lib/crypto/md5.dart","kind":"class","id":"_MD5","line":"8"},{"interfaces":[{"name":"HMAC","refId":"dart.crypto/HMAC"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_HMAC","children":[{"name":"add","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"data","kind":"param","id":"data"}],"kind":"method","id":"add1()","line":"12"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"close","kind":"method","id":"close0()","line":"61"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"verify","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"digest","kind":"param","id":"digest"}],"kind":"method","id":"verify1()","line":"66"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"digest","kind":"property","id":"digest","line":"17"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_isClosed","isPrivate":true,"kind":"variable","id":"_isClosed","line":"8"},{"ref":{"name":"Hash","refId":"dart.crypto/Hash"},"name":"_hash","isPrivate":true,"kind":"variable","id":"_hash","line":"81"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_key","isPrivate":true,"kind":"variable","id":"_key","line":"82"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_message","isPrivate":true,"kind":"variable","id":"_message","line":"83"},{"name":"_HMAC","children":[{"initializedField":{"name":"_hash","refId":"dart.crypto/_HMAC/_hash"},"ref":{"name":"Hash","refId":"dart.crypto/Hash"},"name":"_hash","isPrivate":true,"kind":"param","id":"_hash"},{"initializedField":{"name":"_key","refId":"dart.crypto/_HMAC/_key"},"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_key","isPrivate":true,"kind":"param","id":"_key"}],"kind":"constructor","id":"_HMAC2()","line":"10"}],"isPrivate":true,"uri":"sdk/lib/crypto/hmac.dart","kind":"class","id":"_HMAC","line":"7"},{"interfaces":[{"name":"Hash","refId":"dart.crypto/Hash"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_HashBase","children":[{"name":"add","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"data","kind":"param","id":"data"}],"kind":"method","id":"add1()","line":"34"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"close","kind":"method","id":"close0()","line":"45"},{"name":"newInstance","kind":"method","id":"newInstance0()","line":"62"},{"name":"_updateHash","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"m","kind":"param","id":"m"}],"isPrivate":true,"kind":"method","id":"_updateHash1()","line":"65"},{"name":"_add32","children":[{"name":"x","kind":"param","id":"x"},{"name":"y","kind":"param","id":"y"}],"isPrivate":true,"kind":"method","id":"_add322()","line":"68"},{"name":"_roundUp","children":[{"name":"val","kind":"param","id":"val"},{"name":"n","kind":"param","id":"n"}],"isPrivate":true,"kind":"method","id":"_roundUp2()","line":"69"},{"name":"_resultAsBytes","isPrivate":true,"kind":"method","id":"_resultAsBytes0()","line":"72"},{"name":"_bytesToChunk","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"data","kind":"param","id":"data"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"dataIndex","kind":"param","id":"dataIndex"}],"isPrivate":true,"kind":"method","id":"_bytesToChunk2()","line":"81"},{"name":"_wordToBytes","children":[{"ref":{"name":"int","refId":"dart.core/int"},"name":"word","kind":"param","id":"word"}],"isPrivate":true,"kind":"method","id":"_wordToBytes1()","line":"99"},{"name":"_iterate","isPrivate":true,"kind":"method","id":"_iterate0()","line":"110"},{"name":"_finalizeData","isPrivate":true,"kind":"method","id":"_finalizeData0()","line":"126"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"blockSize","kind":"property","id":"blockSize","line":"57"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_chunkSizeInWords","isPrivate":true,"kind":"variable","id":"_chunkSizeInWords","line":"147"},{"isFinal":true,"ref":{"name":"int","refId":"dart.core/int"},"name":"_digestSizeInWords","isPrivate":true,"kind":"variable","id":"_digestSizeInWords","line":"148"},{"isFinal":true,"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_bigEndianWords","isPrivate":true,"kind":"variable","id":"_bigEndianWords","line":"149"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_lengthInBytes","isPrivate":true,"kind":"variable","id":"_lengthInBytes","line":"150"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_pendingData","isPrivate":true,"kind":"variable","id":"_pendingData","line":"151"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_currentChunk","isPrivate":true,"kind":"variable","id":"_currentChunk","line":"152"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"_h","isPrivate":true,"kind":"variable","id":"_h","line":"153"},{"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_digestCalled","isPrivate":true,"kind":"variable","id":"_digestCalled","line":"154"},{"name":"_HashBase","children":[{"initializedField":{"name":"_chunkSizeInWords","refId":"dart.crypto/_HashBase/_chunkSizeInWords"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_chunkSizeInWords","isPrivate":true,"kind":"param","id":"_chunkSizeInWords"},{"initializedField":{"name":"_digestSizeInWords","refId":"dart.crypto/_HashBase/_digestSizeInWords"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_digestSizeInWords","isPrivate":true,"kind":"param","id":"_digestSizeInWords","line":"26"},{"initializedField":{"name":"_bigEndianWords","refId":"dart.crypto/_HashBase/_bigEndianWords"},"ref":{"name":"bool","refId":"dart.core/bool"},"name":"_bigEndianWords","isPrivate":true,"kind":"param","id":"_bigEndianWords","line":"27"}],"kind":"constructor","id":"_HashBase3()","line":"25"}],"isPrivate":true,"uri":"sdk/lib/crypto/hash_utils.dart","kind":"class","id":"_HashBase","line":"24"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"_CryptoUtils","children":[{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"bytesToHex","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"}],"kind":"method","id":"bytesToHex1()","line":"27"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"bytesToBase64","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"lineLength","kind":"param","id":"lineLength"}],"kind":"method","id":"bytesToBase642()","line":"35"}],"isPrivate":true,"uri":"sdk/lib/crypto/crypto_utils.dart","kind":"class","id":"_CryptoUtils","line":"26"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"_LineWrappingStringBuffer","children":[{"returnType":{"name":"void","refId":"void"},"name":"add","children":[{"ref":{"name":"String","refId":"dart.core/String"},"name":"s","kind":"param","id":"s"}],"kind":"method","id":"add1()","line":"10"},{"returnType":{"name":"String","refId":"dart.core/String"},"name":"toString","kind":"method","id":"toString0()","line":"19"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_lineLength","isPrivate":true,"kind":"variable","id":"_lineLength","line":"21"},{"ref":{"name":"StringBuffer","refId":"dart.core/StringBuffer"},"name":"_sb","isPrivate":true,"kind":"variable","id":"_sb","line":"22"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"_currentLineLength","isPrivate":true,"kind":"variable","id":"_currentLineLength","line":"23"},{"name":"_LineWrappingStringBuffer","children":[{"initializedField":{"name":"_lineLength","refId":"dart.crypto/_LineWrappingStringBuffer/_lineLength"},"ref":{"name":"int","refId":"dart.core/int"},"name":"_lineLength","isPrivate":true,"kind":"param","id":"_lineLength"}],"kind":"constructor","id":"_LineWrappingStringBuffer1()","line":"8"}],"isPrivate":true,"uri":"sdk/lib/crypto/crypto_utils.dart","kind":"class","id":"_LineWrappingStringBuffer","line":"7"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"name":"HashException","children":[{"name":"toString","kind":"method","id":"toString0()","line":"150"},{"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"variable","id":"message","line":"151"},{"name":"HashException","children":[{"initializedField":{"name":"message","refId":"dart.crypto/HashException/message"},"ref":{"name":"String","refId":"dart.core/String"},"name":"message","kind":"param","id":"message"}],"kind":"constructor","id":"HashException1()","line":"149"}],"kind":"class","comment":"\nHashExceptions are thrown on invalid use of a Hash\nobject.\n","id":"HashException","line":"148"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"CryptoUtils","children":[{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"bytesToHex","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"}],"kind":"method","comment":"\nConvert a list of bytes (for example a message digest) into a hex\nstring.\n","id":"bytesToHex1()","line":"130"},{"isStatic":true,"returnType":{"name":"String","refId":"dart.core/String"},"name":"bytesToBase64","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"bytes","kind":"param","id":"bytes"},{"ref":{"name":"int","refId":"dart.core/int"},"isOptional":true,"name":"lineLength","kind":"param","id":"lineLength"}],"kind":"method","comment":"\nConverts a list of bytes (for example a message digest) into a\nbase64 encoded string optionally broken up in to lines of\n[lineLength] chars separated by '\\r\\n'.\n","id":"bytesToBase642()","line":"139"}],"kind":"class","comment":"\nUtility methods for working with message digests.\n","id":"CryptoUtils","line":"125"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"HMAC","children":[{"name":"add","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"data","kind":"param","id":"data"}],"kind":"method","comment":"\nAdd a list of bytes to the message.\n","id":"add1()","line":"96"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"close","kind":"method","comment":"\nPerform the actual computation and extract the message digest\nas a list of bytes.\n","id":"close0()","line":"102"},{"returnType":{"name":"bool","refId":"dart.core/bool"},"name":"verify","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"digest","kind":"param","id":"digest"}],"kind":"method","comment":"\nVerify that the HMAC computed for the data so far matches the\ngiven message digest.\n\nThis method should be used instead of memcmp-style comparisons\nto avoid leaking information via timing.\n\nThrows an exception if the given digest does not have the same\nsize as the digest computed by this HMAC instance.\n","id":"verify1()","line":"119"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"digest","kind":"property","comment":"\nExtract the message digest as a list of bytes without closing [this].\n","id":"digest","line":"107"},{"name":"HMAC","children":[{"ref":{"name":"Hash","refId":"dart.crypto/Hash"},"name":"hash","kind":"param","id":"hash"},{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"key","kind":"param","id":"key"}],"kind":"constructor","comment":"\nCreate an [HMAC] object from a [Hash] and a key.\n","id":"HMAC2()","line":"91"}],"kind":"class","comment":"\nHash-based Message Authentication Code support.\n\nThe [add] method is used to add data to the message. The [digest] and\n[close] methods are used to extract the message authentication code.\n","id":"HMAC","line":"87"},{"interfaces":[{"name":"Hash","refId":"dart.crypto/Hash"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"MD5","children":[{"name":"MD5","kind":"constructor","id":"MD50()","line":"77"}],"kind":"class","comment":"\nMD5 hash function implementation.\n\nWARNING: MD5 has known collisions and should only be used when\nrequired for backwards compatibility.\n","id":"MD5","line":"76"},{"interfaces":[{"name":"Hash","refId":"dart.crypto/Hash"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"SHA256","children":[{"name":"SHA256","kind":"constructor","id":"SHA2560()","line":"67"}],"kind":"class","comment":"\nSHA256 hash function implementation.\n","id":"SHA256","line":"66"},{"interfaces":[{"name":"Hash","refId":"dart.crypto/Hash"}],"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"SHA1","children":[{"name":"SHA1","kind":"constructor","id":"SHA10()","line":"60"}],"kind":"class","comment":"\nSHA1 hash function implementation.\n","id":"SHA1","line":"59"},{"superclass":{"name":"Object","refId":"dart.core/Object"},"isAbstract":true,"name":"Hash","children":[{"name":"add","children":[{"ref":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"data","kind":"param","id":"data"}],"kind":"method","comment":"\nAdd a list of bytes to the hash computation.\n","id":"add1()","line":"34"},{"returnType":{"name":"List","refId":"dart.core/List","arguments":[{"name":"int","refId":"dart.core/int"}]},"name":"close","kind":"method","comment":"\nFinish the hash computation and extract the message digest as\na list of bytes.\n","id":"close0()","line":"40"},{"returnType":{"name":"Hash","refId":"dart.crypto/Hash"},"name":"newInstance","kind":"method","comment":"\nReturns a new instance of this hash function.\n","id":"newInstance0()","line":"45"},{"ref":{"name":"int","refId":"dart.core/int"},"name":"blockSize","kind":"property","comment":"\nInternal block size of the hash in bytes.\n\nThis is exposed for use by the HMAC class which needs to know the\nblock size for the [Hash] it is using.\n","id":"blockSize","line":"53"}],"kind":"class","comment":"\nInterface for cryptographic hash functions.\n\nThe [add] method is used to add data to the hash. The [close] method\nis used to extract the message digest.\n\nOnce the [close] method has been called no more data can be added using the\n[add] method. If [add] is called after the first call to [close] a\nHashException is thrown.\n\nIf multiple instances of a given Hash is needed the [newInstance]\nmethod can provide a new instance.\n","id":"Hash","line":"30"}],"uri":"sdk/lib/crypto/crypto.dart","kind":"library","id":"dart.crypto","line":"5"}